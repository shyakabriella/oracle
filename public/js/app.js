/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scss_app_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scss/app.scss */ \"./src/scss/app.scss\");\n/* harmony import */ var _matter_min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matter.min.js */ \"./src/js/matter.min.js\");\n/* harmony import */ var _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_matter_min_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _faq_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./faq.js */ \"./src/js/faq.js\");\n/* harmony import */ var _faq_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_faq_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _fade_blocks_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fade-blocks.js */ \"./src/js/fade-blocks.js\");\n/* harmony import */ var _fade_blocks_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_fade_blocks_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _gravity_cta_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./gravity-cta.js */ \"./src/js/gravity-cta.js\");\n/* harmony import */ var _gravity_home_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./gravity-home.js */ \"./src/js/gravity-home.js\");\n/* harmony import */ var _gravity_fiber_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./gravity-fiber.js */ \"./src/js/gravity-fiber.js\");\n/* harmony import */ var _eligibility_form_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./eligibility-form.js */ \"./src/js/eligibility-form.js\");\n/* harmony import */ var _eligibility_form_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_eligibility_form_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _benefits_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./benefits.js */ \"./src/js/benefits.js\");\n/* harmony import */ var _benefits_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_benefits_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _menu_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./menu.js */ \"./src/js/menu.js\");\n/* harmony import */ var _menu_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_menu_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _contact_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contact.js */ \"./src/js/contact.js\");\n/* harmony import */ var _contact_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_contact_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _offers_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./offers.js */ \"./src/js/offers.js\");\n/* harmony import */ var _offers_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_offers_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _scroll_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./scroll.js */ \"./src/js/scroll.js\");\n/* harmony import */ var _scroll_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_scroll_js__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _nav_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./nav.js */ \"./src/js/nav.js\");\n/* harmony import */ var _nav_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_nav_js__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _tarteaucitron_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./tarteaucitron.js */ \"./src/js/tarteaucitron.js\");\n/* harmony import */ var _tarteaucitron_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_tarteaucitron_js__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _custom_select_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./custom-select.js */ \"./src/js/custom-select.js\");\n/* harmony import */ var _custom_select_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_custom_select_js__WEBPACK_IMPORTED_MODULE_15__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTBCO0FBRUQ7QUFFUDtBQUVRO0FBRUE7QUFFQztBQUVDO0FBRUc7QUFFUjtBQUVKO0FBRUc7QUFFRDtBQUVBO0FBRUg7QUFFVSIsInNvdXJjZXMiOlsid2VicGFjazovL0B3ZWFyZWF0aGxvbi9mcm9udGVuZC13ZWJwYWNrLWJvaWxlcnBsYXRlLy4vc3JjL2pzL2FwcC5qcz85MGU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi4vc2Nzcy9hcHAuc2Nzcyc7XG5cbmltcG9ydCAnLi9tYXR0ZXIubWluLmpzJztcblxuaW1wb3J0ICcuL2ZhcS5qcyc7XG5cbmltcG9ydCAnLi9mYWRlLWJsb2Nrcy5qcyc7XG5cbmltcG9ydCAnLi9ncmF2aXR5LWN0YS5qcyc7XG5cbmltcG9ydCAnLi9ncmF2aXR5LWhvbWUuanMnO1xuXG5pbXBvcnQgJy4vZ3Jhdml0eS1maWJlci5qcyc7XG5cbmltcG9ydCAnLi9lbGlnaWJpbGl0eS1mb3JtLmpzJztcblxuaW1wb3J0ICcuL2JlbmVmaXRzLmpzJztcblxuaW1wb3J0ICcuL21lbnUuanMnO1xuXG5pbXBvcnQgJy4vY29udGFjdC5qcyc7XG5cbmltcG9ydCAnLi9vZmZlcnMuanMnO1xuXG5pbXBvcnQgJy4vc2Nyb2xsLmpzJztcblxuaW1wb3J0ICcuL25hdi5qcyc7XG5cbmltcG9ydCAnLi90YXJ0ZWF1Y2l0cm9uLmpzJztcblxuaW1wb3J0ICcuL2N1c3RvbS1zZWxlY3QuanMnOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/app.js\n");

/***/ }),

/***/ "./src/js/benefits.js":
/*!****************************!*\
  !*** ./src/js/benefits.js ***!
  \****************************/
/***/ (() => {

eval("window.addEventListener('load', () => {\n  function handleBenefitsView() {\n    var handleScroll = event => {\n      checkVisibility();\n    };\n    var handleResize = () => {\n      checkVisibility();\n    };\n    function checkVisibility() {\n      var benefitsBoxElement = document.querySelector('#benefits-box');\n      if (!benefitsBoxElement) return;\n      if (benefitsBoxElement.children.length > 0) {\n        var index = 0;\n        for (var child of benefitsBoxElement.children) {\n          var {\n            y\n          } = child.getBoundingClientRect();\n\n          // setIndex(index, y);\n\n          y + 250 < window.innerHeight ? child.classList.add('visible') : child.classList.remove('visible');\n          index += 1;\n        }\n      }\n    }\n    window.addEventListener('scroll', handleScroll);\n    window.addEventListener('resize', handleResize);\n    checkVisibility();\n  }\n  handleBenefitsView();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYmVuZWZpdHMuanMuanMiLCJuYW1lcyI6WyJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlQmVuZWZpdHNWaWV3IiwiaGFuZGxlU2Nyb2xsIiwiZXZlbnQiLCJjaGVja1Zpc2liaWxpdHkiLCJoYW5kbGVSZXNpemUiLCJiZW5lZml0c0JveEVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjaGlsZHJlbiIsImxlbmd0aCIsImluZGV4IiwiY2hpbGQiLCJ5IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiaW5uZXJIZWlnaHQiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0B3ZWFyZWF0aGxvbi9mcm9udGVuZC13ZWJwYWNrLWJvaWxlcnBsYXRlLy4vc3JjL2pzL2JlbmVmaXRzLmpzPzM1ZDYiXSwic291cmNlc0NvbnRlbnQiOlsid2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gICAgZnVuY3Rpb24gaGFuZGxlQmVuZWZpdHNWaWV3KCkge1xuICAgICAgICBjb25zdCBoYW5kbGVTY3JvbGwgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGNoZWNrVmlzaWJpbGl0eSgpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IGhhbmRsZVJlc2l6ZSA9ICgpID0+IHtcbiAgICAgICAgICAgIGNoZWNrVmlzaWJpbGl0eSgpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGZ1bmN0aW9uIGNoZWNrVmlzaWJpbGl0eSgpIHtcbiAgICAgICAgICAgIGNvbnN0IGJlbmVmaXRzQm94RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNiZW5lZml0cy1ib3gnKTtcbiAgICAgICAgICAgIGlmICghYmVuZWZpdHNCb3hFbGVtZW50KSByZXR1cm47XG4gICAgICAgICAgICBpZiAoYmVuZWZpdHNCb3hFbGVtZW50LmNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBsZXQgaW5kZXggPSAwO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgYmVuZWZpdHNCb3hFbGVtZW50LmNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgeSB9ID0gY2hpbGQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gc2V0SW5kZXgoaW5kZXgsIHkpO1xuXG4gICAgICAgICAgICAgICAgICAgIHkgKyAyNTAgPCB3aW5kb3cuaW5uZXJIZWlnaHQgP1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQuY2xhc3NMaXN0LmFkZCgndmlzaWJsZScpIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkLmNsYXNzTGlzdC5yZW1vdmUoJ3Zpc2libGUnKTtcblxuICAgICAgICAgICAgICAgICAgICBpbmRleCArPSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBoYW5kbGVTY3JvbGwpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlUmVzaXplKTtcbiAgICAgICAgY2hlY2tWaXNpYmlsaXR5KCk7XG4gICAgfVxuXG4gICAgaGFuZGxlQmVuZWZpdHNWaWV3KCk7XG59KTsiXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxNQUFNO0VBQ2xDLFNBQVNDLGtCQUFrQixHQUFHO0lBQzFCLElBQU1DLFlBQVksR0FBSUMsS0FBSyxJQUFLO01BQzVCQyxlQUFlLEVBQUU7SUFDckIsQ0FBQztJQUVELElBQU1DLFlBQVksR0FBRyxNQUFNO01BQ3ZCRCxlQUFlLEVBQUU7SUFDckIsQ0FBQztJQUVELFNBQVNBLGVBQWUsR0FBRztNQUN2QixJQUFNRSxrQkFBa0IsR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsZUFBZSxDQUFDO01BQ2xFLElBQUksQ0FBQ0Ysa0JBQWtCLEVBQUU7TUFDekIsSUFBSUEsa0JBQWtCLENBQUNHLFFBQVEsQ0FBQ0MsTUFBTSxHQUFHLENBQUMsRUFBRTtRQUN4QyxJQUFJQyxLQUFLLEdBQUcsQ0FBQztRQUNiLEtBQUssSUFBTUMsS0FBSyxJQUFJTixrQkFBa0IsQ0FBQ0csUUFBUSxFQUFFO1VBQzdDLElBQU07WUFBRUk7VUFBRSxDQUFDLEdBQUdELEtBQUssQ0FBQ0UscUJBQXFCLEVBQUU7O1VBRTNDOztVQUVBRCxDQUFDLEdBQUcsR0FBRyxHQUFHZCxNQUFNLENBQUNnQixXQUFXLEdBQ3hCSCxLQUFLLENBQUNJLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLFNBQVMsQ0FBQyxHQUM5QkwsS0FBSyxDQUFDSSxTQUFTLENBQUNFLE1BQU0sQ0FBQyxTQUFTLENBQUM7VUFFckNQLEtBQUssSUFBSSxDQUFDO1FBQ2Q7TUFDSjtJQUNKO0lBRUFaLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUMsUUFBUSxFQUFFRSxZQUFZLENBQUM7SUFDL0NILE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUMsUUFBUSxFQUFFSyxZQUFZLENBQUM7SUFDL0NELGVBQWUsRUFBRTtFQUNyQjtFQUVBSCxrQkFBa0IsRUFBRTtBQUN4QixDQUFDLENBQUMifQ==\n//# sourceURL=webpack-internal:///./src/js/benefits.js\n");

/***/ }),

/***/ "./src/js/contact.js":
/*!***************************!*\
  !*** ./src/js/contact.js ***!
  \***************************/
/***/ (() => {

eval("window.addEventListener('load', () => {\n  function handleCollapsibleContact() {\n    var faqContainer = document.querySelector('#contact-container-agency-collapsible');\n    if (!faqContainer) return;\n    var coll = faqContainer.getElementsByClassName('collapsible');\n    var i;\n    for (i = 0; i < coll.length; i++) {\n      coll[i].addEventListener('click', function () {\n        this.classList.toggle('active');\n        var content = this.nextElementSibling;\n        if (content.style.height) {\n          content.style.height = null;\n        } else {\n          content.style.height = content.scrollHeight + 'px';\n        }\n      });\n    }\n  }\n  handleCollapsibleContact();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY29udGFjdC5qcy5qcyIsIm5hbWVzIjpbIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVDb2xsYXBzaWJsZUNvbnRhY3QiLCJmYXFDb250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb2xsIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImkiLCJsZW5ndGgiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJjb250ZW50IiwibmV4dEVsZW1lbnRTaWJsaW5nIiwic3R5bGUiLCJoZWlnaHQiLCJzY3JvbGxIZWlnaHQiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0B3ZWFyZWF0aGxvbi9mcm9udGVuZC13ZWJwYWNrLWJvaWxlcnBsYXRlLy4vc3JjL2pzL2NvbnRhY3QuanM/YWExNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHtcbiAgICBmdW5jdGlvbiBoYW5kbGVDb2xsYXBzaWJsZUNvbnRhY3QoKSB7XG4gICAgICAgIGNvbnN0IGZhcUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb250YWN0LWNvbnRhaW5lci1hZ2VuY3ktY29sbGFwc2libGUnKTtcbiAgICAgICAgaWYgKCFmYXFDb250YWluZXIpIHJldHVybjtcbiAgICAgICAgY29uc3QgY29sbCA9IGZhcUNvbnRhaW5lci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjb2xsYXBzaWJsZScpO1xuICAgICAgICBsZXQgaTtcblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY29sbC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29sbFtpXS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgbGV0IGNvbnRlbnQgPSB0aGlzLm5leHRFbGVtZW50U2libGluZztcblxuICAgICAgICAgICAgICAgIGlmIChjb250ZW50LnN0eWxlLmhlaWdodCkge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN0eWxlLmhlaWdodCA9IG51bGw7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5oZWlnaHQgPSBjb250ZW50LnNjcm9sbEhlaWdodCArICdweCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBoYW5kbGVDb2xsYXBzaWJsZUNvbnRhY3QoKTtcbn0pOyJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLE1BQU07RUFDbEMsU0FBU0Msd0JBQXdCLEdBQUc7SUFDaEMsSUFBTUMsWUFBWSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyx1Q0FBdUMsQ0FBQztJQUNwRixJQUFJLENBQUNGLFlBQVksRUFBRTtJQUNuQixJQUFNRyxJQUFJLEdBQUdILFlBQVksQ0FBQ0ksc0JBQXNCLENBQUMsYUFBYSxDQUFDO0lBQy9ELElBQUlDLENBQUM7SUFFTCxLQUFLQSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdGLElBQUksQ0FBQ0csTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtNQUM5QkYsSUFBSSxDQUFDRSxDQUFDLENBQUMsQ0FBQ1AsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQVc7UUFDekMsSUFBSSxDQUFDUyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDL0IsSUFBSUMsT0FBTyxHQUFHLElBQUksQ0FBQ0Msa0JBQWtCO1FBRXJDLElBQUlELE9BQU8sQ0FBQ0UsS0FBSyxDQUFDQyxNQUFNLEVBQUU7VUFDdEJILE9BQU8sQ0FBQ0UsS0FBSyxDQUFDQyxNQUFNLEdBQUcsSUFBSTtRQUMvQixDQUFDLE1BQU07VUFDSEgsT0FBTyxDQUFDRSxLQUFLLENBQUNDLE1BQU0sR0FBR0gsT0FBTyxDQUFDSSxZQUFZLEdBQUcsSUFBSTtRQUN0RDtNQUNKLENBQUMsQ0FBQztJQUNOO0VBQ0o7RUFFQWQsd0JBQXdCLEVBQUU7QUFDOUIsQ0FBQyxDQUFDIn0=\n//# sourceURL=webpack-internal:///./src/js/contact.js\n");

/***/ }),

/***/ "./src/js/custom-select.js":
/*!*********************************!*\
  !*** ./src/js/custom-select.js ***!
  \*********************************/
/***/ (() => {

eval("window.addEventListener('load', () => {\n  var x, i, j, l, ll, selElmnt, a, b, c;\n  /* Look for any elements with the class \"custom-select\": */\n  x = document.getElementsByClassName(\"custom-select\");\n  l = x.length;\n  for (i = 0; i < l; i++) {\n    selElmnt = x[i].getElementsByTagName(\"select\")[0];\n    ll = selElmnt.length;\n    /* For each element, create a new DIV that will act as the selected item: */\n    a = document.createElement(\"DIV\");\n    a.setAttribute(\"class\", \"select-selected\");\n    /* if (selElmnt.selectedIndex >= 0) {\n         a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;\n     }*/\n\n    /*  selElmnt.options.map(option => {\n          if (option.value === window.location.href) {\n              a.innerHTML = option.innerHTML;\n          }\n      });*/\n    x[i].appendChild(a);\n    /* For each element, create a new DIV that will contain the option list: */\n    b = document.createElement(\"DIV\");\n    b.setAttribute(\"class\", \"select-items select-hide\");\n    for (j = 0; j < ll; j++) {\n      if (window.location.href.indexOf(selElmnt.options[j].value) > -1) {\n        a.innerHTML = selElmnt.options[j].innerHTML;\n      }\n\n      /* For each option in the original select element,\n      create a new DIV that will act as an option item: */\n      c = document.createElement(\"DIV\");\n      c.innerHTML = selElmnt.options[j].innerHTML;\n      c.addEventListener(\"click\", function (e) {\n        /* When an item is clicked, update the original select box,\n        and the selected item: */\n        var y, i, k, s, h, sl, yl;\n        s = this.parentNode.parentNode.getElementsByTagName(\"select\")[0];\n        sl = s.length;\n        h = this.parentNode.previousSibling;\n        for (i = 0; i < sl; i++) {\n          if (s.options[i].innerHTML == this.innerHTML) {\n            s.value = s.options[i].value;\n            s.onchange();\n            h.innerHTML = this.innerHTML;\n            y = this.parentNode.getElementsByClassName(\"same-as-selected\");\n            yl = y.length;\n            for (k = 0; k < yl; k++) {\n              y[k].removeAttribute(\"class\");\n            }\n            this.setAttribute(\"class\", \"same-as-selected\");\n            break;\n          }\n        }\n        h.click();\n      });\n      b.appendChild(c);\n    }\n    x[i].appendChild(b);\n    a.addEventListener(\"click\", function (e) {\n      /* When the select box is clicked, close any other select boxes,\n      and open/close the current select box: */\n      e.stopPropagation();\n      closeAllSelect(this);\n      this.nextSibling.classList.toggle(\"select-hide\");\n      this.classList.toggle(\"select-arrow-active\");\n    });\n  }\n  function closeAllSelect(elmnt) {\n    /* A function that will close all select boxes in the document,\n    except the current select box: */\n    var x,\n      y,\n      i,\n      xl,\n      yl,\n      arrNo = [];\n    x = document.getElementsByClassName(\"select-items\");\n    y = document.getElementsByClassName(\"select-selected\");\n    xl = x.length;\n    yl = y.length;\n    for (i = 0; i < yl; i++) {\n      if (elmnt == y[i]) {\n        arrNo.push(i);\n      } else {\n        y[i].classList.remove(\"select-arrow-active\");\n      }\n    }\n    for (i = 0; i < xl; i++) {\n      if (arrNo.indexOf(i)) {\n        x[i].classList.add(\"select-hide\");\n      }\n    }\n  }\n\n  /* If the user clicks anywhere outside the select box,\n  then close all select boxes: */\n  document.addEventListener(\"click\", closeAllSelect);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/custom-select.js\n");

/***/ }),

/***/ "./src/js/eligibility-form.js":
/*!************************************!*\
  !*** ./src/js/eligibility-form.js ***!
  \************************************/
/***/ (() => {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction handleEligibilityForm() {\n  var currentStep = 1;\n  var stepCount = 3;\n  var goToStep2Button = document.querySelector('#go-to-step-2');\n  var goToStep1Button = document.querySelector('#go-to-step-1');\n  var goToStep3Button = document.querySelector('#go-to-step-3');\n  var goBackToStep2Button = document.querySelector('#go-back-to-step-2');\n  var sendEligibilityFormButton = document.querySelector('#send-eligibility-form');\n  var formHeader = document.querySelector('#eligibility-form-header-content');\n  if (!sendEligibilityFormButton) return;\n  var step1 = document.querySelector('#eligibility-form-container-step-1');\n  var step2 = document.querySelector('#eligibility-form-container-step-2');\n  var step3 = document.querySelector('#eligibility-form-container-step-3');\n  var address = document.querySelector('#step-1-address');\n  var city = document.querySelector('#step-1-city');\n  var lastname = document.querySelector('#step-2-lastname');\n  var firstname = document.querySelector('#step-2-firstname');\n  var phone = document.querySelector('#step-2-phone');\n  var email = document.querySelector('#step-2-email');\n  var addressInput = address.children[0].children[0];\n  var addressError = address.children[1];\n  var cityInput = city.children[0].children[0];\n  var cityError = city.children[1];\n  var lastnameInput = lastname.children[0].children[0];\n  var lastnameError = lastname.children[1];\n  var firstnameInput = firstname.children[0].children[0];\n  var firstnameError = firstname.children[1];\n  var phoneInput = phone.children[0].children[0];\n  var phoneError = phone.children[1];\n  var emailInput = email.children[0].children[0];\n  var emailError = email.children[1];\n  var subscribeYes = document.querySelector('#step-3-subscribe-yes');\n  var subscribeNo = document.querySelector('#step-3-subscribe-no');\n  var subscribeNumber = document.querySelector('#step-3-subscribe-number');\n  var subscribeNumberInput = subscribeNumber.children[0].children[0];\n  var formRecaptcha = document.querySelector('#step-3-recaptcha');\n  var otherKnowledgeItem = document.querySelector('#step-3-other-knowledge');\n  var otherKnowledge = document.querySelector('#connaissance_autre');\n  var otherKnowledgeText = otherKnowledgeItem.children[0].children[0];\n  var otherKnowledgeError = otherKnowledgeItem.children[1];\n  subscribeNo.checked = true;\n  subscribeYes.onclick = () => {\n    subscribeNo.checked = false;\n    subscribeNumber.style.display = 'flex';\n  };\n  subscribeNo.onclick = () => {\n    subscribeYes.checked = false;\n    subscribeNumber.style.display = 'none';\n    subscribeNumber.children[0].children[0].value = '';\n  };\n  otherKnowledge.onclick = () => {\n    if (otherKnowledge.checked) {\n      otherKnowledgeItem.style.display = 'flex';\n    } else {\n      otherKnowledgeItem.style.display = 'none';\n    }\n  };\n  step1.style.display = 'flex';\n  step2.style.display = 'none';\n  step3.style.display = 'none';\n  goToStep1Button.onclick = () => {\n    currentStep = 1;\n    step1.style.display = 'flex';\n    step2.style.display = 'none';\n    step3.style.display = 'none';\n    handleHeader();\n  };\n  goToStep2Button.onclick = () => {\n    if (!handleStep1()) return;\n    currentStep = 2;\n    step2.style.display = 'flex';\n    step1.style.display = 'none';\n    step3.style.display = 'none';\n    handleHeader();\n  };\n  goToStep3Button.onclick = () => {\n    if (!handleStep2()) return;\n    currentStep = 3;\n    step3.style.display = 'flex';\n    step1.style.display = 'none';\n    step2.style.display = 'none';\n    handleHeader();\n  };\n  goBackToStep2Button.onclick = () => {\n    currentStep = 2;\n    step2.style.display = 'flex';\n    step1.style.display = 'none';\n    step3.style.display = 'none';\n    handleHeader();\n  };\n  function handleHeader() {\n    formHeader.style.width = 100 / stepCount * currentStep + '%';\n    formHeader.children[0].textContent = \"\".concat(currentStep, \".\");\n    if (currentStep == 3) {\n      formHeader.classList.add('last-step');\n    } else {\n      formHeader.classList.remove('last-step');\n    }\n  }\n  addressInput.onfocus = () => {\n    address.classList.remove('error');\n  };\n  cityInput.onfocus = () => {\n    city.classList.remove('error');\n  };\n  lastnameInput.onfocus = () => {\n    lastname.classList.remove('error');\n  };\n  firstnameInput.onfocus = () => {\n    firstname.classList.remove('error');\n  };\n  phoneInput.onfocus = () => {\n    phone.classList.remove('error');\n  };\n  emailInput.onfocus = () => {\n    email.classList.remove('error');\n  };\n  otherKnowledgeText.onfocus = () => {\n    otherKnowledgeItem.classList.remove('error');\n  };\n  function handleStep1() {\n    var valid = true;\n    if (!addressInput.value) {\n      address.classList.add('error');\n      valid = false;\n    }\n    if (!cityInput.value) {\n      city.classList.add('error');\n      valid = false;\n    }\n    window.scrollTo(0, 0);\n    return valid;\n  }\n  function handleStep2() {\n    var valid = true;\n    if (!lastnameInput.value) {\n      lastname.classList.add('error');\n      valid = false;\n    }\n    if (!firstnameInput.value) {\n      firstname.classList.add('error');\n      valid = false;\n    }\n    if (!phoneInput.value) {\n      phone.classList.add('error');\n      valid = false;\n    }\n    var emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!emailRegex.test(emailInput.value)) {\n      email.classList.add('error');\n      valid = false;\n    }\n    if (!emailInput.value) {\n      email.classList.add('error');\n      valid = false;\n    }\n    window.scrollTo(0, 0);\n    return valid;\n  }\n  var inputOffers = document.getElementsByName('offre');\n  var inputOffersList = Array.prototype.slice.call(inputOffers);\n  inputOffersList.forEach(o => {\n    o.checked = true;\n    o.onclick = () => {\n      inputOffersList.forEach(io => {\n        io.checked = false;\n      });\n      o.checked = true;\n    };\n  });\n  sendEligibilityFormButton.onclick = () => {\n    var inputKnowledges = document.getElementsByName('connaissance[]');\n    var inputKnowledgesList = Array.prototype.slice.call(inputKnowledges).filter(k => k.checked);\n    var eligibilySection = document.querySelector('#eligibility');\n    var eligibilyFormSection = document.querySelector('#eligibility-form');\n    var successSection = document.querySelector('#eligibility-form-success');\n    var formData = new FormData();\n    formData.append('lang', document.querySelector('input#lang').value);\n    formData.append('adresse', addressInput.value);\n    formData.append('ville', cityInput.value);\n    formData.append('nom', lastnameInput.value);\n    formData.append('prenom', firstnameInput.value);\n    formData.append('telephone', phoneInput.value);\n    formData.append('email', emailInput.value);\n    formData.append('offre', inputOffersList.find(o => o.checked).value);\n    formData.append('abonne_canal_plus', subscribeYes.checked ? 'oui' : 'non');\n    formData.append('numero_abonne_canal_plus', subscribeYes.checked ? subscribeNumberInput.value : '');\n    formData.append('connaissance', inputKnowledgesList.map(k => k.value));\n    formData.append('text_connaissance_autre', otherKnowledge.checked ? otherKnowledgeText.value : '');\n    var grecaptchaResponse = grecaptcha.getResponse();\n    if (!grecaptchaResponse) {\n      formRecaptcha.classList.add('error');\n      return;\n    }\n\n    /*if (!otherKnowledgeText.value) {\n        otherKnowledgeItem.classList.add('error');\n        return;\n    }*/\n\n    formData.append('g-recaptcha-response', grecaptchaResponse);\n\n    //-- Log formData values\n    for (var value of formData.values()) {\n      console.log(value);\n    }\n    _asyncToGenerator(function* () {\n      var response = yield fetch(api.url_eligibility, {\n        method: 'POST',\n        body: formData\n      });\n      var {\n        data: {\n          status,\n          errors\n        }\n      } = yield response.json();\n      if (!errors) {\n        window.scrollTo(0, 0);\n        eligibilySection.style.display = 'none';\n        eligibilyFormSection.style.display = 'none';\n        successSection.style.display = 'flex';\n      }\n    })();\n  };\n}\nhandleEligibilityForm();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/eligibility-form.js\n");

/***/ }),

/***/ "./src/js/fade-blocks.js":
/*!*******************************!*\
  !*** ./src/js/fade-blocks.js ***!
  \*******************************/
/***/ (() => {

eval("function animateFadeBlocks() {\n  var activeFadeBlockIndex = 0;\n  var percentageScrolledByIndex = [];\n  var handleFadeBlocksScroll = event => {\n    var blocks = document.querySelector('#fade-blocks');\n    if (!blocks) return;\n    if (blocks.children.length > 0) {\n      var index = 0;\n      for (var child of blocks.children) {\n        var {\n          y,\n          height\n        } = child.getBoundingClientRect();\n        if (y >= 0 && y < height) {\n          activeFadeBlockIndex = index;\n          percentageScrolledByIndex[index] = (1 - y / height) * 100;\n        }\n        index += 1;\n      }\n      var elements = document.querySelectorAll('.fade-body-block');\n      var elementIndex = 0;\n      for (var element of elements) {\n        if (elementIndex == activeFadeBlockIndex) {\n          element.classList.add('visible');\n        } else {\n          element.classList.remove('visible');\n        }\n        elementIndex += 1;\n      }\n    }\n    animateBlockImage();\n  };\n  function animateBlockImage() {\n    // Fiable\n    var blockFiableBands1Element = document.querySelector('#fade-block-fiable-bands-1');\n    var blockFiableCircleElement = document.querySelector('#fade-block-fiable-circle');\n    var blockFiableBands2Element = document.querySelector('#fade-block-fiable-bands-2');\n    blockFiableBands1Element.style.marginTop = \"\".concat(200 - percentageScrolledByIndex[0] * 2, \"px\");\n    blockFiableCircleElement.style.marginBottom = \"\".concat(200 - percentageScrolledByIndex[0] * 2, \"px\");\n    blockFiableBands2Element.style.marginTop = \"\".concat(200 - percentageScrolledByIndex[0] * 2, \"px\");\n\n    // Fluide\n    var blockFluideBandElement = document.querySelector('#fade-block-fluide-band');\n    var blockFluideBlockElement = document.querySelector('#fade-block-fluide-block');\n    blockFluideBandElement.style.right = \"\".concat(100 - percentageScrolledByIndex[1] * 1.2, \"px\");\n    blockFluideBlockElement.style.marginTop = \"\".concat(100 / 4 - percentageScrolledByIndex[1] / 4, \"px\");\n\n    // Fun\n    var blockFunCirclesElement = document.querySelector('#fade-block-fun-circles');\n    var blockFunBlockElement = document.querySelector('#fade-block-fun-block');\n    blockFunCirclesElement.style.transform = \"rotate(\".concat(90 - percentageScrolledByIndex[2] * 0.9, \"deg)\");\n    blockFunBlockElement.style.transform = \"rotate(\".concat(9 - percentageScrolledByIndex[2] * 0.09, \"deg)\");\n  }\n  window.addEventListener('scroll', handleFadeBlocksScroll);\n}\nanimateFadeBlocks();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZmFkZS1ibG9ja3MuanMuanMiLCJuYW1lcyI6WyJhbmltYXRlRmFkZUJsb2NrcyIsImFjdGl2ZUZhZGVCbG9ja0luZGV4IiwicGVyY2VudGFnZVNjcm9sbGVkQnlJbmRleCIsImhhbmRsZUZhZGVCbG9ja3NTY3JvbGwiLCJldmVudCIsImJsb2NrcyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNoaWxkcmVuIiwibGVuZ3RoIiwiaW5kZXgiLCJjaGlsZCIsInkiLCJoZWlnaHQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJlbGVtZW50cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJlbGVtZW50SW5kZXgiLCJlbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwiYW5pbWF0ZUJsb2NrSW1hZ2UiLCJibG9ja0ZpYWJsZUJhbmRzMUVsZW1lbnQiLCJibG9ja0ZpYWJsZUNpcmNsZUVsZW1lbnQiLCJibG9ja0ZpYWJsZUJhbmRzMkVsZW1lbnQiLCJzdHlsZSIsIm1hcmdpblRvcCIsIm1hcmdpbkJvdHRvbSIsImJsb2NrRmx1aWRlQmFuZEVsZW1lbnQiLCJibG9ja0ZsdWlkZUJsb2NrRWxlbWVudCIsInJpZ2h0IiwiYmxvY2tGdW5DaXJjbGVzRWxlbWVudCIsImJsb2NrRnVuQmxvY2tFbGVtZW50IiwidHJhbnNmb3JtIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHdlYXJlYXRobG9uL2Zyb250ZW5kLXdlYnBhY2stYm9pbGVycGxhdGUvLi9zcmMvanMvZmFkZS1ibG9ja3MuanM/NGU2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhbmltYXRlRmFkZUJsb2NrcygpIHtcbiAgICBsZXQgYWN0aXZlRmFkZUJsb2NrSW5kZXggPSAwO1xuICAgIGxldCBwZXJjZW50YWdlU2Nyb2xsZWRCeUluZGV4ID0gW107XG5cbiAgICBjb25zdCBoYW5kbGVGYWRlQmxvY2tzU2Nyb2xsID0gKGV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmYWRlLWJsb2NrcycpO1xuXG4gICAgICAgIGlmICghYmxvY2tzKSByZXR1cm47XG4gICAgICAgIGlmIChibG9ja3MuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgbGV0IGluZGV4ID0gMDtcblxuICAgICAgICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiBibG9ja3MuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IHksIGhlaWdodCB9ID0gY2hpbGQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICAgICAgaWYgKHkgPj0gMCAmJiB5IDwgaGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZUZhZGVCbG9ja0luZGV4ID0gaW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIHBlcmNlbnRhZ2VTY3JvbGxlZEJ5SW5kZXhbaW5kZXhdID0gKDEgLSB5IC8gaGVpZ2h0KSAqIDEwMDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpbmRleCArPSAxO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBlbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5mYWRlLWJvZHktYmxvY2snKTtcblxuICAgICAgICAgICAgbGV0IGVsZW1lbnRJbmRleCA9IDA7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgZWxlbWVudHMpIHtcbiAgICAgICAgICAgICAgICBpZiAoZWxlbWVudEluZGV4ID09IGFjdGl2ZUZhZGVCbG9ja0luZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndmlzaWJsZScpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgndmlzaWJsZScpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGVsZW1lbnRJbmRleCArPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgYW5pbWF0ZUJsb2NrSW1hZ2UoKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gYW5pbWF0ZUJsb2NrSW1hZ2UoKSB7XG4gICAgICAgIC8vIEZpYWJsZVxuICAgICAgICBjb25zdCBibG9ja0ZpYWJsZUJhbmRzMUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgJyNmYWRlLWJsb2NrLWZpYWJsZS1iYW5kcy0xJ1xuICAgICAgICApO1xuICAgICAgICBjb25zdCBibG9ja0ZpYWJsZUNpcmNsZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgJyNmYWRlLWJsb2NrLWZpYWJsZS1jaXJjbGUnXG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IGJsb2NrRmlhYmxlQmFuZHMyRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICAnI2ZhZGUtYmxvY2stZmlhYmxlLWJhbmRzLTInXG4gICAgICAgICk7XG5cbiAgICAgICAgYmxvY2tGaWFibGVCYW5kczFFbGVtZW50LnN0eWxlLm1hcmdpblRvcCA9IGAke1xuICAgICAgICAgICAgMjAwIC0gcGVyY2VudGFnZVNjcm9sbGVkQnlJbmRleFswXSAqIDJcbiAgICAgICAgfXB4YDtcbiAgICAgICAgYmxvY2tGaWFibGVDaXJjbGVFbGVtZW50LnN0eWxlLm1hcmdpbkJvdHRvbSA9IGAke1xuICAgICAgICAgICAgMjAwIC0gcGVyY2VudGFnZVNjcm9sbGVkQnlJbmRleFswXSAqIDJcbiAgICAgICAgfXB4YDtcbiAgICAgICAgYmxvY2tGaWFibGVCYW5kczJFbGVtZW50LnN0eWxlLm1hcmdpblRvcCA9IGAke1xuICAgICAgICAgICAgMjAwIC0gcGVyY2VudGFnZVNjcm9sbGVkQnlJbmRleFswXSAqIDJcbiAgICAgICAgfXB4YDtcblxuICAgICAgICAvLyBGbHVpZGVcbiAgICAgICAgY29uc3QgYmxvY2tGbHVpZGVCYW5kRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICAnI2ZhZGUtYmxvY2stZmx1aWRlLWJhbmQnXG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IGJsb2NrRmx1aWRlQmxvY2tFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgICcjZmFkZS1ibG9jay1mbHVpZGUtYmxvY2snXG4gICAgICAgICk7XG5cbiAgICAgICAgYmxvY2tGbHVpZGVCYW5kRWxlbWVudC5zdHlsZS5yaWdodCA9IGAke1xuICAgICAgICAgICAgMTAwIC0gcGVyY2VudGFnZVNjcm9sbGVkQnlJbmRleFsxXSAqIDEuMlxuICAgICAgICB9cHhgO1xuICAgICAgICBibG9ja0ZsdWlkZUJsb2NrRWxlbWVudC5zdHlsZS5tYXJnaW5Ub3AgPSBgJHtcbiAgICAgICAgICAgIDEwMCAvIDQgLSBwZXJjZW50YWdlU2Nyb2xsZWRCeUluZGV4WzFdIC8gNFxuICAgICAgICB9cHhgO1xuXG4gICAgICAgIC8vIEZ1blxuICAgICAgICBjb25zdCBibG9ja0Z1bkNpcmNsZXNFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgICcjZmFkZS1ibG9jay1mdW4tY2lyY2xlcydcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgYmxvY2tGdW5CbG9ja0VsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgJyNmYWRlLWJsb2NrLWZ1bi1ibG9jaydcbiAgICAgICAgKTtcblxuICAgICAgICBibG9ja0Z1bkNpcmNsZXNFbGVtZW50LnN0eWxlLnRyYW5zZm9ybSA9IGByb3RhdGUoJHtcbiAgICAgICAgICAgIDkwIC0gcGVyY2VudGFnZVNjcm9sbGVkQnlJbmRleFsyXSAqIDAuOVxuICAgICAgICB9ZGVnKWA7XG4gICAgICAgIGJsb2NrRnVuQmxvY2tFbGVtZW50LnN0eWxlLnRyYW5zZm9ybSA9IGByb3RhdGUoJHtcbiAgICAgICAgICAgIDkgLSBwZXJjZW50YWdlU2Nyb2xsZWRCeUluZGV4WzJdICogMC4wOVxuICAgICAgICB9ZGVnKWA7XG4gICAgfVxuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZUZhZGVCbG9ja3NTY3JvbGwpO1xufVxuXG5hbmltYXRlRmFkZUJsb2NrcygpOyJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsaUJBQWlCLEdBQUc7RUFDekIsSUFBSUMsb0JBQW9CLEdBQUcsQ0FBQztFQUM1QixJQUFJQyx5QkFBeUIsR0FBRyxFQUFFO0VBRWxDLElBQU1DLHNCQUFzQixHQUFJQyxLQUFLLElBQUs7SUFDdEMsSUFBTUMsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxjQUFjLENBQUM7SUFFckQsSUFBSSxDQUFDRixNQUFNLEVBQUU7SUFDYixJQUFJQSxNQUFNLENBQUNHLFFBQVEsQ0FBQ0MsTUFBTSxHQUFHLENBQUMsRUFBRTtNQUM1QixJQUFJQyxLQUFLLEdBQUcsQ0FBQztNQUViLEtBQUssSUFBTUMsS0FBSyxJQUFJTixNQUFNLENBQUNHLFFBQVEsRUFBRTtRQUNqQyxJQUFNO1VBQUVJLENBQUM7VUFBRUM7UUFBTyxDQUFDLEdBQUdGLEtBQUssQ0FBQ0cscUJBQXFCLEVBQUU7UUFDbkQsSUFBSUYsQ0FBQyxJQUFJLENBQUMsSUFBSUEsQ0FBQyxHQUFHQyxNQUFNLEVBQUU7VUFDdEJaLG9CQUFvQixHQUFHUyxLQUFLO1VBQzVCUix5QkFBeUIsQ0FBQ1EsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUdFLENBQUMsR0FBR0MsTUFBTSxJQUFJLEdBQUc7UUFDN0Q7UUFFQUgsS0FBSyxJQUFJLENBQUM7TUFDZDtNQUVBLElBQU1LLFFBQVEsR0FBR1QsUUFBUSxDQUFDVSxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQztNQUU5RCxJQUFJQyxZQUFZLEdBQUcsQ0FBQztNQUNwQixLQUFLLElBQU1DLE9BQU8sSUFBSUgsUUFBUSxFQUFFO1FBQzVCLElBQUlFLFlBQVksSUFBSWhCLG9CQUFvQixFQUFFO1VBQ3RDaUIsT0FBTyxDQUFDQyxTQUFTLENBQUNDLEdBQUcsQ0FBQyxTQUFTLENBQUM7UUFDcEMsQ0FBQyxNQUFNO1VBQ0hGLE9BQU8sQ0FBQ0MsU0FBUyxDQUFDRSxNQUFNLENBQUMsU0FBUyxDQUFDO1FBQ3ZDO1FBRUFKLFlBQVksSUFBSSxDQUFDO01BQ3JCO0lBQ0o7SUFFQUssaUJBQWlCLEVBQUU7RUFDdkIsQ0FBQztFQUVELFNBQVNBLGlCQUFpQixHQUFHO0lBQ3pCO0lBQ0EsSUFBTUMsd0JBQXdCLEdBQUdqQixRQUFRLENBQUNDLGFBQWEsQ0FDbkQsNEJBQTRCLENBQy9CO0lBQ0QsSUFBTWlCLHdCQUF3QixHQUFHbEIsUUFBUSxDQUFDQyxhQUFhLENBQ25ELDJCQUEyQixDQUM5QjtJQUNELElBQU1rQix3QkFBd0IsR0FBR25CLFFBQVEsQ0FBQ0MsYUFBYSxDQUNuRCw0QkFBNEIsQ0FDL0I7SUFFRGdCLHdCQUF3QixDQUFDRyxLQUFLLENBQUNDLFNBQVMsYUFDcEMsR0FBRyxHQUFHekIseUJBQXlCLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUN0QztJQUNKc0Isd0JBQXdCLENBQUNFLEtBQUssQ0FBQ0UsWUFBWSxhQUN2QyxHQUFHLEdBQUcxQix5QkFBeUIsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLE9BQ3RDO0lBQ0p1Qix3QkFBd0IsQ0FBQ0MsS0FBSyxDQUFDQyxTQUFTLGFBQ3BDLEdBQUcsR0FBR3pCLHlCQUF5QixDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FDdEM7O0lBRUo7SUFDQSxJQUFNMkIsc0JBQXNCLEdBQUd2QixRQUFRLENBQUNDLGFBQWEsQ0FDakQseUJBQXlCLENBQzVCO0lBQ0QsSUFBTXVCLHVCQUF1QixHQUFHeEIsUUFBUSxDQUFDQyxhQUFhLENBQ2xELDBCQUEwQixDQUM3QjtJQUVEc0Isc0JBQXNCLENBQUNILEtBQUssQ0FBQ0ssS0FBSyxhQUM5QixHQUFHLEdBQUc3Qix5QkFBeUIsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLE9BQ3hDO0lBQ0o0Qix1QkFBdUIsQ0FBQ0osS0FBSyxDQUFDQyxTQUFTLGFBQ25DLEdBQUcsR0FBRyxDQUFDLEdBQUd6Qix5QkFBeUIsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLE9BQzFDOztJQUVKO0lBQ0EsSUFBTThCLHNCQUFzQixHQUFHMUIsUUFBUSxDQUFDQyxhQUFhLENBQ2pELHlCQUF5QixDQUM1QjtJQUNELElBQU0wQixvQkFBb0IsR0FBRzNCLFFBQVEsQ0FBQ0MsYUFBYSxDQUMvQyx1QkFBdUIsQ0FDMUI7SUFFRHlCLHNCQUFzQixDQUFDTixLQUFLLENBQUNRLFNBQVMsb0JBQ2xDLEVBQUUsR0FBR2hDLHlCQUF5QixDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsU0FDckM7SUFDTitCLG9CQUFvQixDQUFDUCxLQUFLLENBQUNRLFNBQVMsb0JBQ2hDLENBQUMsR0FBR2hDLHlCQUF5QixDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksU0FDckM7RUFDVjtFQUVBaUMsTUFBTSxDQUFDQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUVqQyxzQkFBc0IsQ0FBQztBQUM3RDtBQUVBSCxpQkFBaUIsRUFBRSJ9\n//# sourceURL=webpack-internal:///./src/js/fade-blocks.js\n");

/***/ }),

/***/ "./src/js/faq.js":
/*!***********************!*\
  !*** ./src/js/faq.js ***!
  \***********************/
/***/ (() => {

eval("window.addEventListener('load', () => {\n  function handleCollapsibleFaq() {\n    var faqContainer = document.querySelector('#faq-container');\n    if (!faqContainer) return;\n    var coll = faqContainer.getElementsByClassName('collapsible');\n    var i;\n    for (i = 0; i < coll.length; i++) {\n      coll[i].addEventListener('click', function () {\n        this.classList.toggle('active');\n        var content = this.nextElementSibling;\n        if (content.style.height) {\n          content.style.height = null;\n        } else {\n          content.style.height = content.scrollHeight + 30 + 'px';\n          if (this.parentNode.classList.contains('collapsible-content')) {\n            this.parentNode.style.height = 'auto';\n          }\n        }\n      });\n    }\n  }\n  handleCollapsibleFaq();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZmFxLmpzLmpzIiwibmFtZXMiOlsid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImhhbmRsZUNvbGxhcHNpYmxlRmFxIiwiZmFxQ29udGFpbmVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29sbCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJpIiwibGVuZ3RoIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiY29udGVudCIsIm5leHRFbGVtZW50U2libGluZyIsInN0eWxlIiwiaGVpZ2h0Iiwic2Nyb2xsSGVpZ2h0IiwicGFyZW50Tm9kZSIsImNvbnRhaW5zIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2VhcmVhdGhsb24vZnJvbnRlbmQtd2VicGFjay1ib2lsZXJwbGF0ZS8uL3NyYy9qcy9mYXEuanM/NDNiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHtcbiAgICBmdW5jdGlvbiBoYW5kbGVDb2xsYXBzaWJsZUZhcSgpIHtcbiAgICAgICAgY29uc3QgZmFxQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZhcS1jb250YWluZXInKTtcbiAgICAgICAgaWYgKCFmYXFDb250YWluZXIpIHJldHVybjtcbiAgICAgICAgY29uc3QgY29sbCA9IGZhcUNvbnRhaW5lci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjb2xsYXBzaWJsZScpO1xuICAgICAgICBsZXQgaTtcblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY29sbC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29sbFtpXS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAgIGxldCBjb250ZW50ID0gdGhpcy5uZXh0RWxlbWVudFNpYmxpbmc7XG5cbiAgICAgICAgICAgICAgICBpZiAoY29udGVudC5zdHlsZS5oZWlnaHQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5oZWlnaHQgPSBudWxsO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc3R5bGUuaGVpZ2h0ID0gY29udGVudC5zY3JvbGxIZWlnaHQgKyAzMCArICdweCc7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnBhcmVudE5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKCdjb2xsYXBzaWJsZS1jb250ZW50JykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFyZW50Tm9kZS5zdHlsZS5oZWlnaHQgPSAnYXV0byc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhhbmRsZUNvbGxhcHNpYmxlRmFxKCk7XG59KTsiXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxNQUFNO0VBQ2xDLFNBQVNDLG9CQUFvQixHQUFHO0lBQzVCLElBQU1DLFlBQVksR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsZ0JBQWdCLENBQUM7SUFDN0QsSUFBSSxDQUFDRixZQUFZLEVBQUU7SUFDbkIsSUFBTUcsSUFBSSxHQUFHSCxZQUFZLENBQUNJLHNCQUFzQixDQUFDLGFBQWEsQ0FBQztJQUMvRCxJQUFJQyxDQUFDO0lBRUwsS0FBS0EsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHRixJQUFJLENBQUNHLE1BQU0sRUFBRUQsQ0FBQyxFQUFFLEVBQUU7TUFDOUJGLElBQUksQ0FBQ0UsQ0FBQyxDQUFDLENBQUNQLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxZQUFZO1FBQzFDLElBQUksQ0FBQ1MsU0FBUyxDQUFDQyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQy9CLElBQUlDLE9BQU8sR0FBRyxJQUFJLENBQUNDLGtCQUFrQjtRQUVyQyxJQUFJRCxPQUFPLENBQUNFLEtBQUssQ0FBQ0MsTUFBTSxFQUFFO1VBQ3RCSCxPQUFPLENBQUNFLEtBQUssQ0FBQ0MsTUFBTSxHQUFHLElBQUk7UUFDL0IsQ0FBQyxNQUFNO1VBQ0hILE9BQU8sQ0FBQ0UsS0FBSyxDQUFDQyxNQUFNLEdBQUdILE9BQU8sQ0FBQ0ksWUFBWSxHQUFHLEVBQUUsR0FBRyxJQUFJO1VBQ3ZELElBQUksSUFBSSxDQUFDQyxVQUFVLENBQUNQLFNBQVMsQ0FBQ1EsUUFBUSxDQUFDLHFCQUFxQixDQUFDLEVBQUU7WUFDM0QsSUFBSSxDQUFDRCxVQUFVLENBQUNILEtBQUssQ0FBQ0MsTUFBTSxHQUFHLE1BQU07VUFDekM7UUFDSjtNQUNKLENBQUMsQ0FBQztJQUNOO0VBQ0o7RUFFQWIsb0JBQW9CLEVBQUU7QUFDMUIsQ0FBQyxDQUFDIn0=\n//# sourceURL=webpack-internal:///./src/js/faq.js\n");

/***/ }),

/***/ "./src/js/gravity-cta.js":
/*!*******************************!*\
  !*** ./src/js/gravity-cta.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/constants.js */ \"./src/js/utils/constants.js\");\n/* harmony import */ var _matter_min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matter.min.js */ \"./src/js/matter.min.js\");\n/* harmony import */ var _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_matter_min_js__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction animateGravityCta() {\n  var opacityPercent = 100;\n  var animating = false;\n  var scene = document.querySelector('#scene-cta-sticky-block');\n  var circle1Element = document.querySelector('#scene-cta-circle-1');\n  var circle2Element = document.querySelector('#scene-cta-circle-2');\n  var bandsLeft1Element = document.querySelector('#scene-cta-bands-left-1');\n  var bandsRight1Element = document.querySelector('#scene-cta-bands-right-1');\n  var bandsLeft2Element = document.querySelector('#scene-cta-bands-left-2');\n  var bandsRight2Element = document.querySelector('#scene-cta-bands-right-2');\n  var pinkBlockElement = document.querySelector('#scene-cta-block-pink');\n  var absoluteBlockElement = document.querySelector('#scene-cta-absolute-block');\n  function animate() {\n    var engine = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Engine.create();\n    var frameWidth = scene.clientWidth;\n    var frameHeight = scene.clientHeight;\n    var isMobile = frameWidth <= _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__.breakpoint;\n    var bandSize1 = {\n      width: 400,\n      height: 150\n    };\n    var bandsLeftBody = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(frameWidth / 2 - 200, frameHeight, bandSize1.width, bandSize1.height, {\n      isStatic: true,\n      angle: 1.3\n    });\n    bandsLeft1Element.classList.add('visible');\n    bandsRight1Element.classList.add('visible');\n    bandsLeft2Element.classList.add('visible');\n    bandsRight2Element.classList.add('visible');\n    var bandsLeft1 = {\n      body: bandsLeftBody,\n      elem: bandsLeft1Element,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem.style.top = \"\".concat(y - bandSize1.height / 2, \"px\");\n        this.elem.style.left = \"\".concat(x - bandSize1.width / 2, \"px\");\n        this.elem.style.width = \"\".concat(bandSize1.width, \"px\");\n        this.elem.style.height = \"\".concat(bandSize1.height, \"px\");\n        this.elem.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var bandsLeft2 = {\n      body: bandsLeftBody,\n      elem: bandsLeft2Element,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem.style.top = \"\".concat(y - bandSize1.height / 2, \"px\");\n        this.elem.style.left = \"\".concat(x - bandSize1.width / 2, \"px\");\n        this.elem.style.width = \"\".concat(bandSize1.width, \"px\");\n        this.elem.style.height = \"\".concat(bandSize1.height, \"px\");\n        this.elem.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var bandSize2 = {\n      width: frameWidth,\n      height: 150\n    };\n    var bandsRightBody = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(frameWidth + 50, frameHeight - 100, frameWidth, bandSize2.height, {\n      isStatic: true,\n      angle: 0.2\n    });\n    var bandsRight1 = {\n      body: bandsRightBody,\n      elem: bandsRight1Element,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem.style.top = \"\".concat(y - bandSize2.height / 2, \"px\");\n        this.elem.style.left = \"\".concat(x - bandSize2.width / 2, \"px\");\n        this.elem.style.width = \"\".concat(bandSize2.width, \"px\");\n        this.elem.style.height = \"\".concat(bandSize2.height, \"px\");\n        this.elem.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var bandsRight2 = {\n      body: bandsRightBody,\n      elem: bandsRight2Element,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem.style.top = \"\".concat(y - bandSize2.height / 2, \"px\");\n        this.elem.style.left = \"\".concat(x - bandSize2.width / 2, \"px\");\n        this.elem.style.width = \"\".concat(bandSize2.width, \"px\");\n        this.elem.style.height = \"\".concat(bandSize2.height, \"px\");\n        this.elem.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var circleWidth = 172;\n    var circleBody1 = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.circle(frameWidth / 2, 0, circleWidth / 2, {\n      density: 0.01,\n      friction: 0.1,\n      frictionStatic: 0.5,\n      frictionAir: 0.03,\n      restitution: 0.7,\n      inertia: Infinity\n    });\n    var circle1 = {\n      body: circleBody1,\n      elem1: circle1Element,\n      elem2: circle2Element,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem1.style.display = 'flex';\n        this.elem1.style.top = \"\".concat(y - circleWidth / 2, \"px\");\n        this.elem1.style.left = \"\".concat(x - circleWidth / 2, \"px\");\n        this.elem1.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n        this.elem2.style.display = 'flex';\n        this.elem2.style.top = \"\".concat(y - circleWidth / 2, \"px\");\n        this.elem2.style.left = \"\".concat(x - circleWidth / 2, \"px\");\n        this.elem2.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var ground = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(frameWidth / 2, frameHeight + 25, frameWidth, 50, {\n      isStatic: true,\n      restitution: 0\n    });\n    _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().World.add(engine.world, [\n    // ground,\n    bandsLeft1.body, bandsLeft2.body, bandsRight1.body, bandsRight2.body, circle1.body, ground]);\n    (function rerender() {\n      _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Engine.update(engine);\n      bandsLeft1.render();\n      bandsLeft2.render();\n      bandsRight1.render();\n      bandsRight2.render();\n      circle1.render();\n      _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Engine.update(engine);\n      requestAnimationFrame(rerender);\n    })();\n  }\n  var handleScroll = event => {\n    if (!pinkBlockElement) return;\n    var {\n      bottom,\n      y\n    } = pinkBlockElement.getBoundingClientRect();\n    var clientHeight = window.innerHeight;\n    var top = clientHeight - bottom;\n    var {\n      bottom: bottomSticky,\n      y: ySticky\n    } = scene.getBoundingClientRect();\n    var percentage = top / -bottomSticky * 2 * 100;\n    opacityPercent = percentage;\n    absoluteBlockElement.style.opacity = \"\".concat(percentage, \"%\");\n    if (animating) return;\n    if (ySticky == 0) animating = true;\n    if (animating) {\n      animate();\n      bandsLeft1Element.style.opacity = 1;\n      bandsLeft2Element.style.opacity = 1;\n      bandsRight1Element.style.opacity = 1;\n      bandsRight2Element.style.opacity = 1;\n    }\n  };\n  window.addEventListener('scroll', handleScroll);\n}\nanimateGravityCta();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/gravity-cta.js\n");

/***/ }),

/***/ "./src/js/gravity-fiber.js":
/*!*********************************!*\
  !*** ./src/js/gravity-fiber.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/constants.js */ \"./src/js/utils/constants.js\");\n/* harmony import */ var _matter_min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matter.min.js */ \"./src/js/matter.min.js\");\n/* harmony import */ var _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_matter_min_js__WEBPACK_IMPORTED_MODULE_1__);\n\n\nwindow.addEventListener('load', () => {\n  function animateGravityFiber() {\n    var engine = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Engine.create();\n    var scene = document.querySelector('#scene-fiber');\n    var circleElement = document.querySelector('#scene-fiber-circle');\n    var bandsElement = document.querySelector('#scene-fiber-bands');\n    var fiberContainerElement = document.querySelector('#scene-fiber-container');\n    if (!scene) return;\n    scene.classList.add('visible');\n    var frameWidth = scene.clientWidth;\n    var frameHeight = scene.clientHeight;\n    bandsElement.classList.add('visible');\n    fiberContainerElement.classList.add('visible');\n    var render = _matter_min_js__WEBPACK_IMPORTED_MODULE_1__.Render.create({\n      element: scene,\n      engine: engine,\n      options: {\n        width: frameWidth,\n        height: frameHeight,\n        wireframes: false,\n        background: 'transparent'\n      }\n    });\n    var isMobile = frameWidth <= _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__.breakpoint;\n    var polygonSize = 250;\n    var vertex = [{\n      x: 0,\n      y: polygonSize\n    }, {\n      x: polygonSize,\n      y: polygonSize\n    }, {\n      x: polygonSize,\n      y: 0\n    }];\n    var polygon1 = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.fromVertices(frameWidth / 2, -500, vertex, {\n      density: 0.001,\n      friction: 0.1,\n      frictionStatic: 0.5,\n      frictionAir: 0.015,\n      restitution: 0,\n      angle: -0.7,\n      render: {\n        fillStyle: '#00BD80'\n      }\n    });\n    var polygon2 = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.fromVertices(frameWidth / 2 + 50, -1000, vertex, {\n      density: 0.001,\n      friction: 0.1,\n      frictionStatic: 0.5,\n      frictionAir: 0.015,\n      restitution: 0,\n      angle: -0.4,\n      render: {\n        fillStyle: '#00BD80'\n      }\n    });\n    var circleWidth = 172;\n    var circle = {\n      body: _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.circle(frameWidth / 2 - 40, -100, circleWidth / 2, {\n        density: 0.001,\n        friction: 0.1,\n        frictionStatic: 0.5,\n        frictionAir: 0.01,\n        restitution: 0,\n        inertia: Infinity,\n        render: {\n          visible: false\n        }\n      }),\n      elem: circleElement,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem.style.top = \"\".concat(y - circleWidth / 2, \"px\");\n        this.elem.style.left = \"\".concat(x - circleWidth / 2, \"px\");\n        this.elem.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var bandSize = {\n      width: 300,\n      height: 310\n    };\n    var bandsLeft = {\n      body: _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(frameWidth / 2 - 200, frameHeight, bandSize.width, bandSize.height, {\n        isStatic: true,\n        angle: 1.4,\n        render: {\n          visible: false\n        }\n      }),\n      elem: bandsElement,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem.style.top = \"\".concat(y - bandSize.height / 2, \"px\");\n        this.elem.style.left = \"\".concat(x - bandSize.width / 2, \"px\");\n        this.elem.style.width = \"\".concat(bandSize.width, \"px\");\n        this.elem.style.height = \"\".concat(bandSize.height, \"px\");\n        this.elem.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var wallRight = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(isMobile ? frameWidth + 25 : frameWidth / 2 + 200, frameHeight / 2, 50, frameHeight, {\n      isStatic: true,\n      restitution: 0,\n      render: {\n        visible: false\n      }\n    });\n    var wallLeft = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(-25, frameHeight / 2, 50, frameHeight, {\n      isStatic: true,\n      restitution: 0,\n      render: {\n        visible: false\n      }\n    });\n    var ground = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(frameWidth / 2, frameHeight + 25, frameWidth, 50, {\n      isStatic: true,\n      restitution: 0\n    });\n    var scrollBlock = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(frameWidth - 20, frameHeight - 50, 40, 100, {\n      isStatic: true,\n      restitution: 0,\n      render: {\n        visible: false\n      }\n    });\n    _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().World.add(engine.world, [ground, scrollBlock, wallRight, wallLeft, bandsLeft.body, polygon1, polygon2, circle.body]);\n    _matter_min_js__WEBPACK_IMPORTED_MODULE_1__.Render.run(render);\n    (function rerender() {\n      circle.render();\n      bandsLeft.render();\n      _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Engine.update(engine);\n      requestAnimationFrame(rerender);\n    })();\n  }\n  animateGravityFiber();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/gravity-fiber.js\n");

/***/ }),

/***/ "./src/js/gravity-home.js":
/*!********************************!*\
  !*** ./src/js/gravity-home.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/constants.js */ \"./src/js/utils/constants.js\");\n/* harmony import */ var _matter_min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matter.min.js */ \"./src/js/matter.min.js\");\n/* harmony import */ var _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_matter_min_js__WEBPACK_IMPORTED_MODULE_1__);\n\n\nwindow.addEventListener('load', () => {\n  function animateGravityHome() {\n    var cookieBoxVisible = true;\n    var engine = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Engine.create();\n    var scene = document.querySelector('#scene');\n    if (!scene) return;\n    scene.classList.add('visible');\n    var boxElement = document.querySelector('#scene-box');\n    var circleElement = document.querySelector('#scene-circle');\n    var cookieBoxElement = document.querySelector('#tarteaucitronAlertBig');\n    var bandsLeftElement = document.querySelector('#scene-bands-left');\n    var bandsRightElement = document.querySelector('#scene-bands-right');\n    var cookieboxSettingsButton = document.querySelector('#tarteaucitronCloseAlert');\n    var cookieboxAllowButtons = document.querySelectorAll('.tarteaucitronServiceInputCheckbox');\n    // const cookieboxDenyButtons =\n    //     document.querySelector('#tarteaucitronPersonalize');\n\n    var cookieboxAllowAllButton = document.querySelector('#tarteaucitronPersonalize');\n    function hideCookieBox() {\n      cookieBoxVisible = false;\n      cookieBoxElement.style.opacity = 0;\n      cookieBoxElement.setAttribute('style', 'display: none');\n    }\n    var oldOnClick = cookieboxAllowAllButton.onclick;\n    cookieboxAllowAllButton.onclick = () => {\n      hideCookieBox();\n      oldOnClick();\n      cookieBoxElement.setAttribute('style', 'display: none');\n    };\n    if (!scene) return;\n    if (cookieBoxElement.style.display == 'none') {\n      cookieBoxVisible = false;\n    }\n    var frameWidth = scene.clientWidth;\n    var frameHeight = scene.clientHeight;\n    bandsLeftElement.classList.add('visible');\n    bandsRightElement.classList.add('visible');\n    var isMobile = frameWidth <= _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__.breakpoint;\n    var boxSize = isMobile ? 250 : 475;\n    var box = {\n      body: _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(frameWidth / 2, -1000, boxSize, boxSize, {\n        density: 0.001,\n        friction: 0.1,\n        frictionStatic: 0.5,\n        frictionAir: 0.015,\n        restitution: 0,\n        angle: -0.11\n      }),\n      elem: boxElement,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem.style.top = \"\".concat(y - boxSize / 2, \"px\");\n        this.elem.style.left = \"\".concat(x - boxSize / 2, \"px\");\n        this.elem.style.width = \"\".concat(boxSize, \"px\");\n        this.elem.style.height = \"\".concat(boxSize, \"px\");\n        this.elem.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var circleWidth = 172;\n    var circle = {\n      body: _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.circle(isMobile ? frameWidth / 2 - 100 : frameWidth / 2 - 200, -100, circleWidth / 2, {\n        density: 0.001,\n        friction: 0.1,\n        frictionStatic: 0.5,\n        frictionAir: 0.01,\n        restitution: 0,\n        inertia: Infinity\n      }),\n      elem: circleElement,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem.style.top = \"\".concat(y - circleWidth / 2, \"px\");\n        this.elem.style.left = \"\".concat(x - circleWidth / 2, \"px\");\n        this.elem.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var cookieBoxSize = {\n      width: isMobile ? frameWidth : 520,\n      height: isMobile ? 130 : 150\n    };\n    var cookieBox = {\n      body: _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(isMobile ? frameWidth / 2 : frameWidth / 2 - 100, frameHeight - cookieBoxSize.height / 2, cookieBoxSize.width, cookieBoxSize.height, {\n        isStatic: true\n      }),\n      elem: cookieBoxElement,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem.style.position = 'absolute';\n        this.elem.style.top = \"\".concat(y - cookieBoxSize.height / 2, \"px\");\n        this.elem.style.left = \"\".concat(x - cookieBoxSize.width / 2, \"px\");\n        this.elem.style.width = \"\".concat(cookieBoxSize.width, \"px\");\n        this.elem.style.height = \"\".concat(cookieBoxSize.height, \"px\");\n        this.elem.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var bandSize = {\n      width: frameWidth / 2,\n      height: isMobile ? 200 : 310\n    };\n    var bandsLeft = {\n      body: _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(isMobile ? bandSize.width / 2 - 145 : bandSize.width / 2 - 237, isMobile ? frameHeight - bandSize.height - 50 : frameHeight - bandSize.height, bandSize.width, bandSize.height, {\n        isStatic: true,\n        angle: -0.15\n      }),\n      elem: bandsLeftElement,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem.style.top = \"\".concat(y - bandSize.height / 2, \"px\");\n        this.elem.style.left = \"\".concat(x - bandSize.width / 2, \"px\");\n        this.elem.style.width = \"\".concat(bandSize.width, \"px\");\n        this.elem.style.height = \"\".concat(bandSize.height, \"px\");\n        this.elem.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var bandsRight = {\n      body: _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(isMobile ? frameWidth - bandSize.width / 2 + 125 : frameWidth - bandSize.width / 2 + 105, isMobile ? frameHeight - 200 : frameHeight - 290, bandSize.width, bandSize.height, {\n        isStatic: true,\n        angle: -0.15,\n        restitution: 0\n      }),\n      elem: bandsRightElement,\n      render() {\n        var {\n          x,\n          y\n        } = this.body.position;\n        this.elem.style.top = \"\".concat(y - bandSize.height / 2, \"px\");\n        this.elem.style.left = \"\".concat(x - bandSize.width / 2, \"px\");\n        this.elem.style.width = \"\".concat(bandSize.width, \"px\");\n        this.elem.style.height = \"\".concat(bandSize.height, \"px\");\n        this.elem.style.transform = \"rotate(\".concat(this.body.angle, \"rad)\");\n      }\n    };\n    var bands3 = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(frameWidth - bandSize.width / 2 + 140, frameHeight - circleWidth + bandSize.height / 2 - 30, bandSize.width, bandSize.height, {\n      isStatic: true,\n      angle: -0.15,\n      restitution: 0\n    });\n    var ground = _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Bodies.rectangle(frameWidth / 2, frameHeight + 25, frameWidth, 50, {\n      isStatic: true,\n      restitution: 0\n    });\n    var defaultCategory = 0x0001,\n      squareCategory = 0x0002;\n    box.body.collisionFilter = {\n      group: 0,\n      category: squareCategory,\n      mask: defaultCategory\n    };\n    bandsRight.body.collisionFilter = {\n      group: 0,\n      category: squareCategory,\n      mask: defaultCategory\n    };\n    _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().World.add(engine.world, [ground, bandsLeft.body, bandsRight.body, bands3, box.body, circle.body, cookieBox.body]);\n\n    // setEngine(engine);\n\n    (function rerender() {\n      box.render();\n      circle.render();\n      bandsLeft.render();\n      bandsRight.render();\n      cookieBox.render();\n      if (cookieBoxElement.style.display == 'none') {\n        _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().World.remove(engine.world, cookieBox.body);\n      } else {\n        cookieBox && cookieBox.render();\n      }\n      _matter_min_js__WEBPACK_IMPORTED_MODULE_1___default().Engine.update(engine);\n      requestAnimationFrame(rerender);\n    })();\n  }\n  var rgpdInterval = setInterval(() => {\n    var cookieBoxElement = document.querySelector('#tarteaucitronAlertBig');\n    if (cookieBoxElement) {\n      animateGravityHome();\n      clearInterval(rgpdInterval);\n    }\n  }, 250);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/gravity-home.js\n");

/***/ }),

/***/ "./src/js/matter.min.js":
/*!******************************!*\
  !*** ./src/js/matter.min.js ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n * matter-js 0.17.1 by @liabru\n * http://brm.io/matter-js/\n * License MIT\n */\n!function (e, t) {\n   true ? module.exports = t() : 0;\n}(this, function () {\n  return function (e) {\n    var t = {};\n    function n(i) {\n      if (t[i]) return t[i].exports;\n      var o = t[i] = {\n        i: i,\n        l: !1,\n        exports: {}\n      };\n      return e[i].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\n    }\n    return n.m = e, n.c = t, n.d = function (e, t, i) {\n      n.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: i\n      });\n    }, n.r = function (e) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    }, n.t = function (e, t) {\n      if (1 & t && (e = n(e)), 8 & t) return e;\n      if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n      var i = Object.create(null);\n      if (n.r(i), Object.defineProperty(i, \"default\", {\n        enumerable: !0,\n        value: e\n      }), 2 & t && \"string\" != typeof e) for (var o in e) {\n        n.d(i, o, function (t) {\n          return e[t];\n        }.bind(null, o));\n      }\n      return i;\n    }, n.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return n.d(t, \"a\", t), t;\n    }, n.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, n.p = \"\", n(n.s = 22);\n  }([function (e, t) {\n    var n = {};\n    e.exports = n, function () {\n      n._nextId = 0, n._seed = 0, n._nowStartTime = +new Date(), n._warnedOnce = {}, n._decomp = null, n.extend = function (e, t) {\n        var i, o;\n        \"boolean\" == typeof t ? (i = 2, o = t) : (i = 1, o = !0);\n        for (var r = i; r < arguments.length; r++) {\n          var a = arguments[r];\n          if (a) for (var s in a) {\n            o && a[s] && a[s].constructor === Object ? e[s] && e[s].constructor !== Object ? e[s] = a[s] : (e[s] = e[s] || {}, n.extend(e[s], o, a[s])) : e[s] = a[s];\n          }\n        }\n        return e;\n      }, n.clone = function (e, t) {\n        return n.extend({}, t, e);\n      }, n.keys = function (e) {\n        if (Object.keys) return Object.keys(e);\n        var t = [];\n        for (var n in e) {\n          t.push(n);\n        }\n        return t;\n      }, n.values = function (e) {\n        var t = [];\n        if (Object.keys) {\n          for (var n = Object.keys(e), i = 0; i < n.length; i++) {\n            t.push(e[n[i]]);\n          }\n          return t;\n        }\n        for (var o in e) {\n          t.push(e[o]);\n        }\n        return t;\n      }, n.get = function (e, t, n, i) {\n        t = t.split(\".\").slice(n, i);\n        for (var o = 0; o < t.length; o += 1) {\n          e = e[t[o]];\n        }\n        return e;\n      }, n.set = function (e, t, i, o, r) {\n        var a = t.split(\".\").slice(o, r);\n        return n.get(e, t, 0, -1)[a[a.length - 1]] = i, i;\n      }, n.shuffle = function (e) {\n        for (var t = e.length - 1; t > 0; t--) {\n          var i = Math.floor(n.random() * (t + 1)),\n            o = e[t];\n          e[t] = e[i], e[i] = o;\n        }\n        return e;\n      }, n.choose = function (e) {\n        return e[Math.floor(n.random() * e.length)];\n      }, n.isElement = function (e) {\n        return \"undefined\" != typeof HTMLElement ? e instanceof HTMLElement : !!(e && e.nodeType && e.nodeName);\n      }, n.isArray = function (e) {\n        return \"[object Array]\" === Object.prototype.toString.call(e);\n      }, n.isFunction = function (e) {\n        return \"function\" == typeof e;\n      }, n.isPlainObject = function (e) {\n        return \"object\" == typeof e && e.constructor === Object;\n      }, n.isString = function (e) {\n        return \"[object String]\" === toString.call(e);\n      }, n.clamp = function (e, t, n) {\n        return e < t ? t : e > n ? n : e;\n      }, n.sign = function (e) {\n        return e < 0 ? -1 : 1;\n      }, n.now = function () {\n        if (\"undefined\" != typeof window && window.performance) {\n          if (window.performance.now) return window.performance.now();\n          if (window.performance.webkitNow) return window.performance.webkitNow();\n        }\n        return Date.now ? Date.now() : new Date() - n._nowStartTime;\n      }, n.random = function (t, n) {\n        return n = void 0 !== n ? n : 1, (t = void 0 !== t ? t : 0) + e() * (n - t);\n      };\n      var e = function e() {\n        return n._seed = (9301 * n._seed + 49297) % 233280, n._seed / 233280;\n      };\n      n.colorToNumber = function (e) {\n        return 3 == (e = e.replace(\"#\", \"\")).length && (e = e.charAt(0) + e.charAt(0) + e.charAt(1) + e.charAt(1) + e.charAt(2) + e.charAt(2)), parseInt(e, 16);\n      }, n.logLevel = 1, n.log = function () {\n        console && n.logLevel > 0 && n.logLevel <= 3 && console.log.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)));\n      }, n.info = function () {\n        console && n.logLevel > 0 && n.logLevel <= 2 && console.info.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)));\n      }, n.warn = function () {\n        console && n.logLevel > 0 && n.logLevel <= 3 && console.warn.apply(console, [\"matter-js:\"].concat(Array.prototype.slice.call(arguments)));\n      }, n.warnOnce = function () {\n        var e = Array.prototype.slice.call(arguments).join(\" \");\n        n._warnedOnce[e] || (n.warn(e), n._warnedOnce[e] = !0);\n      }, n.deprecated = function (e, t, i) {\n        e[t] = n.chain(function () {\n          n.warnOnce(\"🔅 deprecated 🔅\", i);\n        }, e[t]);\n      }, n.nextId = function () {\n        return n._nextId++;\n      }, n.indexOf = function (e, t) {\n        if (e.indexOf) return e.indexOf(t);\n        for (var n = 0; n < e.length; n++) {\n          if (e[n] === t) return n;\n        }\n        return -1;\n      }, n.map = function (e, t) {\n        if (e.map) return e.map(t);\n        for (var n = [], i = 0; i < e.length; i += 1) {\n          n.push(t(e[i]));\n        }\n        return n;\n      }, n.topologicalSort = function (e) {\n        var t = [],\n          i = [],\n          o = [];\n        for (var r in e) {\n          i[r] || o[r] || n._topologicalSort(r, i, o, e, t);\n        }\n        return t;\n      }, n._topologicalSort = function (e, t, i, o, r) {\n        var a = o[e] || [];\n        i[e] = !0;\n        for (var s = 0; s < a.length; s += 1) {\n          var l = a[s];\n          i[l] || t[l] || n._topologicalSort(l, t, i, o, r);\n        }\n        i[e] = !1, t[e] = !0, r.push(e);\n      }, n.chain = function () {\n        for (var e = [], t = 0; t < arguments.length; t += 1) {\n          var n = arguments[t];\n          n._chained ? e.push.apply(e, n._chained) : e.push(n);\n        }\n        var i = function i() {\n          for (var t, n = new Array(arguments.length), i = 0, o = arguments.length; i < o; i++) {\n            n[i] = arguments[i];\n          }\n          for (i = 0; i < e.length; i += 1) {\n            var r = e[i].apply(t, n);\n            void 0 !== r && (t = r);\n          }\n          return t;\n        };\n        return i._chained = e, i;\n      }, n.chainPathBefore = function (e, t, i) {\n        return n.set(e, t, n.chain(i, n.get(e, t)));\n      }, n.chainPathAfter = function (e, t, i) {\n        return n.set(e, t, n.chain(n.get(e, t), i));\n      }, n.setDecomp = function (e) {\n        n._decomp = e;\n      }, n.getDecomp = function () {\n        var e = n._decomp;\n        try {\n          e || \"undefined\" == typeof window || (e = window.decomp), e || \"undefined\" == typeof __webpack_require__.g || (e = __webpack_require__.g.decomp);\n        } catch (t) {\n          e = null;\n        }\n        return e;\n      };\n    }();\n  }, function (e, t) {\n    var n = {};\n    e.exports = n, n.create = function (e) {\n      var t = {\n        min: {\n          x: 0,\n          y: 0\n        },\n        max: {\n          x: 0,\n          y: 0\n        }\n      };\n      return e && n.update(t, e), t;\n    }, n.update = function (e, t, n) {\n      e.min.x = 1 / 0, e.max.x = -1 / 0, e.min.y = 1 / 0, e.max.y = -1 / 0;\n      for (var i = 0; i < t.length; i++) {\n        var o = t[i];\n        o.x > e.max.x && (e.max.x = o.x), o.x < e.min.x && (e.min.x = o.x), o.y > e.max.y && (e.max.y = o.y), o.y < e.min.y && (e.min.y = o.y);\n      }\n      n && (n.x > 0 ? e.max.x += n.x : e.min.x += n.x, n.y > 0 ? e.max.y += n.y : e.min.y += n.y);\n    }, n.contains = function (e, t) {\n      return t.x >= e.min.x && t.x <= e.max.x && t.y >= e.min.y && t.y <= e.max.y;\n    }, n.overlaps = function (e, t) {\n      return e.min.x <= t.max.x && e.max.x >= t.min.x && e.max.y >= t.min.y && e.min.y <= t.max.y;\n    }, n.translate = function (e, t) {\n      e.min.x += t.x, e.max.x += t.x, e.min.y += t.y, e.max.y += t.y;\n    }, n.shift = function (e, t) {\n      var n = e.max.x - e.min.x,\n        i = e.max.y - e.min.y;\n      e.min.x = t.x, e.max.x = t.x + n, e.min.y = t.y, e.max.y = t.y + i;\n    };\n  }, function (e, t) {\n    var n = {};\n    e.exports = n, n.create = function (e, t) {\n      return {\n        x: e || 0,\n        y: t || 0\n      };\n    }, n.clone = function (e) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }, n.magnitude = function (e) {\n      return Math.sqrt(e.x * e.x + e.y * e.y);\n    }, n.magnitudeSquared = function (e) {\n      return e.x * e.x + e.y * e.y;\n    }, n.rotate = function (e, t, n) {\n      var i = Math.cos(t),\n        o = Math.sin(t);\n      n || (n = {});\n      var r = e.x * i - e.y * o;\n      return n.y = e.x * o + e.y * i, n.x = r, n;\n    }, n.rotateAbout = function (e, t, n, i) {\n      var o = Math.cos(t),\n        r = Math.sin(t);\n      i || (i = {});\n      var a = n.x + ((e.x - n.x) * o - (e.y - n.y) * r);\n      return i.y = n.y + ((e.x - n.x) * r + (e.y - n.y) * o), i.x = a, i;\n    }, n.normalise = function (e) {\n      var t = n.magnitude(e);\n      return 0 === t ? {\n        x: 0,\n        y: 0\n      } : {\n        x: e.x / t,\n        y: e.y / t\n      };\n    }, n.dot = function (e, t) {\n      return e.x * t.x + e.y * t.y;\n    }, n.cross = function (e, t) {\n      return e.x * t.y - e.y * t.x;\n    }, n.cross3 = function (e, t, n) {\n      return (t.x - e.x) * (n.y - e.y) - (t.y - e.y) * (n.x - e.x);\n    }, n.add = function (e, t, n) {\n      return n || (n = {}), n.x = e.x + t.x, n.y = e.y + t.y, n;\n    }, n.sub = function (e, t, n) {\n      return n || (n = {}), n.x = e.x - t.x, n.y = e.y - t.y, n;\n    }, n.mult = function (e, t) {\n      return {\n        x: e.x * t,\n        y: e.y * t\n      };\n    }, n.div = function (e, t) {\n      return {\n        x: e.x / t,\n        y: e.y / t\n      };\n    }, n.perp = function (e, t) {\n      return {\n        x: (t = !0 === t ? -1 : 1) * -e.y,\n        y: t * e.x\n      };\n    }, n.neg = function (e) {\n      return {\n        x: -e.x,\n        y: -e.y\n      };\n    }, n.angle = function (e, t) {\n      return Math.atan2(t.y - e.y, t.x - e.x);\n    }, n._temp = [n.create(), n.create(), n.create(), n.create(), n.create(), n.create()];\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(2),\n      r = n(0);\n    i.create = function (e, t) {\n      for (var n = [], i = 0; i < e.length; i++) {\n        var o = e[i],\n          r = {\n            x: o.x,\n            y: o.y,\n            index: i,\n            body: t,\n            isInternal: !1\n          };\n        n.push(r);\n      }\n      return n;\n    }, i.fromPath = function (e, t) {\n      var n = [];\n      return e.replace(/L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/gi, function (e, t, i) {\n        n.push({\n          x: parseFloat(t),\n          y: parseFloat(i)\n        });\n      }), i.create(n, t);\n    }, i.centre = function (e) {\n      for (var t, n, r, a = i.area(e, !0), s = {\n          x: 0,\n          y: 0\n        }, l = 0; l < e.length; l++) {\n        r = (l + 1) % e.length, t = o.cross(e[l], e[r]), n = o.mult(o.add(e[l], e[r]), t), s = o.add(s, n);\n      }\n      return o.div(s, 6 * a);\n    }, i.mean = function (e) {\n      for (var t = {\n          x: 0,\n          y: 0\n        }, n = 0; n < e.length; n++) {\n        t.x += e[n].x, t.y += e[n].y;\n      }\n      return o.div(t, e.length);\n    }, i.area = function (e, t) {\n      for (var n = 0, i = e.length - 1, o = 0; o < e.length; o++) {\n        n += (e[i].x - e[o].x) * (e[i].y + e[o].y), i = o;\n      }\n      return t ? n / 2 : Math.abs(n) / 2;\n    }, i.inertia = function (e, t) {\n      for (var n, i, r = 0, a = 0, s = e, l = 0; l < s.length; l++) {\n        i = (l + 1) % s.length, r += (n = Math.abs(o.cross(s[i], s[l]))) * (o.dot(s[i], s[i]) + o.dot(s[i], s[l]) + o.dot(s[l], s[l])), a += n;\n      }\n      return t / 6 * (r / a);\n    }, i.translate = function (e, t, n) {\n      var i;\n      if (n) for (i = 0; i < e.length; i++) {\n        e[i].x += t.x * n, e[i].y += t.y * n;\n      } else for (i = 0; i < e.length; i++) {\n        e[i].x += t.x, e[i].y += t.y;\n      }\n      return e;\n    }, i.rotate = function (e, t, n) {\n      if (0 !== t) {\n        for (var i = Math.cos(t), o = Math.sin(t), r = 0; r < e.length; r++) {\n          var a = e[r],\n            s = a.x - n.x,\n            l = a.y - n.y;\n          a.x = n.x + (s * i - l * o), a.y = n.y + (s * o + l * i);\n        }\n        return e;\n      }\n    }, i.contains = function (e, t) {\n      for (var n = 0; n < e.length; n++) {\n        var i = e[n],\n          o = e[(n + 1) % e.length];\n        if ((t.x - i.x) * (o.y - i.y) + (t.y - i.y) * (i.x - o.x) > 0) return !1;\n      }\n      return !0;\n    }, i.scale = function (e, t, n, r) {\n      if (1 === t && 1 === n) return e;\n      var a, s;\n      r = r || i.centre(e);\n      for (var l = 0; l < e.length; l++) {\n        a = e[l], s = o.sub(a, r), e[l].x = r.x + s.x * t, e[l].y = r.y + s.y * n;\n      }\n      return e;\n    }, i.chamfer = function (e, t, n, i, a) {\n      t = \"number\" == typeof t ? [t] : t || [8], n = void 0 !== n ? n : -1, i = i || 2, a = a || 14;\n      for (var s = [], l = 0; l < e.length; l++) {\n        var c = e[l - 1 >= 0 ? l - 1 : e.length - 1],\n          u = e[l],\n          d = e[(l + 1) % e.length],\n          p = t[l < t.length ? l : t.length - 1];\n        if (0 !== p) {\n          var f = o.normalise({\n              x: u.y - c.y,\n              y: c.x - u.x\n            }),\n            v = o.normalise({\n              x: d.y - u.y,\n              y: u.x - d.x\n            }),\n            m = Math.sqrt(2 * Math.pow(p, 2)),\n            y = o.mult(r.clone(f), p),\n            g = o.normalise(o.mult(o.add(f, v), .5)),\n            x = o.sub(u, o.mult(g, m)),\n            h = n;\n          -1 === n && (h = 1.75 * Math.pow(p, .32)), (h = r.clamp(h, i, a)) % 2 == 1 && (h += 1);\n          for (var b = Math.acos(o.dot(f, v)) / h, S = 0; S < h; S++) {\n            s.push(o.add(o.rotate(y, b * S), x));\n          }\n        } else s.push(u);\n      }\n      return s;\n    }, i.clockwiseSort = function (e) {\n      var t = i.mean(e);\n      return e.sort(function (e, n) {\n        return o.angle(t, e) - o.angle(t, n);\n      }), e;\n    }, i.isConvex = function (e) {\n      var t,\n        n,\n        i,\n        o,\n        r = 0,\n        a = e.length;\n      if (a < 3) return null;\n      for (t = 0; t < a; t++) {\n        if (i = (t + 2) % a, o = (e[n = (t + 1) % a].x - e[t].x) * (e[i].y - e[n].y), (o -= (e[n].y - e[t].y) * (e[i].x - e[n].x)) < 0 ? r |= 1 : o > 0 && (r |= 2), 3 === r) return !1;\n      }\n      return 0 !== r || null;\n    }, i.hull = function (e) {\n      var t,\n        n,\n        i = [],\n        r = [];\n      for ((e = e.slice(0)).sort(function (e, t) {\n        var n = e.x - t.x;\n        return 0 !== n ? n : e.y - t.y;\n      }), n = 0; n < e.length; n += 1) {\n        for (t = e[n]; r.length >= 2 && o.cross3(r[r.length - 2], r[r.length - 1], t) <= 0;) {\n          r.pop();\n        }\n        r.push(t);\n      }\n      for (n = e.length - 1; n >= 0; n -= 1) {\n        for (t = e[n]; i.length >= 2 && o.cross3(i[i.length - 2], i[i.length - 1], t) <= 0;) {\n          i.pop();\n        }\n        i.push(t);\n      }\n      return i.pop(), r.pop(), i.concat(r);\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(0);\n    i.on = function (e, t, n) {\n      for (var i, o = t.split(\" \"), r = 0; r < o.length; r++) {\n        i = o[r], e.events = e.events || {}, e.events[i] = e.events[i] || [], e.events[i].push(n);\n      }\n      return n;\n    }, i.off = function (e, t, n) {\n      if (t) {\n        \"function\" == typeof t && (n = t, t = o.keys(e.events).join(\" \"));\n        for (var i = t.split(\" \"), r = 0; r < i.length; r++) {\n          var a = e.events[i[r]],\n            s = [];\n          if (n && a) for (var l = 0; l < a.length; l++) {\n            a[l] !== n && s.push(a[l]);\n          }\n          e.events[i[r]] = s;\n        }\n      } else e.events = {};\n    }, i.trigger = function (e, t, n) {\n      var i,\n        r,\n        a,\n        s,\n        l = e.events;\n      if (l && o.keys(l).length > 0) {\n        n || (n = {}), i = t.split(\" \");\n        for (var c = 0; c < i.length; c++) {\n          if (a = l[r = i[c]]) {\n            (s = o.clone(n, !1)).name = r, s.source = e;\n            for (var u = 0; u < a.length; u++) {\n              a[u].apply(e, [s]);\n            }\n          }\n        }\n      }\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(4),\n      r = n(0),\n      a = n(1),\n      s = n(6);\n    i.create = function (e) {\n      return r.extend({\n        id: r.nextId(),\n        type: \"composite\",\n        parent: null,\n        isModified: !1,\n        bodies: [],\n        constraints: [],\n        composites: [],\n        label: \"Composite\",\n        plugin: {}\n      }, e);\n    }, i.setModified = function (e, t, n, o) {\n      if (e.isModified = t, n && e.parent && i.setModified(e.parent, t, n, o), o) for (var r = 0; r < e.composites.length; r++) {\n        var a = e.composites[r];\n        i.setModified(a, t, n, o);\n      }\n    }, i.add = function (e, t) {\n      var n = [].concat(t);\n      o.trigger(e, \"beforeAdd\", {\n        object: t\n      });\n      for (var a = 0; a < n.length; a++) {\n        var s = n[a];\n        switch (s.type) {\n          case \"body\":\n            if (s.parent !== s) {\n              r.warn(\"Composite.add: skipped adding a compound body part (you must add its parent instead)\");\n              break;\n            }\n            i.addBody(e, s);\n            break;\n          case \"constraint\":\n            i.addConstraint(e, s);\n            break;\n          case \"composite\":\n            i.addComposite(e, s);\n            break;\n          case \"mouseConstraint\":\n            i.addConstraint(e, s.constraint);\n        }\n      }\n      return o.trigger(e, \"afterAdd\", {\n        object: t\n      }), e;\n    }, i.remove = function (e, t, n) {\n      var r = [].concat(t);\n      o.trigger(e, \"beforeRemove\", {\n        object: t\n      });\n      for (var a = 0; a < r.length; a++) {\n        var s = r[a];\n        switch (s.type) {\n          case \"body\":\n            i.removeBody(e, s, n);\n            break;\n          case \"constraint\":\n            i.removeConstraint(e, s, n);\n            break;\n          case \"composite\":\n            i.removeComposite(e, s, n);\n            break;\n          case \"mouseConstraint\":\n            i.removeConstraint(e, s.constraint);\n        }\n      }\n      return o.trigger(e, \"afterRemove\", {\n        object: t\n      }), e;\n    }, i.addComposite = function (e, t) {\n      return e.composites.push(t), t.parent = e, i.setModified(e, !0, !0, !1), e;\n    }, i.removeComposite = function (e, t, n) {\n      var o = r.indexOf(e.composites, t);\n      if (-1 !== o && (i.removeCompositeAt(e, o), i.setModified(e, !0, !0, !1)), n) for (var a = 0; a < e.composites.length; a++) {\n        i.removeComposite(e.composites[a], t, !0);\n      }\n      return e;\n    }, i.removeCompositeAt = function (e, t) {\n      return e.composites.splice(t, 1), i.setModified(e, !0, !0, !1), e;\n    }, i.addBody = function (e, t) {\n      return e.bodies.push(t), i.setModified(e, !0, !0, !1), e;\n    }, i.removeBody = function (e, t, n) {\n      var o = r.indexOf(e.bodies, t);\n      if (-1 !== o && (i.removeBodyAt(e, o), i.setModified(e, !0, !0, !1)), n) for (var a = 0; a < e.composites.length; a++) {\n        i.removeBody(e.composites[a], t, !0);\n      }\n      return e;\n    }, i.removeBodyAt = function (e, t) {\n      return e.bodies.splice(t, 1), i.setModified(e, !0, !0, !1), e;\n    }, i.addConstraint = function (e, t) {\n      return e.constraints.push(t), i.setModified(e, !0, !0, !1), e;\n    }, i.removeConstraint = function (e, t, n) {\n      var o = r.indexOf(e.constraints, t);\n      if (-1 !== o && i.removeConstraintAt(e, o), n) for (var a = 0; a < e.composites.length; a++) {\n        i.removeConstraint(e.composites[a], t, !0);\n      }\n      return e;\n    }, i.removeConstraintAt = function (e, t) {\n      return e.constraints.splice(t, 1), i.setModified(e, !0, !0, !1), e;\n    }, i.clear = function (e, t, n) {\n      if (n) for (var o = 0; o < e.composites.length; o++) {\n        i.clear(e.composites[o], t, !0);\n      }\n      return t ? e.bodies = e.bodies.filter(function (e) {\n        return e.isStatic;\n      }) : e.bodies.length = 0, e.constraints.length = 0, e.composites.length = 0, i.setModified(e, !0, !0, !1), e;\n    }, i.allBodies = function (e) {\n      for (var t = [].concat(e.bodies), n = 0; n < e.composites.length; n++) {\n        t = t.concat(i.allBodies(e.composites[n]));\n      }\n      return t;\n    }, i.allConstraints = function (e) {\n      for (var t = [].concat(e.constraints), n = 0; n < e.composites.length; n++) {\n        t = t.concat(i.allConstraints(e.composites[n]));\n      }\n      return t;\n    }, i.allComposites = function (e) {\n      for (var t = [].concat(e.composites), n = 0; n < e.composites.length; n++) {\n        t = t.concat(i.allComposites(e.composites[n]));\n      }\n      return t;\n    }, i.get = function (e, t, n) {\n      var o, r;\n      switch (n) {\n        case \"body\":\n          o = i.allBodies(e);\n          break;\n        case \"constraint\":\n          o = i.allConstraints(e);\n          break;\n        case \"composite\":\n          o = i.allComposites(e).concat(e);\n      }\n      return o ? 0 === (r = o.filter(function (e) {\n        return e.id.toString() === t.toString();\n      })).length ? null : r[0] : null;\n    }, i.move = function (e, t, n) {\n      return i.remove(e, t), i.add(n, t), e;\n    }, i.rebase = function (e) {\n      for (var t = i.allBodies(e).concat(i.allConstraints(e)).concat(i.allComposites(e)), n = 0; n < t.length; n++) {\n        t[n].id = r.nextId();\n      }\n      return i.setModified(e, !0, !0, !1), e;\n    }, i.translate = function (e, t, n) {\n      for (var o = n ? i.allBodies(e) : e.bodies, r = 0; r < o.length; r++) {\n        s.translate(o[r], t);\n      }\n      return i.setModified(e, !0, !0, !1), e;\n    }, i.rotate = function (e, t, n, o) {\n      for (var r = Math.cos(t), a = Math.sin(t), l = o ? i.allBodies(e) : e.bodies, c = 0; c < l.length; c++) {\n        var u = l[c],\n          d = u.position.x - n.x,\n          p = u.position.y - n.y;\n        s.setPosition(u, {\n          x: n.x + (d * r - p * a),\n          y: n.y + (d * a + p * r)\n        }), s.rotate(u, t);\n      }\n      return i.setModified(e, !0, !0, !1), e;\n    }, i.scale = function (e, t, n, o, r) {\n      for (var a = r ? i.allBodies(e) : e.bodies, l = 0; l < a.length; l++) {\n        var c = a[l],\n          u = c.position.x - o.x,\n          d = c.position.y - o.y;\n        s.setPosition(c, {\n          x: o.x + u * t,\n          y: o.y + d * n\n        }), s.scale(c, t, n);\n      }\n      return i.setModified(e, !0, !0, !1), e;\n    }, i.bounds = function (e) {\n      for (var t = i.allBodies(e), n = [], o = 0; o < t.length; o += 1) {\n        var r = t[o];\n        n.push(r.bounds.min, r.bounds.max);\n      }\n      return a.create(n);\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(3),\n      r = n(2),\n      a = n(7),\n      s = (n(16), n(0)),\n      l = n(1),\n      c = n(10);\n    !function () {\n      i._inertiaScale = 4, i._nextCollidingGroupId = 1, i._nextNonCollidingGroupId = -1, i._nextCategory = 1, i.create = function (t) {\n        var n = {\n            id: s.nextId(),\n            type: \"body\",\n            label: \"Body\",\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: o.fromPath(\"L 0 0 L 40 0 L 40 40 L 0 40\"),\n            position: {\n              x: 0,\n              y: 0\n            },\n            force: {\n              x: 0,\n              y: 0\n            },\n            torque: 0,\n            positionImpulse: {\n              x: 0,\n              y: 0\n            },\n            constraintImpulse: {\n              x: 0,\n              y: 0,\n              angle: 0\n            },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: {\n              x: 0,\n              y: 0\n            },\n            angularVelocity: 0,\n            isSensor: !1,\n            isStatic: !1,\n            isSleeping: !1,\n            motion: 0,\n            sleepThreshold: 60,\n            density: .001,\n            restitution: 0,\n            friction: .1,\n            frictionStatic: .5,\n            frictionAir: .01,\n            collisionFilter: {\n              category: 1,\n              mask: 4294967295,\n              group: 0\n            },\n            slop: .05,\n            timeScale: 1,\n            render: {\n              visible: !0,\n              opacity: 1,\n              strokeStyle: null,\n              fillStyle: null,\n              lineWidth: null,\n              sprite: {\n                xScale: 1,\n                yScale: 1,\n                xOffset: 0,\n                yOffset: 0\n              }\n            },\n            events: null,\n            bounds: null,\n            chamfer: null,\n            circleRadius: 0,\n            positionPrev: null,\n            anglePrev: 0,\n            parent: null,\n            axes: null,\n            area: 0,\n            mass: 0,\n            inertia: 0,\n            _original: null\n          },\n          i = s.extend(n, t);\n        return e(i, t), i;\n      }, i.nextGroup = function (e) {\n        return e ? i._nextNonCollidingGroupId-- : i._nextCollidingGroupId++;\n      }, i.nextCategory = function () {\n        return i._nextCategory = i._nextCategory << 1, i._nextCategory;\n      };\n      var e = function e(_e, t) {\n        t = t || {}, i.set(_e, {\n          bounds: _e.bounds || l.create(_e.vertices),\n          positionPrev: _e.positionPrev || r.clone(_e.position),\n          anglePrev: _e.anglePrev || _e.angle,\n          vertices: _e.vertices,\n          parts: _e.parts || [_e],\n          isStatic: _e.isStatic,\n          isSleeping: _e.isSleeping,\n          parent: _e.parent || _e\n        }), o.rotate(_e.vertices, _e.angle, _e.position), c.rotate(_e.axes, _e.angle), l.update(_e.bounds, _e.vertices, _e.velocity), i.set(_e, {\n          axes: t.axes || _e.axes,\n          area: t.area || _e.area,\n          mass: t.mass || _e.mass,\n          inertia: t.inertia || _e.inertia\n        });\n        var n = _e.isStatic ? \"#14151f\" : s.choose([\"#f19648\", \"#f5d259\", \"#f55a3c\", \"#063e7b\", \"#ececd1\"]),\n          a = _e.isStatic ? \"#555\" : \"#ccc\",\n          u = _e.isStatic && null === _e.render.fillStyle ? 1 : 0;\n        _e.render.fillStyle = _e.render.fillStyle || n, _e.render.strokeStyle = _e.render.strokeStyle || a, _e.render.lineWidth = _e.render.lineWidth || u, _e.render.sprite.xOffset += -(_e.bounds.min.x - _e.position.x) / (_e.bounds.max.x - _e.bounds.min.x), _e.render.sprite.yOffset += -(_e.bounds.min.y - _e.position.y) / (_e.bounds.max.y - _e.bounds.min.y);\n      };\n      i.set = function (e, t, n) {\n        var o;\n        for (o in \"string\" == typeof t && (o = t, (t = {})[o] = n), t) {\n          if (Object.prototype.hasOwnProperty.call(t, o)) switch (n = t[o], o) {\n            case \"isStatic\":\n              i.setStatic(e, n);\n              break;\n            case \"isSleeping\":\n              a.set(e, n);\n              break;\n            case \"mass\":\n              i.setMass(e, n);\n              break;\n            case \"density\":\n              i.setDensity(e, n);\n              break;\n            case \"inertia\":\n              i.setInertia(e, n);\n              break;\n            case \"vertices\":\n              i.setVertices(e, n);\n              break;\n            case \"position\":\n              i.setPosition(e, n);\n              break;\n            case \"angle\":\n              i.setAngle(e, n);\n              break;\n            case \"velocity\":\n              i.setVelocity(e, n);\n              break;\n            case \"angularVelocity\":\n              i.setAngularVelocity(e, n);\n              break;\n            case \"parts\":\n              i.setParts(e, n);\n              break;\n            case \"centre\":\n              i.setCentre(e, n);\n              break;\n            default:\n              e[o] = n;\n          }\n        }\n      }, i.setStatic = function (e, t) {\n        for (var n = 0; n < e.parts.length; n++) {\n          var i = e.parts[n];\n          i.isStatic = t, t ? (i._original = {\n            restitution: i.restitution,\n            friction: i.friction,\n            mass: i.mass,\n            inertia: i.inertia,\n            density: i.density,\n            inverseMass: i.inverseMass,\n            inverseInertia: i.inverseInertia\n          }, i.restitution = 0, i.friction = 1, i.mass = i.inertia = i.density = 1 / 0, i.inverseMass = i.inverseInertia = 0, i.positionPrev.x = i.position.x, i.positionPrev.y = i.position.y, i.anglePrev = i.angle, i.angularVelocity = 0, i.speed = 0, i.angularSpeed = 0, i.motion = 0) : i._original && (i.restitution = i._original.restitution, i.friction = i._original.friction, i.mass = i._original.mass, i.inertia = i._original.inertia, i.density = i._original.density, i.inverseMass = i._original.inverseMass, i.inverseInertia = i._original.inverseInertia, i._original = null);\n        }\n      }, i.setMass = function (e, t) {\n        var n = e.inertia / (e.mass / 6);\n        e.inertia = n * (t / 6), e.inverseInertia = 1 / e.inertia, e.mass = t, e.inverseMass = 1 / e.mass, e.density = e.mass / e.area;\n      }, i.setDensity = function (e, t) {\n        i.setMass(e, t * e.area), e.density = t;\n      }, i.setInertia = function (e, t) {\n        e.inertia = t, e.inverseInertia = 1 / e.inertia;\n      }, i.setVertices = function (e, t) {\n        t[0].body === e ? e.vertices = t : e.vertices = o.create(t, e), e.axes = c.fromVertices(e.vertices), e.area = o.area(e.vertices), i.setMass(e, e.density * e.area);\n        var n = o.centre(e.vertices);\n        o.translate(e.vertices, n, -1), i.setInertia(e, i._inertiaScale * o.inertia(e.vertices, e.mass)), o.translate(e.vertices, e.position), l.update(e.bounds, e.vertices, e.velocity);\n      }, i.setParts = function (e, t, n) {\n        var r;\n        for (t = t.slice(0), e.parts.length = 0, e.parts.push(e), e.parent = e, r = 0; r < t.length; r++) {\n          var a = t[r];\n          a !== e && (a.parent = e, e.parts.push(a));\n        }\n        if (1 !== e.parts.length) {\n          if (n = void 0 === n || n) {\n            var s = [];\n            for (r = 0; r < t.length; r++) {\n              s = s.concat(t[r].vertices);\n            }\n            o.clockwiseSort(s);\n            var l = o.hull(s),\n              c = o.centre(l);\n            i.setVertices(e, l), o.translate(e.vertices, c);\n          }\n          var u = i._totalProperties(e);\n          e.area = u.area, e.parent = e, e.position.x = u.centre.x, e.position.y = u.centre.y, e.positionPrev.x = u.centre.x, e.positionPrev.y = u.centre.y, i.setMass(e, u.mass), i.setInertia(e, u.inertia), i.setPosition(e, u.centre);\n        }\n      }, i.setCentre = function (e, t, n) {\n        n ? (e.positionPrev.x += t.x, e.positionPrev.y += t.y, e.position.x += t.x, e.position.y += t.y) : (e.positionPrev.x = t.x - (e.position.x - e.positionPrev.x), e.positionPrev.y = t.y - (e.position.y - e.positionPrev.y), e.position.x = t.x, e.position.y = t.y);\n      }, i.setPosition = function (e, t) {\n        var n = r.sub(t, e.position);\n        e.positionPrev.x += n.x, e.positionPrev.y += n.y;\n        for (var i = 0; i < e.parts.length; i++) {\n          var a = e.parts[i];\n          a.position.x += n.x, a.position.y += n.y, o.translate(a.vertices, n), l.update(a.bounds, a.vertices, e.velocity);\n        }\n      }, i.setAngle = function (e, t) {\n        var n = t - e.angle;\n        e.anglePrev += n;\n        for (var i = 0; i < e.parts.length; i++) {\n          var a = e.parts[i];\n          a.angle += n, o.rotate(a.vertices, n, e.position), c.rotate(a.axes, n), l.update(a.bounds, a.vertices, e.velocity), i > 0 && r.rotateAbout(a.position, n, e.position, a.position);\n        }\n      }, i.setVelocity = function (e, t) {\n        e.positionPrev.x = e.position.x - t.x, e.positionPrev.y = e.position.y - t.y, e.velocity.x = t.x, e.velocity.y = t.y, e.speed = r.magnitude(e.velocity);\n      }, i.setAngularVelocity = function (e, t) {\n        e.anglePrev = e.angle - t, e.angularVelocity = t, e.angularSpeed = Math.abs(e.angularVelocity);\n      }, i.translate = function (e, t) {\n        i.setPosition(e, r.add(e.position, t));\n      }, i.rotate = function (e, t, n) {\n        if (n) {\n          var o = Math.cos(t),\n            r = Math.sin(t),\n            a = e.position.x - n.x,\n            s = e.position.y - n.y;\n          i.setPosition(e, {\n            x: n.x + (a * o - s * r),\n            y: n.y + (a * r + s * o)\n          }), i.setAngle(e, e.angle + t);\n        } else i.setAngle(e, e.angle + t);\n      }, i.scale = function (e, t, n, r) {\n        var a = 0,\n          s = 0;\n        r = r || e.position;\n        for (var u = 0; u < e.parts.length; u++) {\n          var d = e.parts[u];\n          o.scale(d.vertices, t, n, r), d.axes = c.fromVertices(d.vertices), d.area = o.area(d.vertices), i.setMass(d, e.density * d.area), o.translate(d.vertices, {\n            x: -d.position.x,\n            y: -d.position.y\n          }), i.setInertia(d, i._inertiaScale * o.inertia(d.vertices, d.mass)), o.translate(d.vertices, {\n            x: d.position.x,\n            y: d.position.y\n          }), u > 0 && (a += d.area, s += d.inertia), d.position.x = r.x + (d.position.x - r.x) * t, d.position.y = r.y + (d.position.y - r.y) * n, l.update(d.bounds, d.vertices, e.velocity);\n        }\n        e.parts.length > 1 && (e.area = a, e.isStatic || (i.setMass(e, e.density * a), i.setInertia(e, s))), e.circleRadius && (t === n ? e.circleRadius *= t : e.circleRadius = null);\n      }, i.update = function (e, t, n, i) {\n        var a = Math.pow(t * n * e.timeScale, 2),\n          s = 1 - e.frictionAir * n * e.timeScale,\n          u = e.position.x - e.positionPrev.x,\n          d = e.position.y - e.positionPrev.y;\n        e.velocity.x = u * s * i + e.force.x / e.mass * a, e.velocity.y = d * s * i + e.force.y / e.mass * a, e.positionPrev.x = e.position.x, e.positionPrev.y = e.position.y, e.position.x += e.velocity.x, e.position.y += e.velocity.y, e.angularVelocity = (e.angle - e.anglePrev) * s * i + e.torque / e.inertia * a, e.anglePrev = e.angle, e.angle += e.angularVelocity, e.speed = r.magnitude(e.velocity), e.angularSpeed = Math.abs(e.angularVelocity);\n        for (var p = 0; p < e.parts.length; p++) {\n          var f = e.parts[p];\n          o.translate(f.vertices, e.velocity), p > 0 && (f.position.x += e.velocity.x, f.position.y += e.velocity.y), 0 !== e.angularVelocity && (o.rotate(f.vertices, e.angularVelocity, e.position), c.rotate(f.axes, e.angularVelocity), p > 0 && r.rotateAbout(f.position, e.angularVelocity, e.position, f.position)), l.update(f.bounds, f.vertices, e.velocity);\n        }\n      }, i.applyForce = function (e, t, n) {\n        e.force.x += n.x, e.force.y += n.y;\n        var i = t.x - e.position.x,\n          o = t.y - e.position.y;\n        e.torque += i * n.y - o * n.x;\n      }, i._totalProperties = function (e) {\n        for (var t = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: {\n              x: 0,\n              y: 0\n            }\n          }, n = 1 === e.parts.length ? 0 : 1; n < e.parts.length; n++) {\n          var i = e.parts[n],\n            o = i.mass !== 1 / 0 ? i.mass : 1;\n          t.mass += o, t.area += i.area, t.inertia += i.inertia, t.centre = r.add(t.centre, r.mult(i.position, o));\n        }\n        return t.centre = r.div(t.centre, t.mass), t;\n      };\n    }();\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(4);\n    i._motionWakeThreshold = .18, i._motionSleepThreshold = .08, i._minBias = .9, i.update = function (e, t) {\n      for (var n = t * t * t, o = 0; o < e.length; o++) {\n        var r = e[o],\n          a = r.speed * r.speed + r.angularSpeed * r.angularSpeed;\n        if (0 === r.force.x && 0 === r.force.y) {\n          var s = Math.min(r.motion, a),\n            l = Math.max(r.motion, a);\n          r.motion = i._minBias * s + (1 - i._minBias) * l, r.sleepThreshold > 0 && r.motion < i._motionSleepThreshold * n ? (r.sleepCounter += 1, r.sleepCounter >= r.sleepThreshold && i.set(r, !0)) : r.sleepCounter > 0 && (r.sleepCounter -= 1);\n        } else i.set(r, !1);\n      }\n    }, i.afterCollisions = function (e, t) {\n      for (var n = t * t * t, o = 0; o < e.length; o++) {\n        var r = e[o];\n        if (r.isActive) {\n          var a = r.collision,\n            s = a.bodyA.parent,\n            l = a.bodyB.parent;\n          if (!(s.isSleeping && l.isSleeping || s.isStatic || l.isStatic) && (s.isSleeping || l.isSleeping)) {\n            var c = s.isSleeping && !s.isStatic ? s : l,\n              u = c === s ? l : s;\n            !c.isStatic && u.motion > i._motionWakeThreshold * n && i.set(c, !1);\n          }\n        }\n      }\n    }, i.set = function (e, t) {\n      var n = e.isSleeping;\n      t ? (e.isSleeping = !0, e.sleepCounter = e.sleepThreshold, e.positionImpulse.x = 0, e.positionImpulse.y = 0, e.positionPrev.x = e.position.x, e.positionPrev.y = e.position.y, e.anglePrev = e.angle, e.speed = 0, e.angularSpeed = 0, e.motion = 0, n || o.trigger(e, \"sleepStart\")) : (e.isSleeping = !1, e.sleepCounter = 0, n && o.trigger(e, \"sleepEnd\"));\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(3),\n      r = n(2),\n      a = n(7),\n      s = n(1),\n      l = n(10),\n      c = n(0);\n    i._warming = .4, i._torqueDampen = 1, i._minLength = 1e-6, i.create = function (e) {\n      var t = e;\n      t.bodyA && !t.pointA && (t.pointA = {\n        x: 0,\n        y: 0\n      }), t.bodyB && !t.pointB && (t.pointB = {\n        x: 0,\n        y: 0\n      });\n      var n = t.bodyA ? r.add(t.bodyA.position, t.pointA) : t.pointA,\n        i = t.bodyB ? r.add(t.bodyB.position, t.pointB) : t.pointB,\n        o = r.magnitude(r.sub(n, i));\n      t.length = void 0 !== t.length ? t.length : o, t.id = t.id || c.nextId(), t.label = t.label || \"Constraint\", t.type = \"constraint\", t.stiffness = t.stiffness || (t.length > 0 ? 1 : .7), t.damping = t.damping || 0, t.angularStiffness = t.angularStiffness || 0, t.angleA = t.bodyA ? t.bodyA.angle : t.angleA, t.angleB = t.bodyB ? t.bodyB.angle : t.angleB, t.plugin = {};\n      var a = {\n        visible: !0,\n        lineWidth: 2,\n        strokeStyle: \"#ffffff\",\n        type: \"line\",\n        anchors: !0\n      };\n      return 0 === t.length && t.stiffness > .1 ? (a.type = \"pin\", a.anchors = !1) : t.stiffness < .9 && (a.type = \"spring\"), t.render = c.extend(a, t.render), t;\n    }, i.preSolveAll = function (e) {\n      for (var t = 0; t < e.length; t += 1) {\n        var n = e[t],\n          i = n.constraintImpulse;\n        n.isStatic || 0 === i.x && 0 === i.y && 0 === i.angle || (n.position.x += i.x, n.position.y += i.y, n.angle += i.angle);\n      }\n    }, i.solveAll = function (e, t) {\n      for (var n = 0; n < e.length; n += 1) {\n        var o = e[n],\n          r = !o.bodyA || o.bodyA && o.bodyA.isStatic,\n          a = !o.bodyB || o.bodyB && o.bodyB.isStatic;\n        (r || a) && i.solve(e[n], t);\n      }\n      for (n = 0; n < e.length; n += 1) {\n        r = !(o = e[n]).bodyA || o.bodyA && o.bodyA.isStatic, a = !o.bodyB || o.bodyB && o.bodyB.isStatic, r || a || i.solve(e[n], t);\n      }\n    }, i.solve = function (e, t) {\n      var n = e.bodyA,\n        o = e.bodyB,\n        a = e.pointA,\n        s = e.pointB;\n      if (n || o) {\n        n && !n.isStatic && (r.rotate(a, n.angle - e.angleA, a), e.angleA = n.angle), o && !o.isStatic && (r.rotate(s, o.angle - e.angleB, s), e.angleB = o.angle);\n        var l = a,\n          c = s;\n        if (n && (l = r.add(n.position, a)), o && (c = r.add(o.position, s)), l && c) {\n          var u = r.sub(l, c),\n            d = r.magnitude(u);\n          d < i._minLength && (d = i._minLength);\n          var p,\n            f,\n            v,\n            m,\n            y,\n            g = (d - e.length) / d,\n            x = e.stiffness < 1 ? e.stiffness * t : e.stiffness,\n            h = r.mult(u, g * x),\n            b = (n ? n.inverseMass : 0) + (o ? o.inverseMass : 0),\n            S = b + ((n ? n.inverseInertia : 0) + (o ? o.inverseInertia : 0));\n          if (e.damping) {\n            var w = r.create();\n            v = r.div(u, d), y = r.sub(o && r.sub(o.position, o.positionPrev) || w, n && r.sub(n.position, n.positionPrev) || w), m = r.dot(v, y);\n          }\n          n && !n.isStatic && (f = n.inverseMass / b, n.constraintImpulse.x -= h.x * f, n.constraintImpulse.y -= h.y * f, n.position.x -= h.x * f, n.position.y -= h.y * f, e.damping && (n.positionPrev.x -= e.damping * v.x * m * f, n.positionPrev.y -= e.damping * v.y * m * f), p = r.cross(a, h) / S * i._torqueDampen * n.inverseInertia * (1 - e.angularStiffness), n.constraintImpulse.angle -= p, n.angle -= p), o && !o.isStatic && (f = o.inverseMass / b, o.constraintImpulse.x += h.x * f, o.constraintImpulse.y += h.y * f, o.position.x += h.x * f, o.position.y += h.y * f, e.damping && (o.positionPrev.x += e.damping * v.x * m * f, o.positionPrev.y += e.damping * v.y * m * f), p = r.cross(s, h) / S * i._torqueDampen * o.inverseInertia * (1 - e.angularStiffness), o.constraintImpulse.angle += p, o.angle += p);\n        }\n      }\n    }, i.postSolveAll = function (e) {\n      for (var t = 0; t < e.length; t++) {\n        var n = e[t],\n          c = n.constraintImpulse;\n        if (!(n.isStatic || 0 === c.x && 0 === c.y && 0 === c.angle)) {\n          a.set(n, !1);\n          for (var u = 0; u < n.parts.length; u++) {\n            var d = n.parts[u];\n            o.translate(d.vertices, c), u > 0 && (d.position.x += c.x, d.position.y += c.y), 0 !== c.angle && (o.rotate(d.vertices, c.angle, n.position), l.rotate(d.axes, c.angle), u > 0 && r.rotateAbout(d.position, c.angle, n.position, d.position)), s.update(d.bounds, d.vertices, n.velocity);\n          }\n          c.angle *= i._warming, c.x *= i._warming, c.y *= i._warming;\n        }\n      }\n    }, i.pointAWorld = function (e) {\n      return {\n        x: (e.bodyA ? e.bodyA.position.x : 0) + e.pointA.x,\n        y: (e.bodyA ? e.bodyA.position.y : 0) + e.pointA.y\n      };\n    }, i.pointBWorld = function (e) {\n      return {\n        x: (e.bodyB ? e.bodyB.position.x : 0) + e.pointB.x,\n        y: (e.bodyB ? e.bodyB.position.y : 0) + e.pointB.y\n      };\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(17);\n    i.create = function (e, t) {\n      var n = e.bodyA,\n        o = e.bodyB,\n        r = e.parentA,\n        a = e.parentB,\n        s = {\n          id: i.id(n, o),\n          bodyA: n,\n          bodyB: o,\n          contacts: {},\n          activeContacts: [],\n          separation: 0,\n          isActive: !0,\n          confirmedActive: !0,\n          isSensor: n.isSensor || o.isSensor,\n          timeCreated: t,\n          timeUpdated: t,\n          inverseMass: r.inverseMass + a.inverseMass,\n          friction: Math.min(r.friction, a.friction),\n          frictionStatic: Math.max(r.frictionStatic, a.frictionStatic),\n          restitution: Math.max(r.restitution, a.restitution),\n          slop: Math.max(r.slop, a.slop)\n        };\n      return i.update(s, e, t), s;\n    }, i.update = function (e, t, n) {\n      var r = e.contacts,\n        a = t.supports,\n        s = e.activeContacts,\n        l = t.parentA,\n        c = t.parentB;\n      if (e.collision = t, e.inverseMass = l.inverseMass + c.inverseMass, e.friction = Math.min(l.friction, c.friction), e.frictionStatic = Math.max(l.frictionStatic, c.frictionStatic), e.restitution = Math.max(l.restitution, c.restitution), e.slop = Math.max(l.slop, c.slop), s.length = 0, t.collided) {\n        for (var u = 0; u < a.length; u++) {\n          var d = a[u],\n            p = o.id(d),\n            f = r[p];\n          f ? s.push(f) : s.push(r[p] = o.create(d));\n        }\n        e.separation = t.depth, i.setActive(e, !0, n);\n      } else !0 === e.isActive && i.setActive(e, !1, n);\n    }, i.setActive = function (e, t, n) {\n      t ? (e.isActive = !0, e.timeUpdated = n) : (e.isActive = !1, e.activeContacts.length = 0);\n    }, i.id = function (e, t) {\n      return e.id < t.id ? \"A\" + e.id + \"B\" + t.id : \"A\" + t.id + \"B\" + e.id;\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(2),\n      r = n(0);\n    i.fromVertices = function (e) {\n      for (var t = {}, n = 0; n < e.length; n++) {\n        var i = (n + 1) % e.length,\n          a = o.normalise({\n            x: e[i].y - e[n].y,\n            y: e[n].x - e[i].x\n          }),\n          s = 0 === a.y ? 1 / 0 : a.x / a.y;\n        t[s = s.toFixed(3).toString()] = a;\n      }\n      return r.values(t);\n    }, i.rotate = function (e, t) {\n      if (0 !== t) for (var n = Math.cos(t), i = Math.sin(t), o = 0; o < e.length; o++) {\n        var r,\n          a = e[o];\n        r = a.x * n - a.y * i, a.y = a.x * i + a.y * n, a.x = r;\n      }\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(3),\n      r = n(0),\n      a = n(6),\n      s = n(1),\n      l = n(2);\n    i.rectangle = function (e, t, n, i, s) {\n      s = s || {};\n      var l = {\n        label: \"Rectangle Body\",\n        position: {\n          x: e,\n          y: t\n        },\n        vertices: o.fromPath(\"L 0 0 L \" + n + \" 0 L \" + n + \" \" + i + \" L 0 \" + i)\n      };\n      if (s.chamfer) {\n        var c = s.chamfer;\n        l.vertices = o.chamfer(l.vertices, c.radius, c.quality, c.qualityMin, c.qualityMax), delete s.chamfer;\n      }\n      return a.create(r.extend({}, l, s));\n    }, i.trapezoid = function (e, t, n, i, s, l) {\n      l = l || {};\n      var c,\n        u = n * (s *= .5),\n        d = u + (1 - 2 * s) * n,\n        p = d + u;\n      c = s < .5 ? \"L 0 0 L \" + u + \" \" + -i + \" L \" + d + \" \" + -i + \" L \" + p + \" 0\" : \"L 0 0 L \" + d + \" \" + -i + \" L \" + p + \" 0\";\n      var f = {\n        label: \"Trapezoid Body\",\n        position: {\n          x: e,\n          y: t\n        },\n        vertices: o.fromPath(c)\n      };\n      if (l.chamfer) {\n        var v = l.chamfer;\n        f.vertices = o.chamfer(f.vertices, v.radius, v.quality, v.qualityMin, v.qualityMax), delete l.chamfer;\n      }\n      return a.create(r.extend({}, f, l));\n    }, i.circle = function (e, t, n, o, a) {\n      o = o || {};\n      var s = {\n        label: \"Circle Body\",\n        circleRadius: n\n      };\n      a = a || 25;\n      var l = Math.ceil(Math.max(10, Math.min(a, n)));\n      return l % 2 == 1 && (l += 1), i.polygon(e, t, l, n, r.extend({}, s, o));\n    }, i.polygon = function (e, t, n, s, l) {\n      if (l = l || {}, n < 3) return i.circle(e, t, s, l);\n      for (var c = 2 * Math.PI / n, u = \"\", d = .5 * c, p = 0; p < n; p += 1) {\n        var f = d + p * c,\n          v = Math.cos(f) * s,\n          m = Math.sin(f) * s;\n        u += \"L \" + v.toFixed(3) + \" \" + m.toFixed(3) + \" \";\n      }\n      var y = {\n        label: \"Polygon Body\",\n        position: {\n          x: e,\n          y: t\n        },\n        vertices: o.fromPath(u)\n      };\n      if (l.chamfer) {\n        var g = l.chamfer;\n        y.vertices = o.chamfer(y.vertices, g.radius, g.quality, g.qualityMin, g.qualityMax), delete l.chamfer;\n      }\n      return a.create(r.extend({}, y, l));\n    }, i.fromVertices = function (e, t, n, i, c, u, d, p) {\n      var f,\n        v,\n        m,\n        y,\n        g,\n        x,\n        h,\n        b,\n        S,\n        w,\n        A = r.getDecomp();\n      for (f = Boolean(A && A.quickDecomp), i = i || {}, m = [], c = void 0 !== c && c, u = void 0 !== u ? u : .01, d = void 0 !== d ? d : 10, p = void 0 !== p ? p : .01, r.isArray(n[0]) || (n = [n]), S = 0; S < n.length; S += 1) {\n        if (g = n[S], !(y = o.isConvex(g)) && !f && r.warnOnce(\"Bodies.fromVertices: Install the 'poly-decomp' library and use Common.setDecomp or provide 'decomp' as a global to decompose concave vertices.\"), y || !f) g = y ? o.clockwiseSort(g) : o.hull(g), m.push({\n          position: {\n            x: e,\n            y: t\n          },\n          vertices: g\n        });else {\n          var P = g.map(function (e) {\n            return [e.x, e.y];\n          });\n          A.makeCCW(P), !1 !== u && A.removeCollinearPoints(P, u), !1 !== p && A.removeDuplicatePoints && A.removeDuplicatePoints(P, p);\n          var M = A.quickDecomp(P);\n          for (x = 0; x < M.length; x++) {\n            var C = M[x].map(function (e) {\n              return {\n                x: e[0],\n                y: e[1]\n              };\n            });\n            d > 0 && o.area(C) < d || m.push({\n              position: o.centre(C),\n              vertices: C\n            });\n          }\n        }\n      }\n      for (x = 0; x < m.length; x++) {\n        m[x] = a.create(r.extend(m[x], i));\n      }\n      if (c) for (x = 0; x < m.length; x++) {\n        var B = m[x];\n        for (h = x + 1; h < m.length; h++) {\n          var _ = m[h];\n          if (s.overlaps(B.bounds, _.bounds)) {\n            var k = B.vertices,\n              I = _.vertices;\n            for (b = 0; b < B.vertices.length; b++) {\n              for (w = 0; w < _.vertices.length; w++) {\n                var T = l.magnitudeSquared(l.sub(k[(b + 1) % k.length], I[w])),\n                  R = l.magnitudeSquared(l.sub(k[b], I[(w + 1) % I.length]));\n                T < 5 && R < 5 && (k[b].isInternal = !0, I[w].isInternal = !0);\n              }\n            }\n          }\n        }\n      }\n      return m.length > 1 ? (v = a.create(r.extend({\n        parts: m.slice(0)\n      }, i)), a.setPosition(v, {\n        x: e,\n        y: t\n      }), v) : m[0];\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(0);\n    i.create = function (e) {\n      var t = {};\n      return e || o.log(\"Mouse.create: element was undefined, defaulting to document.body\", \"warn\"), t.element = e || document.body, t.absolute = {\n        x: 0,\n        y: 0\n      }, t.position = {\n        x: 0,\n        y: 0\n      }, t.mousedownPosition = {\n        x: 0,\n        y: 0\n      }, t.mouseupPosition = {\n        x: 0,\n        y: 0\n      }, t.offset = {\n        x: 0,\n        y: 0\n      }, t.scale = {\n        x: 1,\n        y: 1\n      }, t.wheelDelta = 0, t.button = -1, t.pixelRatio = parseInt(t.element.getAttribute(\"data-pixel-ratio\"), 10) || 1, t.sourceEvents = {\n        mousemove: null,\n        mousedown: null,\n        mouseup: null,\n        mousewheel: null\n      }, t.mousemove = function (e) {\n        var n = i._getRelativeMousePosition(e, t.element, t.pixelRatio);\n        e.changedTouches && (t.button = 0, e.preventDefault()), t.absolute.x = n.x, t.absolute.y = n.y, t.position.x = t.absolute.x * t.scale.x + t.offset.x, t.position.y = t.absolute.y * t.scale.y + t.offset.y, t.sourceEvents.mousemove = e;\n      }, t.mousedown = function (e) {\n        var n = i._getRelativeMousePosition(e, t.element, t.pixelRatio);\n        e.changedTouches ? (t.button = 0, e.preventDefault()) : t.button = e.button, t.absolute.x = n.x, t.absolute.y = n.y, t.position.x = t.absolute.x * t.scale.x + t.offset.x, t.position.y = t.absolute.y * t.scale.y + t.offset.y, t.mousedownPosition.x = t.position.x, t.mousedownPosition.y = t.position.y, t.sourceEvents.mousedown = e;\n      }, t.mouseup = function (e) {\n        var n = i._getRelativeMousePosition(e, t.element, t.pixelRatio);\n        e.changedTouches && e.preventDefault(), t.button = -1, t.absolute.x = n.x, t.absolute.y = n.y, t.position.x = t.absolute.x * t.scale.x + t.offset.x, t.position.y = t.absolute.y * t.scale.y + t.offset.y, t.mouseupPosition.x = t.position.x, t.mouseupPosition.y = t.position.y, t.sourceEvents.mouseup = e;\n      }, t.mousewheel = function (e) {\n        t.wheelDelta = Math.max(-1, Math.min(1, e.wheelDelta || -e.detail)), e.preventDefault();\n      }, i.setElement(t, t.element), t;\n    }, i.setElement = function (e, t) {\n      e.element = t, t.addEventListener(\"mousemove\", e.mousemove), t.addEventListener(\"mousedown\", e.mousedown), t.addEventListener(\"mouseup\", e.mouseup), t.addEventListener(\"mousewheel\", e.mousewheel), t.addEventListener(\"DOMMouseScroll\", e.mousewheel), t.addEventListener(\"touchmove\", e.mousemove), t.addEventListener(\"touchstart\", e.mousedown), t.addEventListener(\"touchend\", e.mouseup);\n    }, i.clearSourceEvents = function (e) {\n      e.sourceEvents.mousemove = null, e.sourceEvents.mousedown = null, e.sourceEvents.mouseup = null, e.sourceEvents.mousewheel = null, e.wheelDelta = 0;\n    }, i.setOffset = function (e, t) {\n      e.offset.x = t.x, e.offset.y = t.y, e.position.x = e.absolute.x * e.scale.x + e.offset.x, e.position.y = e.absolute.y * e.scale.y + e.offset.y;\n    }, i.setScale = function (e, t) {\n      e.scale.x = t.x, e.scale.y = t.y, e.position.x = e.absolute.x * e.scale.x + e.offset.x, e.position.y = e.absolute.y * e.scale.y + e.offset.y;\n    }, i._getRelativeMousePosition = function (e, t, n) {\n      var i,\n        o,\n        r = t.getBoundingClientRect(),\n        a = document.documentElement || document.body.parentNode || document.body,\n        s = void 0 !== window.pageXOffset ? window.pageXOffset : a.scrollLeft,\n        l = void 0 !== window.pageYOffset ? window.pageYOffset : a.scrollTop,\n        c = e.changedTouches;\n      return c ? (i = c[0].pageX - r.left - s, o = c[0].pageY - r.top - l) : (i = e.pageX - r.left - s, o = e.pageY - r.top - l), {\n        x: i / (t.clientWidth / (t.width || t.clientWidth) * n),\n        y: o / (t.clientHeight / (t.height || t.clientHeight) * n)\n      };\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(14),\n      r = n(9),\n      a = n(1);\n    i.collisions = function (e, t) {\n      for (var n = [], s = t.pairs.table, l = 0; l < e.length; l++) {\n        var c = e[l][0],\n          u = e[l][1];\n        if ((!c.isStatic && !c.isSleeping || !u.isStatic && !u.isSleeping) && i.canCollide(c.collisionFilter, u.collisionFilter) && a.overlaps(c.bounds, u.bounds)) for (var d = c.parts.length > 1 ? 1 : 0; d < c.parts.length; d++) {\n          for (var p = c.parts[d], f = u.parts.length > 1 ? 1 : 0; f < u.parts.length; f++) {\n            var v = u.parts[f];\n            if (p === c && v === u || a.overlaps(p.bounds, v.bounds)) {\n              var m,\n                y = s[r.id(p, v)];\n              m = y && y.isActive ? y.collision : null;\n              var g = o.collides(p, v, m);\n              g.collided && n.push(g);\n            }\n          }\n        }\n      }\n      return n;\n    }, i.canCollide = function (e, t) {\n      return e.group === t.group && 0 !== e.group ? e.group > 0 : 0 != (e.mask & t.category) && 0 != (t.mask & e.category);\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(3),\n      r = n(2);\n    i.collides = function (e, t, n) {\n      var a,\n        s,\n        l,\n        c,\n        u = !1;\n      if (n) {\n        var d = e.parent,\n          p = t.parent,\n          f = d.speed * d.speed + d.angularSpeed * d.angularSpeed + p.speed * p.speed + p.angularSpeed * p.angularSpeed;\n        u = n && n.collided && f < .2, c = n;\n      } else c = {\n        collided: !1,\n        bodyA: e,\n        bodyB: t\n      };\n      if (n && u) {\n        var v = c.axisBody,\n          m = v === e ? t : e,\n          y = [v.axes[n.axisNumber]];\n        if (l = i._overlapAxes(v.vertices, m.vertices, y), c.reused = !0, l.overlap <= 0) return c.collided = !1, c;\n      } else {\n        if ((a = i._overlapAxes(e.vertices, t.vertices, e.axes)).overlap <= 0) return c.collided = !1, c;\n        if ((s = i._overlapAxes(t.vertices, e.vertices, t.axes)).overlap <= 0) return c.collided = !1, c;\n        a.overlap < s.overlap ? (l = a, c.axisBody = e) : (l = s, c.axisBody = t), c.axisNumber = l.axisNumber;\n      }\n      c.bodyA = e.id < t.id ? e : t, c.bodyB = e.id < t.id ? t : e, c.collided = !0, c.depth = l.overlap, c.parentA = c.bodyA.parent, c.parentB = c.bodyB.parent, e = c.bodyA, t = c.bodyB, r.dot(l.axis, r.sub(t.position, e.position)) < 0 ? c.normal = {\n        x: l.axis.x,\n        y: l.axis.y\n      } : c.normal = {\n        x: -l.axis.x,\n        y: -l.axis.y\n      }, c.tangent = r.perp(c.normal), c.penetration = c.penetration || {}, c.penetration.x = c.normal.x * c.depth, c.penetration.y = c.normal.y * c.depth;\n      var g = i._findSupports(e, t, c.normal),\n        x = [];\n      if (o.contains(e.vertices, g[0]) && x.push(g[0]), o.contains(e.vertices, g[1]) && x.push(g[1]), x.length < 2) {\n        var h = i._findSupports(t, e, r.neg(c.normal));\n        o.contains(t.vertices, h[0]) && x.push(h[0]), x.length < 2 && o.contains(t.vertices, h[1]) && x.push(h[1]);\n      }\n      return x.length < 1 && (x = [g[0]]), c.supports = x, c;\n    }, i._overlapAxes = function (e, t, n) {\n      for (var o, a, s = r._temp[0], l = r._temp[1], c = {\n          overlap: Number.MAX_VALUE\n        }, u = 0; u < n.length; u++) {\n        if (a = n[u], i._projectToAxis(s, e, a), i._projectToAxis(l, t, a), (o = Math.min(s.max - l.min, l.max - s.min)) <= 0) return c.overlap = o, c;\n        o < c.overlap && (c.overlap = o, c.axis = a, c.axisNumber = u);\n      }\n      return c;\n    }, i._projectToAxis = function (e, t, n) {\n      for (var i = r.dot(t[0], n), o = i, a = 1; a < t.length; a += 1) {\n        var s = r.dot(t[a], n);\n        s > o ? o = s : s < i && (i = s);\n      }\n      e.min = i, e.max = o;\n    }, i._findSupports = function (e, t, n) {\n      for (var i, o, a, s, l = Number.MAX_VALUE, c = r._temp[0], u = t.vertices, d = e.position, p = 0; p < u.length; p++) {\n        o = u[p], c.x = o.x - d.x, c.y = o.y - d.y, (i = -r.dot(n, c)) < l && (l = i, a = o);\n      }\n      return o = u[a.index - 1 >= 0 ? a.index - 1 : u.length - 1], c.x = o.x - d.x, c.y = o.y - d.y, l = -r.dot(n, c), s = o, o = u[(a.index + 1) % u.length], c.x = o.x - d.x, c.y = o.y - d.y, (i = -r.dot(n, c)) < l && (s = o), [a, s];\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(0);\n    i._registry = {}, i.register = function (e) {\n      if (i.isPlugin(e) || o.warn(\"Plugin.register:\", i.toString(e), \"does not implement all required fields.\"), e.name in i._registry) {\n        var t = i._registry[e.name],\n          n = i.versionParse(e.version).number,\n          r = i.versionParse(t.version).number;\n        n > r ? (o.warn(\"Plugin.register:\", i.toString(t), \"was upgraded to\", i.toString(e)), i._registry[e.name] = e) : n < r ? o.warn(\"Plugin.register:\", i.toString(t), \"can not be downgraded to\", i.toString(e)) : e !== t && o.warn(\"Plugin.register:\", i.toString(e), \"is already registered to different plugin object\");\n      } else i._registry[e.name] = e;\n      return e;\n    }, i.resolve = function (e) {\n      return i._registry[i.dependencyParse(e).name];\n    }, i.toString = function (e) {\n      return \"string\" == typeof e ? e : (e.name || \"anonymous\") + \"@\" + (e.version || e.range || \"0.0.0\");\n    }, i.isPlugin = function (e) {\n      return e && e.name && e.version && e.install;\n    }, i.isUsed = function (e, t) {\n      return e.used.indexOf(t) > -1;\n    }, i.isFor = function (e, t) {\n      var n = e.for && i.dependencyParse(e.for);\n      return !e.for || t.name === n.name && i.versionSatisfies(t.version, n.range);\n    }, i.use = function (e, t) {\n      if (e.uses = (e.uses || []).concat(t || []), 0 !== e.uses.length) {\n        for (var n = i.dependencies(e), r = o.topologicalSort(n), a = [], s = 0; s < r.length; s += 1) {\n          if (r[s] !== e.name) {\n            var l = i.resolve(r[s]);\n            l ? i.isUsed(e, l.name) || (i.isFor(l, e) || (o.warn(\"Plugin.use:\", i.toString(l), \"is for\", l.for, \"but installed on\", i.toString(e) + \".\"), l._warned = !0), l.install ? l.install(e) : (o.warn(\"Plugin.use:\", i.toString(l), \"does not specify an install function.\"), l._warned = !0), l._warned ? (a.push(\"🔶 \" + i.toString(l)), delete l._warned) : a.push(\"✅ \" + i.toString(l)), e.used.push(l.name)) : a.push(\"❌ \" + r[s]);\n          }\n        }\n        a.length > 0 && o.info(a.join(\"  \"));\n      } else o.warn(\"Plugin.use:\", i.toString(e), \"does not specify any dependencies to install.\");\n    }, i.dependencies = function (e, t) {\n      var n = i.dependencyParse(e),\n        r = n.name;\n      if (!(r in (t = t || {}))) {\n        e = i.resolve(e) || e, t[r] = o.map(e.uses || [], function (t) {\n          i.isPlugin(t) && i.register(t);\n          var r = i.dependencyParse(t),\n            a = i.resolve(t);\n          return a && !i.versionSatisfies(a.version, r.range) ? (o.warn(\"Plugin.dependencies:\", i.toString(a), \"does not satisfy\", i.toString(r), \"used by\", i.toString(n) + \".\"), a._warned = !0, e._warned = !0) : a || (o.warn(\"Plugin.dependencies:\", i.toString(t), \"used by\", i.toString(n), \"could not be resolved.\"), e._warned = !0), r.name;\n        });\n        for (var a = 0; a < t[r].length; a += 1) {\n          i.dependencies(t[r][a], t);\n        }\n        return t;\n      }\n    }, i.dependencyParse = function (e) {\n      return o.isString(e) ? (/^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/.test(e) || o.warn(\"Plugin.dependencyParse:\", e, \"is not a valid dependency string.\"), {\n        name: e.split(\"@\")[0],\n        range: e.split(\"@\")[1] || \"*\"\n      }) : {\n        name: e.name,\n        range: e.range || e.version\n      };\n    }, i.versionParse = function (e) {\n      var t = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-]+)?$/;\n      t.test(e) || o.warn(\"Plugin.versionParse:\", e, \"is not a valid version or range.\");\n      var n = t.exec(e),\n        i = Number(n[4]),\n        r = Number(n[5]),\n        a = Number(n[6]);\n      return {\n        isRange: Boolean(n[1] || n[2]),\n        version: n[3],\n        range: e,\n        operator: n[1] || n[2] || \"\",\n        major: i,\n        minor: r,\n        patch: a,\n        parts: [i, r, a],\n        prerelease: n[7],\n        number: 1e8 * i + 1e4 * r + a\n      };\n    }, i.versionSatisfies = function (e, t) {\n      t = t || \"*\";\n      var n = i.versionParse(t),\n        o = i.versionParse(e);\n      if (n.isRange) {\n        if (\"*\" === n.operator || \"*\" === e) return !0;\n        if (\">\" === n.operator) return o.number > n.number;\n        if (\">=\" === n.operator) return o.number >= n.number;\n        if (\"~\" === n.operator) return o.major === n.major && o.minor === n.minor && o.patch >= n.patch;\n        if (\"^\" === n.operator) return n.major > 0 ? o.major === n.major && o.number >= n.number : n.minor > 0 ? o.minor === n.minor && o.patch >= n.patch : o.patch === n.patch;\n      }\n      return e === t || \"*\" === e;\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(0),\n      r = n(5),\n      a = n(1),\n      s = n(4),\n      l = n(2),\n      c = n(12);\n    !function () {\n      var e, t;\n      \"undefined\" != typeof window && (e = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (e) {\n        window.setTimeout(function () {\n          e(o.now());\n        }, 1e3 / 60);\n      }, t = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame), i._goodFps = 30, i._goodDelta = 1e3 / 60, i.create = function (e) {\n        var t = {\n            controller: i,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            timing: {\n              historySize: 60,\n              delta: 0,\n              deltaHistory: [],\n              lastTime: 0,\n              lastTimestamp: 0,\n              lastElapsed: 0,\n              timestampElapsed: 0,\n              timestampElapsedHistory: [],\n              engineDeltaHistory: [],\n              engineElapsedHistory: [],\n              elapsedHistory: []\n            },\n            options: {\n              width: 800,\n              height: 600,\n              pixelRatio: 1,\n              background: \"#14151f\",\n              wireframeBackground: \"#14151f\",\n              hasBounds: !!e.bounds,\n              enabled: !0,\n              wireframes: !0,\n              showSleeping: !0,\n              showDebug: !1,\n              showStats: !1,\n              showPerformance: !1,\n              showBroadphase: !1,\n              showBounds: !1,\n              showVelocity: !1,\n              showCollisions: !1,\n              showSeparations: !1,\n              showAxes: !1,\n              showPositions: !1,\n              showAngleIndicator: !1,\n              showIds: !1,\n              showVertexNumbers: !1,\n              showConvexHulls: !1,\n              showInternalEdges: !1,\n              showMousePosition: !1\n            }\n          },\n          n = o.extend(t, e);\n        return n.canvas && (n.canvas.width = n.options.width || n.canvas.width, n.canvas.height = n.options.height || n.canvas.height), n.mouse = e.mouse, n.engine = e.engine, n.canvas = n.canvas || d(n.options.width, n.options.height), n.context = n.canvas.getContext(\"2d\"), n.textures = {}, n.bounds = n.bounds || {\n          min: {\n            x: 0,\n            y: 0\n          },\n          max: {\n            x: n.canvas.width,\n            y: n.canvas.height\n          }\n        }, 1 !== n.options.pixelRatio && i.setPixelRatio(n, n.options.pixelRatio), o.isElement(n.element) ? n.element.appendChild(n.canvas) : n.canvas.parentNode || o.log(\"Render.create: options.element was undefined, render.canvas was created but not appended\", \"warn\"), n;\n      }, i.run = function (t) {\n        !function o(r) {\n          t.frameRequestId = e(o), n(t, r), i.world(t, r), (t.options.showStats || t.options.showDebug) && i.stats(t, t.context, r), (t.options.showPerformance || t.options.showDebug) && i.performance(t, t.context, r);\n        }();\n      }, i.stop = function (e) {\n        t(e.frameRequestId);\n      }, i.setPixelRatio = function (e, t) {\n        var n = e.options,\n          i = e.canvas;\n        \"auto\" === t && (t = p(i)), n.pixelRatio = t, i.setAttribute(\"data-pixel-ratio\", t), i.width = n.width * t, i.height = n.height * t, i.style.width = n.width + \"px\", i.style.height = n.height + \"px\";\n      }, i.lookAt = function (e, t, n, i) {\n        i = void 0 === i || i, t = o.isArray(t) ? t : [t], n = n || {\n          x: 0,\n          y: 0\n        };\n        for (var r = {\n            min: {\n              x: 1 / 0,\n              y: 1 / 0\n            },\n            max: {\n              x: -1 / 0,\n              y: -1 / 0\n            }\n          }, a = 0; a < t.length; a += 1) {\n          var s = t[a],\n            l = s.bounds ? s.bounds.min : s.min || s.position || s,\n            u = s.bounds ? s.bounds.max : s.max || s.position || s;\n          l && u && (l.x < r.min.x && (r.min.x = l.x), u.x > r.max.x && (r.max.x = u.x), l.y < r.min.y && (r.min.y = l.y), u.y > r.max.y && (r.max.y = u.y));\n        }\n        var d = r.max.x - r.min.x + 2 * n.x,\n          p = r.max.y - r.min.y + 2 * n.y,\n          f = e.canvas.height,\n          v = e.canvas.width / f,\n          m = d / p,\n          y = 1,\n          g = 1;\n        m > v ? g = m / v : y = v / m, e.options.hasBounds = !0, e.bounds.min.x = r.min.x, e.bounds.max.x = r.min.x + d * y, e.bounds.min.y = r.min.y, e.bounds.max.y = r.min.y + p * g, i && (e.bounds.min.x += .5 * d - d * y * .5, e.bounds.max.x += .5 * d - d * y * .5, e.bounds.min.y += .5 * p - p * g * .5, e.bounds.max.y += .5 * p - p * g * .5), e.bounds.min.x -= n.x, e.bounds.max.x -= n.x, e.bounds.min.y -= n.y, e.bounds.max.y -= n.y, e.mouse && (c.setScale(e.mouse, {\n          x: (e.bounds.max.x - e.bounds.min.x) / e.canvas.width,\n          y: (e.bounds.max.y - e.bounds.min.y) / e.canvas.height\n        }), c.setOffset(e.mouse, e.bounds.min));\n      }, i.startViewTransform = function (e) {\n        var t = e.bounds.max.x - e.bounds.min.x,\n          n = e.bounds.max.y - e.bounds.min.y,\n          i = t / e.options.width,\n          o = n / e.options.height;\n        e.context.setTransform(e.options.pixelRatio / i, 0, 0, e.options.pixelRatio / o, 0, 0), e.context.translate(-e.bounds.min.x, -e.bounds.min.y);\n      }, i.endViewTransform = function (e) {\n        e.context.setTransform(e.options.pixelRatio, 0, 0, e.options.pixelRatio, 0, 0);\n      }, i.world = function (e, t) {\n        var n,\n          u = o.now(),\n          d = e.engine,\n          p = d.world,\n          f = e.canvas,\n          m = e.context,\n          y = e.options,\n          g = e.timing,\n          x = r.allBodies(p),\n          h = r.allConstraints(p),\n          b = y.wireframes ? y.wireframeBackground : y.background,\n          S = [],\n          w = [],\n          A = {\n            timestamp: d.timing.timestamp\n          };\n        if (s.trigger(e, \"beforeRender\", A), e.currentBackground !== b && v(e, b), m.globalCompositeOperation = \"source-in\", m.fillStyle = \"transparent\", m.fillRect(0, 0, f.width, f.height), m.globalCompositeOperation = \"source-over\", y.hasBounds) {\n          for (n = 0; n < x.length; n++) {\n            var P = x[n];\n            a.overlaps(P.bounds, e.bounds) && S.push(P);\n          }\n          for (n = 0; n < h.length; n++) {\n            var M = h[n],\n              C = M.bodyA,\n              B = M.bodyB,\n              _ = M.pointA,\n              k = M.pointB;\n            C && (_ = l.add(C.position, M.pointA)), B && (k = l.add(B.position, M.pointB)), _ && k && (a.contains(e.bounds, _) || a.contains(e.bounds, k)) && w.push(M);\n          }\n          i.startViewTransform(e), e.mouse && (c.setScale(e.mouse, {\n            x: (e.bounds.max.x - e.bounds.min.x) / e.options.width,\n            y: (e.bounds.max.y - e.bounds.min.y) / e.options.height\n          }), c.setOffset(e.mouse, e.bounds.min));\n        } else w = h, S = x, 1 !== e.options.pixelRatio && e.context.setTransform(e.options.pixelRatio, 0, 0, e.options.pixelRatio, 0, 0);\n        !y.wireframes || d.enableSleeping && y.showSleeping ? i.bodies(e, S, m) : (y.showConvexHulls && i.bodyConvexHulls(e, S, m), i.bodyWireframes(e, S, m)), y.showBounds && i.bodyBounds(e, S, m), (y.showAxes || y.showAngleIndicator) && i.bodyAxes(e, S, m), y.showPositions && i.bodyPositions(e, S, m), y.showVelocity && i.bodyVelocity(e, S, m), y.showIds && i.bodyIds(e, S, m), y.showSeparations && i.separations(e, d.pairs.list, m), y.showCollisions && i.collisions(e, d.pairs.list, m), y.showVertexNumbers && i.vertexNumbers(e, S, m), y.showMousePosition && i.mousePosition(e, e.mouse, m), i.constraints(w, m), y.showBroadphase && i.grid(e, d.grid, m), y.hasBounds && i.endViewTransform(e), s.trigger(e, \"afterRender\", A), g.lastElapsed = o.now() - u;\n      }, i.stats = function (e, t, n) {\n        for (var i = e.engine, o = i.world, a = r.allBodies(o), s = 0, l = 0, c = 0; c < a.length; c += 1) {\n          s += a[c].parts.length;\n        }\n        var u = {\n          Part: s,\n          Body: a.length,\n          Cons: r.allConstraints(o).length,\n          Comp: r.allComposites(o).length,\n          Pair: i.pairs.list.length\n        };\n        for (var d in t.fillStyle = \"#0e0f19\", t.fillRect(l, 0, 302.5, 44), t.font = \"12px Arial\", t.textBaseline = \"top\", t.textAlign = \"right\", u) {\n          var p = u[d];\n          t.fillStyle = \"#aaa\", t.fillText(d, l + 55, 8), t.fillStyle = \"#eee\", t.fillText(p, l + 55, 26), l += 55;\n        }\n      }, i.performance = function (e, t) {\n        var n = e.engine,\n          o = e.timing,\n          r = o.deltaHistory,\n          a = o.elapsedHistory,\n          s = o.timestampElapsedHistory,\n          l = o.engineDeltaHistory,\n          c = o.engineElapsedHistory,\n          d = n.timing.lastDelta,\n          p = u(r),\n          f = u(a),\n          v = u(l),\n          m = u(c),\n          y = u(s) / p || 0,\n          g = 1e3 / p || 0;\n        t.fillStyle = \"#0e0f19\", t.fillRect(0, 50, 370, 34), i.status(t, 10, 69, 60, 4, r.length, Math.round(g) + \" fps\", g / i._goodFps, function (e) {\n          return r[e] / p - 1;\n        }), i.status(t, 82, 69, 60, 4, l.length, d.toFixed(2) + \" dt\", i._goodDelta / d, function (e) {\n          return l[e] / v - 1;\n        }), i.status(t, 154, 69, 60, 4, c.length, m.toFixed(2) + \" ut\", 1 - m / i._goodFps, function (e) {\n          return c[e] / m - 1;\n        }), i.status(t, 226, 69, 60, 4, a.length, f.toFixed(2) + \" rt\", 1 - f / i._goodFps, function (e) {\n          return a[e] / f - 1;\n        }), i.status(t, 298, 69, 60, 4, s.length, y.toFixed(2) + \" x\", y * y * y, function (e) {\n          return (s[e] / r[e] / y || 0) - 1;\n        });\n      }, i.status = function (e, t, n, i, r, a, s, l, c) {\n        e.strokeStyle = \"#888\", e.fillStyle = \"#444\", e.lineWidth = 1, e.fillRect(t, n + 7, i, 1), e.beginPath(), e.moveTo(t, n + 7 - r * o.clamp(.4 * c(0), -2, 2));\n        for (var u = 0; u < i; u += 1) {\n          e.lineTo(t + u, n + 7 - (u < a ? r * o.clamp(.4 * c(u), -2, 2) : 0));\n        }\n        e.stroke(), e.fillStyle = \"hsl(\" + o.clamp(25 + 95 * l, 0, 120) + \",100%,60%)\", e.fillRect(t, n - 7, 4, 4), e.font = \"12px Arial\", e.textBaseline = \"middle\", e.textAlign = \"right\", e.fillStyle = \"#eee\", e.fillText(s, t + i, n - 5);\n      }, i.constraints = function (e, t) {\n        for (var n = t, i = 0; i < e.length; i++) {\n          var r = e[i];\n          if (r.render.visible && r.pointA && r.pointB) {\n            var a,\n              s,\n              c = r.bodyA,\n              u = r.bodyB;\n            if (a = c ? l.add(c.position, r.pointA) : r.pointA, \"pin\" === r.render.type) n.beginPath(), n.arc(a.x, a.y, 3, 0, 2 * Math.PI), n.closePath();else {\n              if (s = u ? l.add(u.position, r.pointB) : r.pointB, n.beginPath(), n.moveTo(a.x, a.y), \"spring\" === r.render.type) for (var d, p = l.sub(s, a), f = l.perp(l.normalise(p)), v = Math.ceil(o.clamp(r.length / 5, 12, 20)), m = 1; m < v; m += 1) {\n                d = m % 2 == 0 ? 1 : -1, n.lineTo(a.x + p.x * (m / v) + f.x * d * 4, a.y + p.y * (m / v) + f.y * d * 4);\n              }\n              n.lineTo(s.x, s.y);\n            }\n            r.render.lineWidth && (n.lineWidth = r.render.lineWidth, n.strokeStyle = r.render.strokeStyle, n.stroke()), r.render.anchors && (n.fillStyle = r.render.strokeStyle, n.beginPath(), n.arc(a.x, a.y, 3, 0, 2 * Math.PI), n.arc(s.x, s.y, 3, 0, 2 * Math.PI), n.closePath(), n.fill());\n          }\n        }\n      }, i.bodies = function (e, t, n) {\n        var i,\n          o,\n          r,\n          a,\n          s = n,\n          l = (e.engine, e.options),\n          c = l.showInternalEdges || !l.wireframes;\n        for (r = 0; r < t.length; r++) {\n          if ((i = t[r]).render.visible) for (a = i.parts.length > 1 ? 1 : 0; a < i.parts.length; a++) {\n            if ((o = i.parts[a]).render.visible) {\n              if (l.showSleeping && i.isSleeping ? s.globalAlpha = .5 * o.render.opacity : 1 !== o.render.opacity && (s.globalAlpha = o.render.opacity), o.render.sprite && o.render.sprite.texture && !l.wireframes) {\n                var u = o.render.sprite,\n                  d = f(e, u.texture);\n                s.translate(o.position.x, o.position.y), s.rotate(o.angle), s.drawImage(d, d.width * -u.xOffset * u.xScale, d.height * -u.yOffset * u.yScale, d.width * u.xScale, d.height * u.yScale), s.rotate(-o.angle), s.translate(-o.position.x, -o.position.y);\n              } else {\n                if (o.circleRadius) s.beginPath(), s.arc(o.position.x, o.position.y, o.circleRadius, 0, 2 * Math.PI);else {\n                  s.beginPath(), s.moveTo(o.vertices[0].x, o.vertices[0].y);\n                  for (var p = 1; p < o.vertices.length; p++) {\n                    !o.vertices[p - 1].isInternal || c ? s.lineTo(o.vertices[p].x, o.vertices[p].y) : s.moveTo(o.vertices[p].x, o.vertices[p].y), o.vertices[p].isInternal && !c && s.moveTo(o.vertices[(p + 1) % o.vertices.length].x, o.vertices[(p + 1) % o.vertices.length].y);\n                  }\n                  s.lineTo(o.vertices[0].x, o.vertices[0].y), s.closePath();\n                }\n                l.wireframes ? (s.lineWidth = 1, s.strokeStyle = \"#bbb\", s.stroke()) : (s.fillStyle = o.render.fillStyle, o.render.lineWidth && (s.lineWidth = o.render.lineWidth, s.strokeStyle = o.render.strokeStyle, s.stroke()), s.fill());\n              }\n              s.globalAlpha = 1;\n            }\n          }\n        }\n      }, i.bodyWireframes = function (e, t, n) {\n        var i,\n          o,\n          r,\n          a,\n          s,\n          l = n,\n          c = e.options.showInternalEdges;\n        for (l.beginPath(), r = 0; r < t.length; r++) {\n          if ((i = t[r]).render.visible) for (s = i.parts.length > 1 ? 1 : 0; s < i.parts.length; s++) {\n            for (o = i.parts[s], l.moveTo(o.vertices[0].x, o.vertices[0].y), a = 1; a < o.vertices.length; a++) {\n              !o.vertices[a - 1].isInternal || c ? l.lineTo(o.vertices[a].x, o.vertices[a].y) : l.moveTo(o.vertices[a].x, o.vertices[a].y), o.vertices[a].isInternal && !c && l.moveTo(o.vertices[(a + 1) % o.vertices.length].x, o.vertices[(a + 1) % o.vertices.length].y);\n            }\n            l.lineTo(o.vertices[0].x, o.vertices[0].y);\n          }\n        }\n        l.lineWidth = 1, l.strokeStyle = \"#bbb\", l.stroke();\n      }, i.bodyConvexHulls = function (e, t, n) {\n        var i,\n          o,\n          r,\n          a = n;\n        for (a.beginPath(), o = 0; o < t.length; o++) {\n          if ((i = t[o]).render.visible && 1 !== i.parts.length) {\n            for (a.moveTo(i.vertices[0].x, i.vertices[0].y), r = 1; r < i.vertices.length; r++) {\n              a.lineTo(i.vertices[r].x, i.vertices[r].y);\n            }\n            a.lineTo(i.vertices[0].x, i.vertices[0].y);\n          }\n        }\n        a.lineWidth = 1, a.strokeStyle = \"rgba(255,255,255,0.2)\", a.stroke();\n      }, i.vertexNumbers = function (e, t, n) {\n        var i,\n          o,\n          r,\n          a = n;\n        for (i = 0; i < t.length; i++) {\n          var s = t[i].parts;\n          for (r = s.length > 1 ? 1 : 0; r < s.length; r++) {\n            var l = s[r];\n            for (o = 0; o < l.vertices.length; o++) {\n              a.fillStyle = \"rgba(255,255,255,0.2)\", a.fillText(i + \"_\" + o, l.position.x + .8 * (l.vertices[o].x - l.position.x), l.position.y + .8 * (l.vertices[o].y - l.position.y));\n            }\n          }\n        }\n      }, i.mousePosition = function (e, t, n) {\n        var i = n;\n        i.fillStyle = \"rgba(255,255,255,0.8)\", i.fillText(t.position.x + \"  \" + t.position.y, t.position.x + 5, t.position.y - 5);\n      }, i.bodyBounds = function (e, t, n) {\n        var i = n,\n          o = (e.engine, e.options);\n        i.beginPath();\n        for (var r = 0; r < t.length; r++) {\n          if (t[r].render.visible) for (var a = t[r].parts, s = a.length > 1 ? 1 : 0; s < a.length; s++) {\n            var l = a[s];\n            i.rect(l.bounds.min.x, l.bounds.min.y, l.bounds.max.x - l.bounds.min.x, l.bounds.max.y - l.bounds.min.y);\n          }\n        }\n        o.wireframes ? i.strokeStyle = \"rgba(255,255,255,0.08)\" : i.strokeStyle = \"rgba(0,0,0,0.1)\", i.lineWidth = 1, i.stroke();\n      }, i.bodyAxes = function (e, t, n) {\n        var i,\n          o,\n          r,\n          a,\n          s = n,\n          l = (e.engine, e.options);\n        for (s.beginPath(), o = 0; o < t.length; o++) {\n          var c = t[o],\n            u = c.parts;\n          if (c.render.visible) if (l.showAxes) for (r = u.length > 1 ? 1 : 0; r < u.length; r++) {\n            for (i = u[r], a = 0; a < i.axes.length; a++) {\n              var d = i.axes[a];\n              s.moveTo(i.position.x, i.position.y), s.lineTo(i.position.x + 20 * d.x, i.position.y + 20 * d.y);\n            }\n          } else for (r = u.length > 1 ? 1 : 0; r < u.length; r++) {\n            for (i = u[r], a = 0; a < i.axes.length; a++) {\n              s.moveTo(i.position.x, i.position.y), s.lineTo((i.vertices[0].x + i.vertices[i.vertices.length - 1].x) / 2, (i.vertices[0].y + i.vertices[i.vertices.length - 1].y) / 2);\n            }\n          }\n        }\n        l.wireframes ? (s.strokeStyle = \"indianred\", s.lineWidth = 1) : (s.strokeStyle = \"rgba(255, 255, 255, 0.4)\", s.globalCompositeOperation = \"overlay\", s.lineWidth = 2), s.stroke(), s.globalCompositeOperation = \"source-over\";\n      }, i.bodyPositions = function (e, t, n) {\n        var i,\n          o,\n          r,\n          a,\n          s = n,\n          l = (e.engine, e.options);\n        for (s.beginPath(), r = 0; r < t.length; r++) {\n          if ((i = t[r]).render.visible) for (a = 0; a < i.parts.length; a++) {\n            o = i.parts[a], s.arc(o.position.x, o.position.y, 3, 0, 2 * Math.PI, !1), s.closePath();\n          }\n        }\n        for (l.wireframes ? s.fillStyle = \"indianred\" : s.fillStyle = \"rgba(0,0,0,0.5)\", s.fill(), s.beginPath(), r = 0; r < t.length; r++) {\n          (i = t[r]).render.visible && (s.arc(i.positionPrev.x, i.positionPrev.y, 2, 0, 2 * Math.PI, !1), s.closePath());\n        }\n        s.fillStyle = \"rgba(255,165,0,0.8)\", s.fill();\n      }, i.bodyVelocity = function (e, t, n) {\n        var i = n;\n        i.beginPath();\n        for (var o = 0; o < t.length; o++) {\n          var r = t[o];\n          r.render.visible && (i.moveTo(r.position.x, r.position.y), i.lineTo(r.position.x + 2 * (r.position.x - r.positionPrev.x), r.position.y + 2 * (r.position.y - r.positionPrev.y)));\n        }\n        i.lineWidth = 3, i.strokeStyle = \"cornflowerblue\", i.stroke();\n      }, i.bodyIds = function (e, t, n) {\n        var i,\n          o,\n          r = n;\n        for (i = 0; i < t.length; i++) {\n          if (t[i].render.visible) {\n            var a = t[i].parts;\n            for (o = a.length > 1 ? 1 : 0; o < a.length; o++) {\n              var s = a[o];\n              r.font = \"12px Arial\", r.fillStyle = \"rgba(255,255,255,0.5)\", r.fillText(s.id, s.position.x + 10, s.position.y - 10);\n            }\n          }\n        }\n      }, i.collisions = function (e, t, n) {\n        var i,\n          o,\n          r,\n          a,\n          s = n,\n          l = e.options;\n        for (s.beginPath(), r = 0; r < t.length; r++) {\n          if ((i = t[r]).isActive) for (o = i.collision, a = 0; a < i.activeContacts.length; a++) {\n            var c = i.activeContacts[a].vertex;\n            s.rect(c.x - 1.5, c.y - 1.5, 3.5, 3.5);\n          }\n        }\n        for (l.wireframes ? s.fillStyle = \"rgba(255,255,255,0.7)\" : s.fillStyle = \"orange\", s.fill(), s.beginPath(), r = 0; r < t.length; r++) {\n          if ((i = t[r]).isActive && (o = i.collision, i.activeContacts.length > 0)) {\n            var u = i.activeContacts[0].vertex.x,\n              d = i.activeContacts[0].vertex.y;\n            2 === i.activeContacts.length && (u = (i.activeContacts[0].vertex.x + i.activeContacts[1].vertex.x) / 2, d = (i.activeContacts[0].vertex.y + i.activeContacts[1].vertex.y) / 2), o.bodyB === o.supports[0].body || !0 === o.bodyA.isStatic ? s.moveTo(u - 8 * o.normal.x, d - 8 * o.normal.y) : s.moveTo(u + 8 * o.normal.x, d + 8 * o.normal.y), s.lineTo(u, d);\n          }\n        }\n        l.wireframes ? s.strokeStyle = \"rgba(255,165,0,0.7)\" : s.strokeStyle = \"orange\", s.lineWidth = 1, s.stroke();\n      }, i.separations = function (e, t, n) {\n        var i,\n          o,\n          r,\n          a,\n          s,\n          l = n,\n          c = e.options;\n        for (l.beginPath(), s = 0; s < t.length; s++) {\n          if ((i = t[s]).isActive) {\n            r = (o = i.collision).bodyA;\n            var u = 1;\n            (a = o.bodyB).isStatic || r.isStatic || (u = .5), a.isStatic && (u = 0), l.moveTo(a.position.x, a.position.y), l.lineTo(a.position.x - o.penetration.x * u, a.position.y - o.penetration.y * u), u = 1, a.isStatic || r.isStatic || (u = .5), r.isStatic && (u = 0), l.moveTo(r.position.x, r.position.y), l.lineTo(r.position.x + o.penetration.x * u, r.position.y + o.penetration.y * u);\n          }\n        }\n        c.wireframes ? l.strokeStyle = \"rgba(255,165,0,0.5)\" : l.strokeStyle = \"orange\", l.stroke();\n      }, i.grid = function (e, t, n) {\n        var i = n;\n        e.options.wireframes ? i.strokeStyle = \"rgba(255,180,0,0.1)\" : i.strokeStyle = \"rgba(255,180,0,0.5)\", i.beginPath();\n        for (var r = o.keys(t.buckets), a = 0; a < r.length; a++) {\n          var s = r[a];\n          if (!(t.buckets[s].length < 2)) {\n            var l = s.split(/C|R/);\n            i.rect(.5 + parseInt(l[1], 10) * t.bucketWidth, .5 + parseInt(l[2], 10) * t.bucketHeight, t.bucketWidth, t.bucketHeight);\n          }\n        }\n        i.lineWidth = 1, i.stroke();\n      }, i.inspector = function (e, t) {\n        e.engine;\n        var n,\n          i = e.selected,\n          o = e.render,\n          r = o.options;\n        if (r.hasBounds) {\n          var a = o.bounds.max.x - o.bounds.min.x,\n            s = o.bounds.max.y - o.bounds.min.y,\n            l = a / o.options.width,\n            c = s / o.options.height;\n          t.scale(1 / l, 1 / c), t.translate(-o.bounds.min.x, -o.bounds.min.y);\n        }\n        for (var u = 0; u < i.length; u++) {\n          var d = i[u].data;\n          switch (t.translate(.5, .5), t.lineWidth = 1, t.strokeStyle = \"rgba(255,165,0,0.9)\", t.setLineDash([1, 2]), d.type) {\n            case \"body\":\n              n = d.bounds, t.beginPath(), t.rect(Math.floor(n.min.x - 3), Math.floor(n.min.y - 3), Math.floor(n.max.x - n.min.x + 6), Math.floor(n.max.y - n.min.y + 6)), t.closePath(), t.stroke();\n              break;\n            case \"constraint\":\n              var p = d.pointA;\n              d.bodyA && (p = d.pointB), t.beginPath(), t.arc(p.x, p.y, 10, 0, 2 * Math.PI), t.closePath(), t.stroke();\n          }\n          t.setLineDash([]), t.translate(-.5, -.5);\n        }\n        null !== e.selectStart && (t.translate(.5, .5), t.lineWidth = 1, t.strokeStyle = \"rgba(255,165,0,0.6)\", t.fillStyle = \"rgba(255,165,0,0.1)\", n = e.selectBounds, t.beginPath(), t.rect(Math.floor(n.min.x), Math.floor(n.min.y), Math.floor(n.max.x - n.min.x), Math.floor(n.max.y - n.min.y)), t.closePath(), t.stroke(), t.fill(), t.translate(-.5, -.5)), r.hasBounds && t.setTransform(1, 0, 0, 1, 0, 0);\n      };\n      var n = function n(e, t) {\n          var n = e.engine,\n            o = e.timing,\n            r = o.historySize,\n            a = n.timing.timestamp;\n          o.delta = t - o.lastTime || i._goodDelta, o.lastTime = t, o.timestampElapsed = a - o.lastTimestamp || 0, o.lastTimestamp = a, o.deltaHistory.unshift(o.delta), o.deltaHistory.length = Math.min(o.deltaHistory.length, r), o.engineDeltaHistory.unshift(n.timing.lastDelta), o.engineDeltaHistory.length = Math.min(o.engineDeltaHistory.length, r), o.timestampElapsedHistory.unshift(o.timestampElapsed), o.timestampElapsedHistory.length = Math.min(o.timestampElapsedHistory.length, r), o.engineElapsedHistory.unshift(n.timing.lastElapsed), o.engineElapsedHistory.length = Math.min(o.engineElapsedHistory.length, r), o.elapsedHistory.unshift(o.lastElapsed), o.elapsedHistory.length = Math.min(o.elapsedHistory.length, r);\n        },\n        u = function u(e) {\n          for (var t = 0, n = 0; n < e.length; n += 1) {\n            t += e[n];\n          }\n          return t / e.length || 0;\n        },\n        d = function d(e, t) {\n          var n = document.createElement(\"canvas\");\n          return n.width = e, n.height = t, n.oncontextmenu = function () {\n            return !1;\n          }, n.onselectstart = function () {\n            return !1;\n          }, n;\n        },\n        p = function p(e) {\n          var t = e.getContext(\"2d\");\n          return (window.devicePixelRatio || 1) / (t.webkitBackingStorePixelRatio || t.mozBackingStorePixelRatio || t.msBackingStorePixelRatio || t.oBackingStorePixelRatio || t.backingStorePixelRatio || 1);\n        },\n        f = function f(e, t) {\n          var n = e.textures[t];\n          return n || ((n = e.textures[t] = new Image()).src = t, n);\n        },\n        v = function v(e, t) {\n          var n = t;\n          /(jpg|gif|png)$/.test(t) && (n = \"url(\" + t + \")\"), e.canvas.style.background = n, e.canvas.style.backgroundSize = \"contain\", e.currentBackground = t;\n        };\n    }();\n  }, function (e, t) {\n    var n = {};\n    e.exports = n, n.create = function (e) {\n      return {\n        id: n.id(e),\n        vertex: e,\n        normalImpulse: 0,\n        tangentImpulse: 0\n      };\n    }, n.id = function (e) {\n      return e.body.id + \"_\" + e.index;\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(7),\n      r = n(19),\n      a = n(13),\n      s = n(20),\n      l = n(21),\n      c = n(4),\n      u = n(5),\n      d = n(8),\n      p = n(0),\n      f = n(6);\n    i.create = function (e) {\n      e = e || {};\n      var t = p.extend({\n        positionIterations: 6,\n        velocityIterations: 4,\n        constraintIterations: 2,\n        enableSleeping: !1,\n        events: [],\n        plugin: {},\n        grid: null,\n        gravity: {\n          x: 0,\n          y: 1,\n          scale: .001\n        },\n        timing: {\n          timestamp: 0,\n          timeScale: 1,\n          lastDelta: 0,\n          lastElapsed: 0\n        }\n      }, e);\n      return t.world = e.world || u.create({\n        label: \"World\"\n      }), t.grid = l.create(e.grid || e.broadphase), t.pairs = s.create(), t.world.gravity = t.gravity, t.broadphase = t.grid, t.metrics = {}, t;\n    }, i.update = function (e, t, n) {\n      var f = p.now();\n      t = t || 1e3 / 60, n = n || 1;\n      var v,\n        m,\n        y = e.world,\n        g = e.timing,\n        x = e.grid;\n      g.timestamp += t * g.timeScale, g.lastDelta = t * g.timeScale;\n      var h = {\n        timestamp: g.timestamp\n      };\n      c.trigger(e, \"beforeUpdate\", h);\n      var b = u.allBodies(y),\n        S = u.allConstraints(y);\n      for (e.enableSleeping && o.update(b, g.timeScale), i._bodiesApplyGravity(b, e.gravity), i._bodiesUpdate(b, t, g.timeScale, n, y.bounds), d.preSolveAll(b), m = 0; m < e.constraintIterations; m++) {\n        d.solveAll(S, g.timeScale);\n      }\n      d.postSolveAll(b), y.isModified && l.clear(x), l.update(x, b, e, y.isModified), v = x.pairsList, y.isModified && u.setModified(y, !1, !1, !0);\n      var w = a.collisions(v, e),\n        A = e.pairs,\n        P = g.timestamp;\n      for (s.update(A, w, P), s.removeOld(A, P), e.enableSleeping && o.afterCollisions(A.list, g.timeScale), A.collisionStart.length > 0 && c.trigger(e, \"collisionStart\", {\n        pairs: A.collisionStart\n      }), r.preSolvePosition(A.list), m = 0; m < e.positionIterations; m++) {\n        r.solvePosition(A.list, g.timeScale);\n      }\n      for (r.postSolvePosition(b), d.preSolveAll(b), m = 0; m < e.constraintIterations; m++) {\n        d.solveAll(S, g.timeScale);\n      }\n      for (d.postSolveAll(b), r.preSolveVelocity(A.list), m = 0; m < e.velocityIterations; m++) {\n        r.solveVelocity(A.list, g.timeScale);\n      }\n      return A.collisionActive.length > 0 && c.trigger(e, \"collisionActive\", {\n        pairs: A.collisionActive\n      }), A.collisionEnd.length > 0 && c.trigger(e, \"collisionEnd\", {\n        pairs: A.collisionEnd\n      }), i._bodiesClearForces(b), c.trigger(e, \"afterUpdate\", h), e.timing.lastElapsed = p.now() - f, e;\n    }, i.merge = function (e, t) {\n      if (p.extend(e, t), t.world) {\n        e.world = t.world, i.clear(e);\n        for (var n = u.allBodies(e.world), r = 0; r < n.length; r++) {\n          var a = n[r];\n          o.set(a, !1), a.id = p.nextId();\n        }\n      }\n    }, i.clear = function (e) {\n      var t = e.world,\n        n = u.allBodies(t);\n      s.clear(e.pairs), l.clear(e.grid), l.update(e.grid, n, e, !0);\n    }, i._bodiesClearForces = function (e) {\n      for (var t = 0; t < e.length; t++) {\n        var n = e[t];\n        n.force.x = 0, n.force.y = 0, n.torque = 0;\n      }\n    }, i._bodiesApplyGravity = function (e, t) {\n      var n = void 0 !== t.scale ? t.scale : .001;\n      if ((0 !== t.x || 0 !== t.y) && 0 !== n) for (var i = 0; i < e.length; i++) {\n        var o = e[i];\n        o.isStatic || o.isSleeping || (o.force.y += o.mass * t.y * n, o.force.x += o.mass * t.x * n);\n      }\n    }, i._bodiesUpdate = function (e, t, n, i, o) {\n      for (var r = 0; r < e.length; r++) {\n        var a = e[r];\n        a.isStatic || a.isSleeping || f.update(a, t, n, i);\n      }\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(3),\n      r = n(2),\n      a = n(0),\n      s = n(1);\n    i._restingThresh = 4, i._restingThreshTangent = 6, i._positionDampen = .9, i._positionWarming = .8, i._frictionNormalMultiplier = 5, i.preSolvePosition = function (e) {\n      var t, n, i;\n      for (t = 0; t < e.length; t++) {\n        (n = e[t]).isActive && (i = n.activeContacts.length, n.collision.parentA.totalContacts += i, n.collision.parentB.totalContacts += i);\n      }\n    }, i.solvePosition = function (e, t) {\n      var n,\n        o,\n        a,\n        s,\n        l,\n        c,\n        u,\n        d,\n        p,\n        f = r._temp[0],\n        v = r._temp[1],\n        m = r._temp[2],\n        y = r._temp[3];\n      for (n = 0; n < e.length; n++) {\n        (o = e[n]).isActive && !o.isSensor && (s = (a = o.collision).parentA, l = a.parentB, c = a.normal, u = r.sub(r.add(l.positionImpulse, l.position, f), r.add(s.positionImpulse, r.sub(l.position, a.penetration, v), m), y), o.separation = r.dot(c, u));\n      }\n      for (n = 0; n < e.length; n++) {\n        (o = e[n]).isActive && !o.isSensor && (s = (a = o.collision).parentA, l = a.parentB, c = a.normal, p = (o.separation - o.slop) * t, (s.isStatic || l.isStatic) && (p *= 2), s.isStatic || s.isSleeping || (d = i._positionDampen / s.totalContacts, s.positionImpulse.x += c.x * p * d, s.positionImpulse.y += c.y * p * d), l.isStatic || l.isSleeping || (d = i._positionDampen / l.totalContacts, l.positionImpulse.x -= c.x * p * d, l.positionImpulse.y -= c.y * p * d));\n      }\n    }, i.postSolvePosition = function (e) {\n      for (var t = 0; t < e.length; t++) {\n        var n = e[t];\n        if (n.totalContacts = 0, 0 !== n.positionImpulse.x || 0 !== n.positionImpulse.y) {\n          for (var a = 0; a < n.parts.length; a++) {\n            var l = n.parts[a];\n            o.translate(l.vertices, n.positionImpulse), s.update(l.bounds, l.vertices, n.velocity), l.position.x += n.positionImpulse.x, l.position.y += n.positionImpulse.y;\n          }\n          n.positionPrev.x += n.positionImpulse.x, n.positionPrev.y += n.positionImpulse.y, r.dot(n.positionImpulse, n.velocity) < 0 ? (n.positionImpulse.x = 0, n.positionImpulse.y = 0) : (n.positionImpulse.x *= i._positionWarming, n.positionImpulse.y *= i._positionWarming);\n        }\n      }\n    }, i.preSolveVelocity = function (e) {\n      var t,\n        n,\n        i,\n        o,\n        a,\n        s,\n        l,\n        c,\n        u,\n        d,\n        p,\n        f,\n        v,\n        m,\n        y = r._temp[0],\n        g = r._temp[1];\n      for (t = 0; t < e.length; t++) {\n        if ((i = e[t]).isActive && !i.isSensor) for (o = i.activeContacts, s = (a = i.collision).parentA, l = a.parentB, c = a.normal, u = a.tangent, n = 0; n < o.length; n++) {\n          p = (d = o[n]).vertex, f = d.normalImpulse, v = d.tangentImpulse, 0 === f && 0 === v || (y.x = c.x * f + u.x * v, y.y = c.y * f + u.y * v, s.isStatic || s.isSleeping || (m = r.sub(p, s.position, g), s.positionPrev.x += y.x * s.inverseMass, s.positionPrev.y += y.y * s.inverseMass, s.anglePrev += r.cross(m, y) * s.inverseInertia), l.isStatic || l.isSleeping || (m = r.sub(p, l.position, g), l.positionPrev.x -= y.x * l.inverseMass, l.positionPrev.y -= y.y * l.inverseMass, l.anglePrev -= r.cross(m, y) * l.inverseInertia));\n        }\n      }\n    }, i.solveVelocity = function (e, t) {\n      for (var n = t * t, o = r._temp[0], s = r._temp[1], l = r._temp[2], c = r._temp[3], u = r._temp[4], d = r._temp[5], p = 0; p < e.length; p++) {\n        var f = e[p];\n        if (f.isActive && !f.isSensor) {\n          var v = f.collision,\n            m = v.parentA,\n            y = v.parentB,\n            g = v.normal,\n            x = v.tangent,\n            h = f.activeContacts,\n            b = 1 / h.length;\n          m.velocity.x = m.position.x - m.positionPrev.x, m.velocity.y = m.position.y - m.positionPrev.y, y.velocity.x = y.position.x - y.positionPrev.x, y.velocity.y = y.position.y - y.positionPrev.y, m.angularVelocity = m.angle - m.anglePrev, y.angularVelocity = y.angle - y.anglePrev;\n          for (var S = 0; S < h.length; S++) {\n            var w = h[S],\n              A = w.vertex,\n              P = r.sub(A, m.position, s),\n              M = r.sub(A, y.position, l),\n              C = r.add(m.velocity, r.mult(r.perp(P), m.angularVelocity), c),\n              B = r.add(y.velocity, r.mult(r.perp(M), y.angularVelocity), u),\n              _ = r.sub(C, B, d),\n              k = r.dot(g, _),\n              I = r.dot(x, _),\n              T = Math.abs(I),\n              R = a.sign(I),\n              E = (1 + f.restitution) * k,\n              L = a.clamp(f.separation + k, 0, 1) * i._frictionNormalMultiplier,\n              V = I,\n              O = 1 / 0;\n            T > f.friction * f.frictionStatic * L * n && (O = T, V = a.clamp(f.friction * R * n, -O, O));\n            var F = r.cross(P, g),\n              D = r.cross(M, g),\n              H = b / (m.inverseMass + y.inverseMass + m.inverseInertia * F * F + y.inverseInertia * D * D);\n            if (E *= H, V *= H, k < 0 && k * k > i._restingThresh * n) w.normalImpulse = 0;else {\n              var j = w.normalImpulse;\n              w.normalImpulse = Math.min(w.normalImpulse + E, 0), E = w.normalImpulse - j;\n            }\n            if (I * I > i._restingThreshTangent * n) w.tangentImpulse = 0;else {\n              var W = w.tangentImpulse;\n              w.tangentImpulse = a.clamp(w.tangentImpulse + V, -O, O), V = w.tangentImpulse - W;\n            }\n            o.x = g.x * E + x.x * V, o.y = g.y * E + x.y * V, m.isStatic || m.isSleeping || (m.positionPrev.x += o.x * m.inverseMass, m.positionPrev.y += o.y * m.inverseMass, m.anglePrev += r.cross(P, o) * m.inverseInertia), y.isStatic || y.isSleeping || (y.positionPrev.x -= o.x * y.inverseMass, y.positionPrev.y -= o.y * y.inverseMass, y.anglePrev -= r.cross(M, o) * y.inverseInertia);\n          }\n        }\n      }\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(9),\n      r = n(0);\n    i._pairMaxIdleLife = 1e3, i.create = function (e) {\n      return r.extend({\n        table: {},\n        list: [],\n        collisionStart: [],\n        collisionActive: [],\n        collisionEnd: []\n      }, e);\n    }, i.update = function (e, t, n) {\n      var i,\n        r,\n        a,\n        s,\n        l = e.list,\n        c = e.table,\n        u = e.collisionStart,\n        d = e.collisionEnd,\n        p = e.collisionActive;\n      for (u.length = 0, d.length = 0, p.length = 0, s = 0; s < l.length; s++) {\n        l[s].confirmedActive = !1;\n      }\n      for (s = 0; s < t.length; s++) {\n        (i = t[s]).collided && ((a = c[r = o.id(i.bodyA, i.bodyB)]) ? (a.isActive ? p.push(a) : u.push(a), o.update(a, i, n), a.confirmedActive = !0) : (a = o.create(i, n), c[r] = a, u.push(a), l.push(a)));\n      }\n      for (s = 0; s < l.length; s++) {\n        (a = l[s]).isActive && !a.confirmedActive && (o.setActive(a, !1, n), d.push(a));\n      }\n    }, i.removeOld = function (e, t) {\n      var n,\n        o,\n        r,\n        a,\n        s = e.list,\n        l = e.table,\n        c = [];\n      for (a = 0; a < s.length; a++) {\n        (o = (n = s[a]).collision).bodyA.isSleeping || o.bodyB.isSleeping ? n.timeUpdated = t : t - n.timeUpdated > i._pairMaxIdleLife && c.push(a);\n      }\n      for (a = 0; a < c.length; a++) {\n        delete l[(n = s[r = c[a] - a]).id], s.splice(r, 1);\n      }\n    }, i.clear = function (e) {\n      return e.table = {}, e.list.length = 0, e.collisionStart.length = 0, e.collisionActive.length = 0, e.collisionEnd.length = 0, e;\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(9),\n      r = n(0);\n    i.create = function (e) {\n      return r.extend({\n        buckets: {},\n        pairs: {},\n        pairsList: [],\n        bucketWidth: 48,\n        bucketHeight: 48\n      }, e);\n    }, i.update = function (e, t, n, o) {\n      var r,\n        a,\n        s,\n        l,\n        c,\n        u = n.world,\n        d = e.buckets,\n        p = !1;\n      for (r = 0; r < t.length; r++) {\n        var f = t[r];\n        if ((!f.isSleeping || o) && (!u.bounds || !(f.bounds.max.x < u.bounds.min.x || f.bounds.min.x > u.bounds.max.x || f.bounds.max.y < u.bounds.min.y || f.bounds.min.y > u.bounds.max.y))) {\n          var v = i._getRegion(e, f);\n          if (!f.region || v.id !== f.region.id || o) {\n            f.region && !o || (f.region = v);\n            var m = i._regionUnion(v, f.region);\n            for (a = m.startCol; a <= m.endCol; a++) {\n              for (s = m.startRow; s <= m.endRow; s++) {\n                l = d[c = i._getBucketId(a, s)];\n                var y = a >= v.startCol && a <= v.endCol && s >= v.startRow && s <= v.endRow,\n                  g = a >= f.region.startCol && a <= f.region.endCol && s >= f.region.startRow && s <= f.region.endRow;\n                !y && g && g && l && i._bucketRemoveBody(e, l, f), (f.region === v || y && !g || o) && (l || (l = i._createBucket(d, c)), i._bucketAddBody(e, l, f));\n              }\n            }\n            f.region = v, p = !0;\n          }\n        }\n      }\n      p && (e.pairsList = i._createActivePairsList(e));\n    }, i.clear = function (e) {\n      e.buckets = {}, e.pairs = {}, e.pairsList = [];\n    }, i._regionUnion = function (e, t) {\n      var n = Math.min(e.startCol, t.startCol),\n        o = Math.max(e.endCol, t.endCol),\n        r = Math.min(e.startRow, t.startRow),\n        a = Math.max(e.endRow, t.endRow);\n      return i._createRegion(n, o, r, a);\n    }, i._getRegion = function (e, t) {\n      var n = t.bounds,\n        o = Math.floor(n.min.x / e.bucketWidth),\n        r = Math.floor(n.max.x / e.bucketWidth),\n        a = Math.floor(n.min.y / e.bucketHeight),\n        s = Math.floor(n.max.y / e.bucketHeight);\n      return i._createRegion(o, r, a, s);\n    }, i._createRegion = function (e, t, n, i) {\n      return {\n        id: e + \",\" + t + \",\" + n + \",\" + i,\n        startCol: e,\n        endCol: t,\n        startRow: n,\n        endRow: i\n      };\n    }, i._getBucketId = function (e, t) {\n      return \"C\" + e + \"R\" + t;\n    }, i._createBucket = function (e, t) {\n      return e[t] = [];\n    }, i._bucketAddBody = function (e, t, n) {\n      for (var i = 0; i < t.length; i++) {\n        var r = t[i];\n        if (!(n.id === r.id || n.isStatic && r.isStatic)) {\n          var a = o.id(n, r),\n            s = e.pairs[a];\n          s ? s[2] += 1 : e.pairs[a] = [n, r, 1];\n        }\n      }\n      t.push(n);\n    }, i._bucketRemoveBody = function (e, t, n) {\n      t.splice(r.indexOf(t, n), 1);\n      for (var i = 0; i < t.length; i++) {\n        var a = t[i],\n          s = o.id(n, a),\n          l = e.pairs[s];\n        l && (l[2] -= 1);\n      }\n    }, i._createActivePairsList = function (e) {\n      var t,\n        n,\n        i = [];\n      t = r.keys(e.pairs);\n      for (var o = 0; o < t.length; o++) {\n        (n = e.pairs[t[o]])[2] > 0 ? i.push(n) : delete e.pairs[t[o]];\n      }\n      return i;\n    };\n  }, function (e, t, n) {\n    var i = e.exports = n(23);\n    i.Axes = n(10), i.Bodies = n(11), i.Body = n(6), i.Bounds = n(1), i.Common = n(0), i.Composite = n(5), i.Composites = n(24), i.Constraint = n(8), i.Contact = n(17), i.Detector = n(13), i.Engine = n(18), i.Events = n(4), i.Grid = n(21), i.Mouse = n(12), i.MouseConstraint = n(25), i.Pair = n(9), i.Pairs = n(20), i.Plugin = n(15), i.Query = n(26), i.Render = n(16), i.Resolver = n(19), i.Runner = n(27), i.SAT = n(14), i.Sleeping = n(7), i.Svg = n(28), i.Vector = n(2), i.Vertices = n(3), i.World = n(29), i.Engine.run = i.Runner.run, i.Common.deprecated(i.Engine, \"run\", \"Engine.run ➤ use Matter.Runner.run(engine) instead\");\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(15),\n      r = n(0);\n    i.name = \"matter-js\", i.version = \"0.17.1\", i.uses = [], i.used = [], i.use = function () {\n      o.use(i, Array.prototype.slice.call(arguments));\n    }, i.before = function (e, t) {\n      return e = e.replace(/^Matter./, \"\"), r.chainPathBefore(i, e, t);\n    }, i.after = function (e, t) {\n      return e = e.replace(/^Matter./, \"\"), r.chainPathAfter(i, e, t);\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(5),\n      r = n(8),\n      a = n(0),\n      s = n(6),\n      l = n(11),\n      c = a.deprecated;\n    i.stack = function (e, t, n, i, r, a, l) {\n      for (var c, u = o.create({\n          label: \"Stack\"\n        }), d = e, p = t, f = 0, v = 0; v < i; v++) {\n        for (var m = 0, y = 0; y < n; y++) {\n          var g = l(d, p, y, v, c, f);\n          if (g) {\n            var x = g.bounds.max.y - g.bounds.min.y,\n              h = g.bounds.max.x - g.bounds.min.x;\n            x > m && (m = x), s.translate(g, {\n              x: .5 * h,\n              y: .5 * x\n            }), d = g.bounds.max.x + r, o.addBody(u, g), c = g, f += 1;\n          } else d += r;\n        }\n        p += m + a, d = e;\n      }\n      return u;\n    }, i.chain = function (e, t, n, i, s, l) {\n      for (var c = e.bodies, u = 1; u < c.length; u++) {\n        var d = c[u - 1],\n          p = c[u],\n          f = d.bounds.max.y - d.bounds.min.y,\n          v = d.bounds.max.x - d.bounds.min.x,\n          m = p.bounds.max.y - p.bounds.min.y,\n          y = {\n            bodyA: d,\n            pointA: {\n              x: v * t,\n              y: f * n\n            },\n            bodyB: p,\n            pointB: {\n              x: (p.bounds.max.x - p.bounds.min.x) * i,\n              y: m * s\n            }\n          },\n          g = a.extend(y, l);\n        o.addConstraint(e, r.create(g));\n      }\n      return e.label += \" Chain\", e;\n    }, i.mesh = function (e, t, n, i, s) {\n      var l,\n        c,\n        u,\n        d,\n        p,\n        f = e.bodies;\n      for (l = 0; l < n; l++) {\n        for (c = 1; c < t; c++) {\n          u = f[c - 1 + l * t], d = f[c + l * t], o.addConstraint(e, r.create(a.extend({\n            bodyA: u,\n            bodyB: d\n          }, s)));\n        }\n        if (l > 0) for (c = 0; c < t; c++) {\n          u = f[c + (l - 1) * t], d = f[c + l * t], o.addConstraint(e, r.create(a.extend({\n            bodyA: u,\n            bodyB: d\n          }, s))), i && c > 0 && (p = f[c - 1 + (l - 1) * t], o.addConstraint(e, r.create(a.extend({\n            bodyA: p,\n            bodyB: d\n          }, s)))), i && c < t - 1 && (p = f[c + 1 + (l - 1) * t], o.addConstraint(e, r.create(a.extend({\n            bodyA: p,\n            bodyB: d\n          }, s))));\n        }\n      }\n      return e.label += \" Mesh\", e;\n    }, i.pyramid = function (e, t, n, o, r, a, l) {\n      return i.stack(e, t, n, o, r, a, function (t, i, a, c, u, d) {\n        var p = Math.min(o, Math.ceil(n / 2)),\n          f = u ? u.bounds.max.x - u.bounds.min.x : 0;\n        if (!(c > p || a < (c = p - c) || a > n - 1 - c)) return 1 === d && s.translate(u, {\n          x: (a + (n % 2 == 1 ? 1 : -1)) * f,\n          y: 0\n        }), l(e + (u ? a * f : 0) + a * r, i, a, c, u, d);\n      });\n    }, i.newtonsCradle = function (e, t, n, i, a) {\n      for (var s = o.create({\n          label: \"Newtons Cradle\"\n        }), c = 0; c < n; c++) {\n        var u = l.circle(e + c * (1.9 * i), t + a, i, {\n            inertia: 1 / 0,\n            restitution: 1,\n            friction: 0,\n            frictionAir: 1e-4,\n            slop: 1\n          }),\n          d = r.create({\n            pointA: {\n              x: e + c * (1.9 * i),\n              y: t\n            },\n            bodyB: u\n          });\n        o.addBody(s, u), o.addConstraint(s, d);\n      }\n      return s;\n    }, c(i, \"newtonsCradle\", \"Composites.newtonsCradle ➤ moved to newtonsCradle example\"), i.car = function (e, t, n, i, a) {\n      var c = s.nextGroup(!0),\n        u = .5 * -n + 20,\n        d = .5 * n - 20,\n        p = o.create({\n          label: \"Car\"\n        }),\n        f = l.rectangle(e, t, n, i, {\n          collisionFilter: {\n            group: c\n          },\n          chamfer: {\n            radius: .5 * i\n          },\n          density: 2e-4\n        }),\n        v = l.circle(e + u, t + 0, a, {\n          collisionFilter: {\n            group: c\n          },\n          friction: .8\n        }),\n        m = l.circle(e + d, t + 0, a, {\n          collisionFilter: {\n            group: c\n          },\n          friction: .8\n        }),\n        y = r.create({\n          bodyB: f,\n          pointB: {\n            x: u,\n            y: 0\n          },\n          bodyA: v,\n          stiffness: 1,\n          length: 0\n        }),\n        g = r.create({\n          bodyB: f,\n          pointB: {\n            x: d,\n            y: 0\n          },\n          bodyA: m,\n          stiffness: 1,\n          length: 0\n        });\n      return o.addBody(p, f), o.addBody(p, v), o.addBody(p, m), o.addConstraint(p, y), o.addConstraint(p, g), p;\n    }, c(i, \"car\", \"Composites.car ➤ moved to car example\"), i.softBody = function (e, t, n, o, r, s, c, u, d, p) {\n      d = a.extend({\n        inertia: 1 / 0\n      }, d), p = a.extend({\n        stiffness: .2,\n        render: {\n          type: \"line\",\n          anchors: !1\n        }\n      }, p);\n      var f = i.stack(e, t, n, o, r, s, function (e, t) {\n        return l.circle(e, t, u, d);\n      });\n      return i.mesh(f, n, o, c, p), f.label = \"Soft Body\", f;\n    }, c(i, \"softBody\", \"Composites.softBody ➤ moved to softBody and cloth examples\");\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(3),\n      r = n(7),\n      a = n(12),\n      s = n(4),\n      l = n(13),\n      c = n(8),\n      u = n(5),\n      d = n(0),\n      p = n(1);\n    i.create = function (e, t) {\n      var n = (e ? e.mouse : null) || (t ? t.mouse : null);\n      n || (e && e.render && e.render.canvas ? n = a.create(e.render.canvas) : t && t.element ? n = a.create(t.element) : (n = a.create(), d.warn(\"MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected\")));\n      var o = {\n          type: \"mouseConstraint\",\n          mouse: n,\n          element: null,\n          body: null,\n          constraint: c.create({\n            label: \"Mouse Constraint\",\n            pointA: n.position,\n            pointB: {\n              x: 0,\n              y: 0\n            },\n            length: .01,\n            stiffness: .1,\n            angularStiffness: 1,\n            render: {\n              strokeStyle: \"#90EE90\",\n              lineWidth: 3\n            }\n          }),\n          collisionFilter: {\n            category: 1,\n            mask: 4294967295,\n            group: 0\n          }\n        },\n        r = d.extend(o, t);\n      return s.on(e, \"beforeUpdate\", function () {\n        var t = u.allBodies(e.world);\n        i.update(r, t), i._triggerEvents(r);\n      }), r;\n    }, i.update = function (e, t) {\n      var n = e.mouse,\n        i = e.constraint,\n        a = e.body;\n      if (0 === n.button) {\n        if (i.bodyB) r.set(i.bodyB, !1), i.pointA = n.position;else for (var c = 0; c < t.length; c++) {\n          if (a = t[c], p.contains(a.bounds, n.position) && l.canCollide(a.collisionFilter, e.collisionFilter)) for (var u = a.parts.length > 1 ? 1 : 0; u < a.parts.length; u++) {\n            var d = a.parts[u];\n            if (o.contains(d.vertices, n.position)) {\n              i.pointA = n.position, i.bodyB = e.body = a, i.pointB = {\n                x: n.position.x - a.position.x,\n                y: n.position.y - a.position.y\n              }, i.angleB = a.angle, r.set(a, !1), s.trigger(e, \"startdrag\", {\n                mouse: n,\n                body: a\n              });\n              break;\n            }\n          }\n        }\n      } else i.bodyB = e.body = null, i.pointB = null, a && s.trigger(e, \"enddrag\", {\n        mouse: n,\n        body: a\n      });\n    }, i._triggerEvents = function (e) {\n      var t = e.mouse,\n        n = t.sourceEvents;\n      n.mousemove && s.trigger(e, \"mousemove\", {\n        mouse: t\n      }), n.mousedown && s.trigger(e, \"mousedown\", {\n        mouse: t\n      }), n.mouseup && s.trigger(e, \"mouseup\", {\n        mouse: t\n      }), a.clearSourceEvents(t);\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(2),\n      r = n(14),\n      a = n(1),\n      s = n(11),\n      l = n(3);\n    i.collides = function (e, t) {\n      for (var n = [], i = 0; i < t.length; i++) {\n        var o = t[i];\n        if (a.overlaps(o.bounds, e.bounds)) for (var s = 1 === o.parts.length ? 0 : 1; s < o.parts.length; s++) {\n          var l = o.parts[s];\n          if (a.overlaps(l.bounds, e.bounds)) {\n            var c = r.collides(l, e);\n            if (c.collided) {\n              n.push(c);\n              break;\n            }\n          }\n        }\n      }\n      return n;\n    }, i.ray = function (e, t, n, r) {\n      r = r || 1e-100;\n      for (var a = o.angle(t, n), l = o.magnitude(o.sub(t, n)), c = .5 * (n.x + t.x), u = .5 * (n.y + t.y), d = s.rectangle(c, u, l, r, {\n          angle: a\n        }), p = i.collides(d, e), f = 0; f < p.length; f += 1) {\n        var v = p[f];\n        v.body = v.bodyB = v.bodyA;\n      }\n      return p;\n    }, i.region = function (e, t, n) {\n      for (var i = [], o = 0; o < e.length; o++) {\n        var r = e[o],\n          s = a.overlaps(r.bounds, t);\n        (s && !n || !s && n) && i.push(r);\n      }\n      return i;\n    }, i.point = function (e, t) {\n      for (var n = [], i = 0; i < e.length; i++) {\n        var o = e[i];\n        if (a.contains(o.bounds, t)) for (var r = 1 === o.parts.length ? 0 : 1; r < o.parts.length; r++) {\n          var s = o.parts[r];\n          if (a.contains(s.bounds, t) && l.contains(s.vertices, t)) {\n            n.push(o);\n            break;\n          }\n        }\n      }\n      return n;\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(4),\n      r = n(18),\n      a = n(0);\n    !function () {\n      var e, t, n;\n      (\"undefined\" != typeof window && (e = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame, t = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame), e) || (e = function e(_e2) {\n        n = setTimeout(function () {\n          _e2(a.now());\n        }, 1e3 / 60);\n      }, t = function t() {\n        clearTimeout(n);\n      });\n      i.create = function (e) {\n        var t = a.extend({\n          fps: 60,\n          correction: 1,\n          deltaSampleSize: 60,\n          counterTimestamp: 0,\n          frameCounter: 0,\n          deltaHistory: [],\n          timePrev: null,\n          timeScalePrev: 1,\n          frameRequestId: null,\n          isFixed: !1,\n          enabled: !0\n        }, e);\n        return t.delta = t.delta || 1e3 / t.fps, t.deltaMin = t.deltaMin || 1e3 / t.fps, t.deltaMax = t.deltaMax || 1e3 / (.5 * t.fps), t.fps = 1e3 / t.delta, t;\n      }, i.run = function (t, n) {\n        return void 0 !== t.positionIterations && (n = t, t = i.create()), function o(r) {\n          t.frameRequestId = e(o), r && t.enabled && i.tick(t, n, r);\n        }(), t;\n      }, i.tick = function (e, t, n) {\n        var i,\n          a = t.timing,\n          s = 1,\n          l = {\n            timestamp: a.timestamp\n          };\n        o.trigger(e, \"beforeTick\", l), e.isFixed ? i = e.delta : (i = n - e.timePrev || e.delta, e.timePrev = n, e.deltaHistory.push(i), e.deltaHistory = e.deltaHistory.slice(-e.deltaSampleSize), s = (i = (i = (i = Math.min.apply(null, e.deltaHistory)) < e.deltaMin ? e.deltaMin : i) > e.deltaMax ? e.deltaMax : i) / e.delta, e.delta = i), 0 !== e.timeScalePrev && (s *= a.timeScale / e.timeScalePrev), 0 === a.timeScale && (s = 0), e.timeScalePrev = a.timeScale, e.correction = s, e.frameCounter += 1, n - e.counterTimestamp >= 1e3 && (e.fps = e.frameCounter * ((n - e.counterTimestamp) / 1e3), e.counterTimestamp = n, e.frameCounter = 0), o.trigger(e, \"tick\", l), o.trigger(e, \"beforeUpdate\", l), r.update(t, i, s), o.trigger(e, \"afterUpdate\", l), o.trigger(e, \"afterTick\", l);\n      }, i.stop = function (e) {\n        t(e.frameRequestId);\n      }, i.start = function (e, t) {\n        i.run(e, t);\n      };\n    }();\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    n(1);\n    var o = n(0);\n    i.pathToVertices = function (e, t) {\n      \"undefined\" == typeof window || \"SVGPathSeg\" in window || o.warn(\"Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.\");\n      var n,\n        r,\n        a,\n        s,\n        l,\n        c,\n        u,\n        d,\n        p,\n        f,\n        v,\n        m = [],\n        y = 0,\n        g = 0,\n        x = 0;\n      t = t || 15;\n      var h = function h(e, t, n) {\n          var i = n % 2 == 1 && n > 1;\n          if (!p || e != p.x || t != p.y) {\n            p && i ? (f = p.x, v = p.y) : (f = 0, v = 0);\n            var o = {\n              x: f + e,\n              y: v + t\n            };\n            !i && p || (p = o), m.push(o), g = f + e, x = v + t;\n          }\n        },\n        b = function b(e) {\n          var t = e.pathSegTypeAsLetter.toUpperCase();\n          if (\"Z\" !== t) {\n            switch (t) {\n              case \"M\":\n              case \"L\":\n              case \"T\":\n              case \"C\":\n              case \"S\":\n              case \"Q\":\n                g = e.x, x = e.y;\n                break;\n              case \"H\":\n                g = e.x;\n                break;\n              case \"V\":\n                x = e.y;\n            }\n            h(g, x, e.pathSegType);\n          }\n        };\n      for (i._svgPathToAbsolute(e), a = e.getTotalLength(), c = [], n = 0; n < e.pathSegList.numberOfItems; n += 1) {\n        c.push(e.pathSegList.getItem(n));\n      }\n      for (u = c.concat(); y < a;) {\n        if ((l = c[e.getPathSegAtLength(y)]) != d) {\n          for (; u.length && u[0] != l;) {\n            b(u.shift());\n          }\n          d = l;\n        }\n        switch (l.pathSegTypeAsLetter.toUpperCase()) {\n          case \"C\":\n          case \"T\":\n          case \"S\":\n          case \"Q\":\n          case \"A\":\n            s = e.getPointAtLength(y), h(s.x, s.y, 0);\n        }\n        y += t;\n      }\n      for (n = 0, r = u.length; n < r; ++n) {\n        b(u[n]);\n      }\n      return m;\n    }, i._svgPathToAbsolute = function (e) {\n      for (var t, n, i, o, r, a, s = e.pathSegList, l = 0, c = 0, u = s.numberOfItems, d = 0; d < u; ++d) {\n        var p = s.getItem(d),\n          f = p.pathSegTypeAsLetter;\n        if (/[MLHVCSQTA]/.test(f)) \"x\" in p && (l = p.x), \"y\" in p && (c = p.y);else switch (\"x1\" in p && (i = l + p.x1), \"x2\" in p && (r = l + p.x2), \"y1\" in p && (o = c + p.y1), \"y2\" in p && (a = c + p.y2), \"x\" in p && (l += p.x), \"y\" in p && (c += p.y), f) {\n          case \"m\":\n            s.replaceItem(e.createSVGPathSegMovetoAbs(l, c), d);\n            break;\n          case \"l\":\n            s.replaceItem(e.createSVGPathSegLinetoAbs(l, c), d);\n            break;\n          case \"h\":\n            s.replaceItem(e.createSVGPathSegLinetoHorizontalAbs(l), d);\n            break;\n          case \"v\":\n            s.replaceItem(e.createSVGPathSegLinetoVerticalAbs(c), d);\n            break;\n          case \"c\":\n            s.replaceItem(e.createSVGPathSegCurvetoCubicAbs(l, c, i, o, r, a), d);\n            break;\n          case \"s\":\n            s.replaceItem(e.createSVGPathSegCurvetoCubicSmoothAbs(l, c, r, a), d);\n            break;\n          case \"q\":\n            s.replaceItem(e.createSVGPathSegCurvetoQuadraticAbs(l, c, i, o), d);\n            break;\n          case \"t\":\n            s.replaceItem(e.createSVGPathSegCurvetoQuadraticSmoothAbs(l, c), d);\n            break;\n          case \"a\":\n            s.replaceItem(e.createSVGPathSegArcAbs(l, c, p.r1, p.r2, p.angle, p.largeArcFlag, p.sweepFlag), d);\n            break;\n          case \"z\":\n          case \"Z\":\n            l = t, c = n;\n        }\n        \"M\" != f && \"m\" != f || (t = l, n = c);\n      }\n    };\n  }, function (e, t, n) {\n    var i = {};\n    e.exports = i;\n    var o = n(5);\n    n(0);\n    i.create = o.create, i.add = o.add, i.remove = o.remove, i.clear = o.clear, i.addComposite = o.addComposite, i.addBody = o.addBody, i.addConstraint = o.addConstraint;\n  }]);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/matter.min.js\n");

/***/ }),

/***/ "./src/js/menu.js":
/*!************************!*\
  !*** ./src/js/menu.js ***!
  \************************/
/***/ (() => {

eval("window.addEventListener('load', () => {\n  function handleMenu() {\n    var isOpen = false;\n    var burgerMenuButton = document.querySelector('#header-burger-menu-input');\n    var closeMenuButton = document.querySelector('#nav-close-menu-input');\n    var nav = document.querySelector('nav');\n    burgerMenuButton.onclick = () => {\n      isOpen = true;\n      nav.style.transform = 'translateX(0)';\n      nav.classList.add('open');\n    };\n    closeMenuButton.onclick = () => {\n      isOpen = false;\n      nav.style.transform = 'translateX(100%)';\n      nav.classList.remove('open');\n    };\n    var handleScroll = event => {\n      if (window.scrollY > 0) {\n        nav.style.transform = 'translateX(100%)';\n        nav.classList.remove('open');\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n  }\n  handleMenu();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbWVudS5qcy5qcyIsIm5hbWVzIjpbIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVNZW51IiwiaXNPcGVuIiwiYnVyZ2VyTWVudUJ1dHRvbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNsb3NlTWVudUJ1dHRvbiIsIm5hdiIsIm9uY2xpY2siLCJzdHlsZSIsInRyYW5zZm9ybSIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsImhhbmRsZVNjcm9sbCIsImV2ZW50Iiwic2Nyb2xsWSJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHdlYXJlYXRobG9uL2Zyb250ZW5kLXdlYnBhY2stYm9pbGVycGxhdGUvLi9zcmMvanMvbWVudS5qcz81YzdmIl0sInNvdXJjZXNDb250ZW50IjpbIndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xuICAgIGZ1bmN0aW9uIGhhbmRsZU1lbnUoKSB7XG4gICAgICAgIGxldCBpc09wZW4gPSBmYWxzZTtcblxuICAgICAgICBjb25zdCBidXJnZXJNZW51QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgICcjaGVhZGVyLWJ1cmdlci1tZW51LWlucHV0J1xuICAgICAgICApO1xuICAgICAgICBjb25zdCBjbG9zZU1lbnVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbmF2LWNsb3NlLW1lbnUtaW5wdXQnKTtcbiAgICAgICAgY29uc3QgbmF2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbmF2Jyk7XG5cbiAgICAgICAgYnVyZ2VyTWVudUJ1dHRvbi5vbmNsaWNrID0gKCkgPT4ge1xuICAgICAgICAgICAgaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgIG5hdi5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWCgwKSc7XG4gICAgICAgICAgICBuYXYuY2xhc3NMaXN0LmFkZCgnb3BlbicpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGNsb3NlTWVudUJ1dHRvbi5vbmNsaWNrID0gKCkgPT4ge1xuICAgICAgICAgICAgaXNPcGVuID0gZmFsc2U7XG4gICAgICAgICAgICBuYXYuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVgoMTAwJSknO1xuICAgICAgICAgICAgbmF2LmNsYXNzTGlzdC5yZW1vdmUoJ29wZW4nKTtcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBoYW5kbGVTY3JvbGwgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGlmICh3aW5kb3cuc2Nyb2xsWSA+IDApIHtcbiAgICAgICAgICAgICAgICBuYXYuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVgoMTAwJSknO1xuICAgICAgICAgICAgICAgIG5hdi5jbGFzc0xpc3QucmVtb3ZlKCdvcGVuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZVNjcm9sbCk7XG4gICAgfVxuXG4gICAgaGFuZGxlTWVudSgpO1xufSkiXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxNQUFNO0VBQ2xDLFNBQVNDLFVBQVUsR0FBRztJQUNsQixJQUFJQyxNQUFNLEdBQUcsS0FBSztJQUVsQixJQUFNQyxnQkFBZ0IsR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQzNDLDJCQUEyQixDQUM5QjtJQUNELElBQU1DLGVBQWUsR0FBR0YsUUFBUSxDQUFDQyxhQUFhLENBQUMsdUJBQXVCLENBQUM7SUFDdkUsSUFBTUUsR0FBRyxHQUFHSCxRQUFRLENBQUNDLGFBQWEsQ0FBQyxLQUFLLENBQUM7SUFFekNGLGdCQUFnQixDQUFDSyxPQUFPLEdBQUcsTUFBTTtNQUM3Qk4sTUFBTSxHQUFHLElBQUk7TUFDYkssR0FBRyxDQUFDRSxLQUFLLENBQUNDLFNBQVMsR0FBRyxlQUFlO01BQ3JDSCxHQUFHLENBQUNJLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLE1BQU0sQ0FBQztJQUM3QixDQUFDO0lBRUROLGVBQWUsQ0FBQ0UsT0FBTyxHQUFHLE1BQU07TUFDNUJOLE1BQU0sR0FBRyxLQUFLO01BQ2RLLEdBQUcsQ0FBQ0UsS0FBSyxDQUFDQyxTQUFTLEdBQUcsa0JBQWtCO01BQ3hDSCxHQUFHLENBQUNJLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNoQyxDQUFDO0lBRUQsSUFBTUMsWUFBWSxHQUFJQyxLQUFLLElBQUs7TUFDNUIsSUFBSWhCLE1BQU0sQ0FBQ2lCLE9BQU8sR0FBRyxDQUFDLEVBQUU7UUFDcEJULEdBQUcsQ0FBQ0UsS0FBSyxDQUFDQyxTQUFTLEdBQUcsa0JBQWtCO1FBQ3hDSCxHQUFHLENBQUNJLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLE1BQU0sQ0FBQztNQUNoQztJQUNKLENBQUM7SUFFRGQsTUFBTSxDQUFDQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUVjLFlBQVksQ0FBQztFQUNuRDtFQUVBYixVQUFVLEVBQUU7QUFDaEIsQ0FBQyxDQUFDIn0=\n//# sourceURL=webpack-internal:///./src/js/menu.js\n");

/***/ }),

/***/ "./src/js/nav.js":
/*!***********************!*\
  !*** ./src/js/nav.js ***!
  \***********************/
/***/ (() => {

eval("window.addEventListener('load', () => {\n  var handleScroll = event => {\n    var header = document.querySelector('header');\n    window.scrollY > 0 ? header.classList.add('retract') : header.classList.remove('retract');\n  };\n  window.addEventListener('scroll', handleScroll);\n\n  // Handle location change\n  var selectBoxElements = document.querySelectorAll('.location');\n  var _loop = function _loop(selectBox) {\n    selectBox.value = window.location;\n    selectBox.onchange = () => {\n      window.location = selectBox.value;\n    };\n  };\n  for (var selectBox of selectBoxElements) {\n    _loop(selectBox);\n  }\n\n  // Handle language change\n  var selectBoxElementsLang = document.querySelectorAll('.lang');\n  var _loop2 = function _loop2(selectBoxLang) {\n    selectBoxLang.value = window.location;\n    selectBoxLang.onchange = () => {\n      console.log(selectBoxLang.value);\n      window.location = selectBoxLang.value;\n    };\n  };\n  for (var selectBoxLang of selectBoxElementsLang) {\n    _loop2(selectBoxLang);\n  }\n\n  // Open cookies panel\n  var footerLinks = document.querySelectorAll('.footer-link');\n  if (footerLinks) {\n    footerLinks.forEach(function (link) {\n      link.addEventListener('click', function (event) {\n        var url = link.getAttribute('href');\n        var hash = url.split('#')[1];\n        if (hash === 'RGPD') {\n          event.preventDefault();\n          tarteaucitron.userInterface.openPanel();\n        }\n      });\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbmF2LmpzLmpzIiwibmFtZXMiOlsid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImhhbmRsZVNjcm9sbCIsImV2ZW50IiwiaGVhZGVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwic2Nyb2xsWSIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsInNlbGVjdEJveEVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsInNlbGVjdEJveCIsInZhbHVlIiwibG9jYXRpb24iLCJvbmNoYW5nZSIsInNlbGVjdEJveEVsZW1lbnRzTGFuZyIsInNlbGVjdEJveExhbmciLCJjb25zb2xlIiwibG9nIiwiZm9vdGVyTGlua3MiLCJmb3JFYWNoIiwibGluayIsInVybCIsImdldEF0dHJpYnV0ZSIsImhhc2giLCJzcGxpdCIsInByZXZlbnREZWZhdWx0IiwidGFydGVhdWNpdHJvbiIsInVzZXJJbnRlcmZhY2UiLCJvcGVuUGFuZWwiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0B3ZWFyZWF0aGxvbi9mcm9udGVuZC13ZWJwYWNrLWJvaWxlcnBsYXRlLy4vc3JjL2pzL25hdi5qcz9kMmNkIl0sInNvdXJjZXNDb250ZW50IjpbIndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xuICAgIGNvbnN0IGhhbmRsZVNjcm9sbCA9IChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoZWFkZXInKTtcbiAgICAgICAgd2luZG93LnNjcm9sbFkgPiAwID9cbiAgICAgICAgICAgIGhlYWRlci5jbGFzc0xpc3QuYWRkKCdyZXRyYWN0JykgOlxuICAgICAgICAgICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoJ3JldHJhY3QnKTtcbiAgICB9O1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZVNjcm9sbCk7XG5cbiAgICAvLyBIYW5kbGUgbG9jYXRpb24gY2hhbmdlXG4gICAgY29uc3Qgc2VsZWN0Qm94RWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubG9jYXRpb24nKTtcblxuICAgIGZvciAobGV0IHNlbGVjdEJveCBvZiBzZWxlY3RCb3hFbGVtZW50cykge1xuICAgICAgICBzZWxlY3RCb3gudmFsdWUgPSB3aW5kb3cubG9jYXRpb247XG4gICAgICAgIHNlbGVjdEJveC5vbmNoYW5nZSA9ICgpID0+IHtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IHNlbGVjdEJveC52YWx1ZTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgbGFuZ3VhZ2UgY2hhbmdlXG4gICAgY29uc3Qgc2VsZWN0Qm94RWxlbWVudHNMYW5nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmxhbmcnKTtcbiAgICBmb3IgKGxldCBzZWxlY3RCb3hMYW5nIG9mIHNlbGVjdEJveEVsZW1lbnRzTGFuZykge1xuICAgICAgICBzZWxlY3RCb3hMYW5nLnZhbHVlID0gd2luZG93LmxvY2F0aW9uO1xuICAgICAgICBzZWxlY3RCb3hMYW5nLm9uY2hhbmdlID0gKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coc2VsZWN0Qm94TGFuZy52YWx1ZSlcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IHNlbGVjdEJveExhbmcudmFsdWU7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gT3BlbiBjb29raWVzIHBhbmVsXG4gICAgY29uc3QgZm9vdGVyTGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZm9vdGVyLWxpbmsnKTtcblxuICAgIGlmKGZvb3RlckxpbmtzKSB7XG4gICAgICAgIGZvb3RlckxpbmtzLmZvckVhY2goZnVuY3Rpb24obGluaykge1xuICAgICAgICAgICAgbGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIHVybCA9IGxpbmsuZ2V0QXR0cmlidXRlKCdocmVmJyk7XG4gICAgICAgICAgICAgICAgdmFyIGhhc2ggPSB1cmwuc3BsaXQoJyMnKVsxXTtcblxuICAgICAgICAgICAgICAgIGlmKGhhc2ggPT09ICdSR1BEJykge1xuICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICB0YXJ0ZWF1Y2l0cm9uLnVzZXJJbnRlcmZhY2Uub3BlblBhbmVsKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxufSk7Il0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsTUFBTTtFQUNsQyxJQUFNQyxZQUFZLEdBQUlDLEtBQUssSUFBSztJQUM1QixJQUFNQyxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFFBQVEsQ0FBQztJQUMvQ04sTUFBTSxDQUFDTyxPQUFPLEdBQUcsQ0FBQyxHQUNkSCxNQUFNLENBQUNJLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLFNBQVMsQ0FBQyxHQUMvQkwsTUFBTSxDQUFDSSxTQUFTLENBQUNFLE1BQU0sQ0FBQyxTQUFTLENBQUM7RUFDMUMsQ0FBQztFQUVEVixNQUFNLENBQUNDLGdCQUFnQixDQUFDLFFBQVEsRUFBRUMsWUFBWSxDQUFDOztFQUUvQztFQUNBLElBQU1TLGlCQUFpQixHQUFHTixRQUFRLENBQUNPLGdCQUFnQixDQUFDLFdBQVcsQ0FBQztFQUFDLDJCQUV4REMsU0FBUztJQUNkQSxTQUFTLENBQUNDLEtBQUssR0FBR2QsTUFBTSxDQUFDZSxRQUFRO0lBQ2pDRixTQUFTLENBQUNHLFFBQVEsR0FBRyxNQUFNO01BQ3ZCaEIsTUFBTSxDQUFDZSxRQUFRLEdBQUdGLFNBQVMsQ0FBQ0MsS0FBSztJQUNyQyxDQUFDO0VBQUM7RUFKTixLQUFLLElBQUlELFNBQVMsSUFBSUYsaUJBQWlCLEVBQUU7SUFBQSxNQUFoQ0UsU0FBUztFQUtsQjs7RUFFQTtFQUNBLElBQU1JLHFCQUFxQixHQUFHWixRQUFRLENBQUNPLGdCQUFnQixDQUFDLE9BQU8sQ0FBQztFQUFDLDZCQUN4RE0sYUFBYTtJQUNsQkEsYUFBYSxDQUFDSixLQUFLLEdBQUdkLE1BQU0sQ0FBQ2UsUUFBUTtJQUNyQ0csYUFBYSxDQUFDRixRQUFRLEdBQUcsTUFBTTtNQUMzQkcsT0FBTyxDQUFDQyxHQUFHLENBQUNGLGFBQWEsQ0FBQ0osS0FBSyxDQUFDO01BQ2hDZCxNQUFNLENBQUNlLFFBQVEsR0FBR0csYUFBYSxDQUFDSixLQUFLO0lBQ3pDLENBQUM7RUFBQztFQUxOLEtBQUssSUFBSUksYUFBYSxJQUFJRCxxQkFBcUIsRUFBRTtJQUFBLE9BQXhDQyxhQUFhO0VBTXRCOztFQUVBO0VBQ0EsSUFBTUcsV0FBVyxHQUFHaEIsUUFBUSxDQUFDTyxnQkFBZ0IsQ0FBQyxjQUFjLENBQUM7RUFFN0QsSUFBR1MsV0FBVyxFQUFFO0lBQ1pBLFdBQVcsQ0FBQ0MsT0FBTyxDQUFDLFVBQVNDLElBQUksRUFBRTtNQUMvQkEsSUFBSSxDQUFDdEIsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFVBQVNFLEtBQUssRUFBRTtRQUMzQyxJQUFJcUIsR0FBRyxHQUFHRCxJQUFJLENBQUNFLFlBQVksQ0FBQyxNQUFNLENBQUM7UUFDbkMsSUFBSUMsSUFBSSxHQUFHRixHQUFHLENBQUNHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFNUIsSUFBR0QsSUFBSSxLQUFLLE1BQU0sRUFBRTtVQUNoQnZCLEtBQUssQ0FBQ3lCLGNBQWMsRUFBRTtVQUN0QkMsYUFBYSxDQUFDQyxhQUFhLENBQUNDLFNBQVMsRUFBRTtRQUMzQztNQUNKLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztFQUNOO0FBRUosQ0FBQyxDQUFDIn0=\n//# sourceURL=webpack-internal:///./src/js/nav.js\n");

/***/ }),

/***/ "./src/js/offers.js":
/*!**************************!*\
  !*** ./src/js/offers.js ***!
  \**************************/
/***/ (() => {

eval("window.addEventListener('load', () => {\n  var offer = document.querySelector('.offer');\n  var internetBox = document.querySelector('#internet-box');\n  if (!offer) return;\n  if (!internetBox) return;\n  function handleResizeOffer() {\n    handleOfferRow();\n  }\n  function handleOfferRow() {\n    if (internetBox.clientWidth == window.innerWidth) {\n      internetBox.classList.add('row');\n    } else {\n      internetBox.classList.remove('row');\n    }\n  }\n  window.addEventListener('resize', handleResizeOffer);\n  handleOfferRow();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvb2ZmZXJzLmpzLmpzIiwibmFtZXMiOlsid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9mZmVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaW50ZXJuZXRCb3giLCJoYW5kbGVSZXNpemVPZmZlciIsImhhbmRsZU9mZmVyUm93IiwiY2xpZW50V2lkdGgiLCJpbm5lcldpZHRoIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2VhcmVhdGhsb24vZnJvbnRlbmQtd2VicGFjay1ib2lsZXJwbGF0ZS8uL3NyYy9qcy9vZmZlcnMuanM/ZWE1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHtcbiAgICBjb25zdCBvZmZlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5vZmZlcicpO1xuICAgIGNvbnN0IGludGVybmV0Qm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ludGVybmV0LWJveCcpO1xuXG4gICAgaWYgKCFvZmZlcikgcmV0dXJuO1xuICAgIGlmICghaW50ZXJuZXRCb3gpIHJldHVybjtcblxuICAgIGZ1bmN0aW9uIGhhbmRsZVJlc2l6ZU9mZmVyKCkge1xuICAgICAgICBoYW5kbGVPZmZlclJvdygpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZU9mZmVyUm93KCkge1xuICAgICAgICBpZiAoaW50ZXJuZXRCb3guY2xpZW50V2lkdGggPT0gd2luZG93LmlubmVyV2lkdGgpIHtcbiAgICAgICAgICAgIGludGVybmV0Qm94LmNsYXNzTGlzdC5hZGQoJ3JvdycpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW50ZXJuZXRCb3guY2xhc3NMaXN0LnJlbW92ZSgncm93Jyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlUmVzaXplT2ZmZXIpO1xuICAgIGhhbmRsZU9mZmVyUm93KCk7XG59KTsiXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxNQUFNO0VBQ2xDLElBQU1DLEtBQUssR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsUUFBUSxDQUFDO0VBQzlDLElBQU1DLFdBQVcsR0FBR0YsUUFBUSxDQUFDQyxhQUFhLENBQUMsZUFBZSxDQUFDO0VBRTNELElBQUksQ0FBQ0YsS0FBSyxFQUFFO0VBQ1osSUFBSSxDQUFDRyxXQUFXLEVBQUU7RUFFbEIsU0FBU0MsaUJBQWlCLEdBQUc7SUFDekJDLGNBQWMsRUFBRTtFQUNwQjtFQUVBLFNBQVNBLGNBQWMsR0FBRztJQUN0QixJQUFJRixXQUFXLENBQUNHLFdBQVcsSUFBSVIsTUFBTSxDQUFDUyxVQUFVLEVBQUU7TUFDOUNKLFdBQVcsQ0FBQ0ssU0FBUyxDQUFDQyxHQUFHLENBQUMsS0FBSyxDQUFDO0lBQ3BDLENBQUMsTUFBTTtNQUNITixXQUFXLENBQUNLLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUN2QztFQUNKO0VBRUFaLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUMsUUFBUSxFQUFFSyxpQkFBaUIsQ0FBQztFQUNwREMsY0FBYyxFQUFFO0FBQ3BCLENBQUMsQ0FBQyJ9\n//# sourceURL=webpack-internal:///./src/js/offers.js\n");

/***/ }),

/***/ "./src/js/scroll.js":
/*!**************************!*\
  !*** ./src/js/scroll.js ***!
  \**************************/
/***/ (() => {

eval("window.addEventListener('load', () => {\n  var scrollElement = document.querySelector('.scroll');\n  if (!scrollElement) return;\n  function handleScroll() {\n    scrollElement.onclick = () => {\n      var parent = scrollElement.parentElement;\n      var nextSibling = parent.nextElementSibling;\n      nextSibling.scrollIntoView({\n        behavior: 'smooth'\n      });\n    };\n  }\n  handleScroll();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvc2Nyb2xsLmpzLmpzIiwibmFtZXMiOlsid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsInNjcm9sbEVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJoYW5kbGVTY3JvbGwiLCJvbmNsaWNrIiwicGFyZW50IiwicGFyZW50RWxlbWVudCIsIm5leHRTaWJsaW5nIiwibmV4dEVsZW1lbnRTaWJsaW5nIiwic2Nyb2xsSW50b1ZpZXciLCJiZWhhdmlvciJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHdlYXJlYXRobG9uL2Zyb250ZW5kLXdlYnBhY2stYm9pbGVycGxhdGUvLi9zcmMvanMvc2Nyb2xsLmpzPzA4YzQiXSwic291cmNlc0NvbnRlbnQiOlsid2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gICAgY29uc3Qgc2Nyb2xsRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zY3JvbGwnKTtcbiAgICBpZiAoIXNjcm9sbEVsZW1lbnQpIHJldHVybjtcblxuICAgIGZ1bmN0aW9uIGhhbmRsZVNjcm9sbCgpIHtcbiAgICAgICAgc2Nyb2xsRWxlbWVudC5vbmNsaWNrID0gKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcGFyZW50ID0gc2Nyb2xsRWxlbWVudC5wYXJlbnRFbGVtZW50O1xuICAgICAgICAgICAgY29uc3QgbmV4dFNpYmxpbmcgPSBwYXJlbnQubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgICAgICAgICAgbmV4dFNpYmxpbmcuc2Nyb2xsSW50b1ZpZXcoe1xuICAgICAgICAgICAgICAgIGJlaGF2aW9yOiAnc21vb3RoJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgaGFuZGxlU2Nyb2xsKCk7XG59KTsiXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxNQUFNO0VBQ2xDLElBQU1DLGFBQWEsR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsU0FBUyxDQUFDO0VBQ3ZELElBQUksQ0FBQ0YsYUFBYSxFQUFFO0VBRXBCLFNBQVNHLFlBQVksR0FBRztJQUNwQkgsYUFBYSxDQUFDSSxPQUFPLEdBQUcsTUFBTTtNQUMxQixJQUFNQyxNQUFNLEdBQUdMLGFBQWEsQ0FBQ00sYUFBYTtNQUMxQyxJQUFNQyxXQUFXLEdBQUdGLE1BQU0sQ0FBQ0csa0JBQWtCO01BQzdDRCxXQUFXLENBQUNFLGNBQWMsQ0FBQztRQUN2QkMsUUFBUSxFQUFFO01BQ2QsQ0FBQyxDQUFDO0lBQ04sQ0FBQztFQUNMO0VBRUFQLFlBQVksRUFBRTtBQUNsQixDQUFDLENBQUMifQ==\n//# sourceURL=webpack-internal:///./src/js/scroll.js\n");

/***/ }),

/***/ "./src/js/tarteaucitron.js":
/*!*********************************!*\
  !*** ./src/js/tarteaucitron.js ***!
  \*********************************/
/***/ (() => {

eval("//surcharge de la fonction color pour retirer les border left\ntarteaucitron.userInterface.color = (key, status) => {\n  var gray = '#808080',\n    greenDark = '#1B870B',\n    greenLight = '#E6FFE2',\n    redDark = '#9C1A1A',\n    redLight = '#FFE2E2',\n    yellowDark = '#FBDA26',\n    c = 'tarteaucitron',\n    nbDenied = 0,\n    nbPending = 0,\n    nbAllowed = 0,\n    sum = tarteaucitron.job.length,\n    index;\n  document.getElementById(key + 'Line').querySelector('.tarteaucitronContainerRadio').style['opacity'] = 1;\n  if (status === true) {\n    //status === true === autoriser service\n    // tarteaucitron.userInterface.css(key, 'backgroundColor', greenDark);\n    // tarteaucitron.userInterface.css(key, 'backgroundColor', gray);\n\n    document.getElementById(key + 'Line').classList.add('tarteaucitronIsAllowed');\n    document.getElementById(key + 'Line').classList.remove('tarteaucitronIsDenied');\n    document.getElementById(key + 'Line').querySelector('.tarteaucitronServiceInputCheckbox').checked = true;\n  } else if (status === false) {\n    //status === false === bloquer le service\n    // tarteaucitron.userInterface.css(key + 'Allowed', 'backgroundColor', gray);\n    // tarteaucitron.userInterface.css(key + 'Denied', 'backgroundColor', redDark);\n\n    document.getElementById(key + 'Line').classList.remove('tarteaucitronIsAllowed');\n    document.getElementById(key + 'Line').classList.add('tarteaucitronIsDenied');\n    document.getElementById(key + 'Line').querySelector('.tarteaucitronServiceInputCheckbox').checked = false;\n  } else if (status === \"wait\") {\n    document.getElementById(key + 'Line').querySelector('.tarteaucitronContainerRadio').style['opacity'] = 1;\n  }\n\n  // check if all services are allowed\n  for (index = 0; index < sum; index += 1) {\n    if (tarteaucitron.state[tarteaucitron.job[index]] === false) {\n      nbDenied += 1;\n    } else if (tarteaucitron.state[tarteaucitron.job[index]] === undefined) {\n      nbPending += 1;\n    } else if (tarteaucitron.state[tarteaucitron.job[index]] === true) {\n      nbAllowed += 1;\n    }\n  }\n\n  // tarteaucitron.userInterface.css(c + 'DotGreen', 'width', ((100 / sum) * nbAllowed) + '%');\n  // tarteaucitron.userInterface.css(c + 'DotYellow', 'width', ((100 / sum) * nbPending) + '%');\n  // tarteaucitron.userInterface.css(c + 'DotRed', 'width', ((100 / sum) * nbDenied) + '%');\n\n  if (nbDenied === 0 && nbPending === 0) {\n    document.getElementById('tarteaucitronAll').checked = true;\n    document.getElementById('tarteaucitronScrollbarAdjust').style['opacity'] = 1;\n    // tarteaucitron.userInterface.css(c + 'AllAllowed', 'backgroundColor', greenDark);\n    // tarteaucitron.userInterface.css(c + 'AllDenied', 'opacity', '0.4');\n    // tarteaucitron.userInterface.css(c + 'AllAllowed', 'opacity', '1');\n  } else if (nbAllowed === 0 && nbPending === 0) {\n    document.getElementById('tarteaucitronAll').checked = false;\n    document.getElementById('tarteaucitronScrollbarAdjust').style['opacity'] = 1;\n    // tarteaucitron.userInterface.css(c + 'AllAllowed', 'opacity', '0.4');\n    // tarteaucitron.userInterface.css(c + 'AllDenied', 'opacity', '1');\n    // tarteaucitron.userInterface.css(c + 'AllDenied', 'backgroundColor', redDark);\n  } else {\n    document.getElementById('tarteaucitronScrollbarAdjust').style['opacity'] = 1;\n    // tarteaucitron.userInterface.css(c + 'AllAllowed', 'opacity', '0.4');\n    // tarteaucitron.userInterface.css(c + 'AllDenied', 'opacity', '0.4');\n  }\n\n  // close the alert if all service have been reviewed\n  if (nbPending === 0) {\n    tarteaucitron.userInterface.closeAlert();\n  }\n  if (tarteaucitron.services[key].cookies.length > 0 && status === false) {\n    tarteaucitron.cookie.purge(tarteaucitron.services[key].cookies);\n  }\n  if (status === true) {\n    if (document.getElementById('tacCL' + key) !== null) {\n      document.getElementById('tacCL' + key).innerHTML = '...';\n    }\n    setTimeout(function () {\n      tarteaucitron.cookie.checkCount(key);\n    }, 2500);\n  } else {\n    tarteaucitron.cookie.checkCount(key);\n  }\n};\n\n//surcharge fonction addservice pour modifier les boutons des services en input checkbox\ntarteaucitron.addService = serviceId => {\n  \"use strict\";\n\n  var html = '',\n    s = tarteaucitron.services,\n    service = s[serviceId],\n    cookie = tarteaucitron.cookie.read(),\n    hostname = document.location.hostname,\n    hostRef = document.referrer.split('/')[2],\n    isNavigating = hostRef === hostname && window.location.href !== tarteaucitron.parameters.privacyUrl ? true : false,\n    isAutostart = !service.needConsent ? true : false,\n    isWaiting = cookie.indexOf(service.key + '=wait') >= 0 ? true : false,\n    isDenied = cookie.indexOf(service.key + '=false') >= 0 ? true : false,\n    isAllowed = cookie.indexOf(service.key + '=true') >= 0 ? true : false,\n    isResponded = cookie.indexOf(service.key + '=false') >= 0 || cookie.indexOf(service.key + '=true') >= 0 ? true : false,\n    isDNTRequested = navigator.doNotTrack === \"1\" || navigator.doNotTrack === \"yes\" || navigator.msDoNotTrack === \"1\" || window.doNotTrack === \"1\" ? true : false;\n  if (tarteaucitron.added[service.key] !== true) {\n    tarteaucitron.added[service.key] = true;\n    html += '<li id=\"' + service.key + 'Line\" class=\"tarteaucitronLine\">';\n    html += '   <div class=\"tarteaucitronLineContainer\">';\n    html += '   <div class=\"tarteaucitronName\">';\n    html += '       <span class=\"tarteaucitronH3\" role=\"heading\" aria-level=\"h3\">' + service.name + '</span>';\n    html += '       <span id=\"tacCL' + service.key + '\" class=\"tarteaucitronListCookies\"></span><br/>';\n    if (tarteaucitron.parameters.moreInfoLink == true) {\n      html += '       <a href=\"https://opt-out.ferank.eu/service/' + service.key + '/\" target=\"_blank\" rel=\"noopener\" title=\"' + tarteaucitron.lang.cookieDetail + ' ' + service.name + ' ' + tarteaucitron.lang.ourSite + ' ' + tarteaucitron.lang.newWindow + '\">';\n      html += '           ' + tarteaucitron.lang.more;\n      html += '       </a>';\n      html += '        - ';\n      html += '       <a href=\"' + service.uri + '\" target=\"_blank\" rel=\"noopener\" title=\"' + service.name + ' ' + tarteaucitron.lang.newWindow + '\">';\n      html += '           ' + tarteaucitron.lang.source;\n      html += '       </a>';\n    }\n    html += '   </div>';\n    html += '   <div class=\"tarteaucitronAsk\">';\n    html += '       <div class=\"tarteaucitronContainerRadio\"><input type=\"checkbox\" id=\"' + service.key + '\" class=\"tarteaucitronServiceInputCheckbox\" onclick=\"tarteaucitron.radioBtService(this)\">';\n    html += '           <label class=\"tarteaucitronLabelCheckBox\" for=\"' + service.key + '\"><span class=\"allowTxt\">' + tarteaucitron.lang.allow + '</span><span class=\"denyTxt\">';\n    html += '           ' + tarteaucitron.lang.deny + '</span><span class=\"tarteaucitronCheckBoxBt\"></span></label>';\n    html += '       </input></div>';\n    html += '   </div>';\n    html += '   </div>';\n    html += '</li>';\n    tarteaucitron.userInterface.css('tarteaucitronServicesTitle_' + service.type, 'display', 'block');\n    if (document.getElementById('tarteaucitronServices_' + service.type) !== null) {\n      document.getElementById('tarteaucitronServices_' + service.type).innerHTML += html;\n    }\n    tarteaucitron.userInterface.order(service.type);\n  }\n\n  // allow by default for non EU\n  if (isResponded === false && tarteaucitron.user.bypass === true) {\n    isAllowed = true;\n    tarteaucitron.cookie.create(service.key, true);\n  }\n  if (!isResponded && (isAutostart || isNavigating && isWaiting) && !tarteaucitron.highPrivacy || isAllowed) {\n    if (!isAllowed) {\n      tarteaucitron.cookie.create(service.key, true);\n    }\n    if (tarteaucitron.launch[service.key] !== true) {\n      tarteaucitron.launch[service.key] = true;\n      service.js();\n    }\n    tarteaucitron.state[service.key] = true;\n    tarteaucitron.userInterface.color(service.key, true);\n  } else if (isDenied) {\n    if (typeof service.fallback === 'function') {\n      service.fallback();\n    }\n    tarteaucitron.state[service.key] = false;\n    tarteaucitron.userInterface.color(service.key, false);\n  } else if (!isResponded && isDNTRequested && tarteaucitron.handleBrowserDNTRequest) {\n    tarteaucitron.cookie.create(service.key, 'false');\n    if (typeof service.fallback === 'function') {\n      service.fallback();\n    }\n    tarteaucitron.state[service.key] = false;\n    tarteaucitron.userInterface.color(service.key, false);\n  } else if (!isResponded) {\n    tarteaucitron.cookie.create(service.key, 'wait');\n    if (typeof service.fallback === 'function') {\n      service.fallback();\n    }\n    tarteaucitron.userInterface.color(service.key, 'wait');\n    tarteaucitron.userInterface.openAlert();\n  }\n  tarteaucitron.cookie.checkCount(service.key);\n};\n\n//modifs des boutons \"autoriser tous les services\" ou \"interdire tous les services\" par un checkbox\ntarteaucitron.load = ele => {\n  var cdn = tarteaucitron.cdn,\n    language = tarteaucitron.getLanguage(),\n    pathToLang = cdn + 'lang/tarteaucitron.' + language + '.js?v=' + tarteaucitron.version,\n    pathToServices = cdn + 'tarteaucitron.services.js?v=' + tarteaucitron.version,\n    linkElement = document.createElement('link'),\n    defaults = {\n      \"adblocker\": false,\n      \"hashtag\": '#tarteaucitron',\n      \"cookieName\": 'tarteaucitron',\n      \"highPrivacy\": false,\n      \"orientation\": \"top\",\n      \"removeCredit\": false,\n      \"showAlertSmall\": true,\n      \"cookieslist\": true,\n      \"handleBrowserDNTRequest\": false,\n      \"AcceptAllCta\": false,\n      \"moreInfoLink\": true,\n      \"privacyUrl\": \"\",\n      \"useExternalCss\": false\n    },\n    params = tarteaucitron.parameters;\n\n  // Step 0: get params\n  if (params !== undefined) {\n    for (var k in defaults) {\n      if (!tarteaucitron.parameters.hasOwnProperty(k)) {\n        tarteaucitron.parameters[k] = defaults[k];\n      }\n    }\n  }\n\n  // global\n  tarteaucitron.orientation = tarteaucitron.parameters.orientation;\n  tarteaucitron.hashtag = tarteaucitron.parameters.hashtag;\n  tarteaucitron.highPrivacy = tarteaucitron.parameters.highPrivacy;\n  tarteaucitron.handleBrowserDNTRequest = tarteaucitron.parameters.handleBrowserDNTRequest;\n\n  // Step 1: load css\n  if (!tarteaucitron.parameters.useExternalCss) {\n    linkElement.rel = 'stylesheet';\n    linkElement.type = 'text/css';\n    linkElement.href = cdn + 'css/tarteaucitron.css?v=' + tarteaucitron.version;\n    document.getElementsByTagName('head')[0].appendChild(linkElement);\n  }\n  // Step 2: load language and services\n  tarteaucitron.addScript(pathToLang, '', function () {\n    if (tarteaucitronCustomText !== '') {\n      tarteaucitron.lang = tarteaucitron.AddOrUpdate(tarteaucitron.lang, tarteaucitronCustomText);\n    }\n    tarteaucitron.addScript(pathToServices, '', function () {\n      var body = document.body,\n        div = document.createElement('div'),\n        html = '',\n        index,\n        orientation = 'Top',\n        cat = ['ads', 'analytic', 'api', 'comment', 'social', 'support', 'video', 'other'],\n        i;\n      cat = cat.sort(function (a, b) {\n        if (tarteaucitron.lang[a].title > tarteaucitron.lang[b].title) {\n          return 1;\n        }\n        if (tarteaucitron.lang[a].title < tarteaucitron.lang[b].title) {\n          return -1;\n        }\n        return 0;\n      });\n\n      // Step 3: prepare the html\n      html += '<div id=\"tarteaucitronPremium\"></div>';\n      html += '<button id=\"tarteaucitronBack\" onclick=\"tarteaucitron.userInterface.closePanel();\" aria-label=\"' + tarteaucitron.lang.close + '\"></button>';\n      html += '<div id=\"tarteaucitron\" role=\"dialog\" aria-labelledby=\"dialogTitle\">';\n      html += '   <div id=\"tarteaucitronServices\">';\n      html += '       <button id=\"tarteaucitronClosePanel\" onclick=\"tarteaucitron.userInterface.closePanel();\">';\n      html += '       ' + tarteaucitron.lang.close;\n      html += '       </button>';\n      html += '      <div class=\"tarteaucitronLine tarteaucitronMainLine\" id=\"tarteaucitronMainLineOffset\">';\n      html += '         <span class=\"tarteaucitronH1\" role=\"heading\" aria-level=\"h1\" id=\"dialogTitle\">' + tarteaucitron.lang.title + '</span>';\n      html += '         <div id=\"tarteaucitronInfo\" class=\"tarteaucitronInfoBox\">';\n      html += '         ' + tarteaucitron.lang.intro;\n      if (tarteaucitron.parameters.privacyUrl !== \"\") {\n        html += '   <br/><br/>';\n        html += '   <button id=\"tarteaucitronPrivacyUrl\" onclick=\"document.location = tarteaucitron.parameters.privacyUrl\">';\n        html += '       ' + tarteaucitron.lang.privacyUrl;\n        html += '   </button>';\n      }\n      html += '         </div>';\n      html += '         <div class=\"tarteaucitronName\">';\n      html += '            <span class=\"tarteaucitronH2\" role=\"heading\" aria-level=\"h2\">' + tarteaucitron.lang.all + '</span>';\n      html += '         <div class=\"tarteaucitronAsk\" id=\"tarteaucitronScrollbarAdjust\">';\n      html += '       <div class=\"tarteaucitronContainerRadio\"><input type=\"checkbox\" id=\"tarteaucitronAll\" class=\"tarteaucitronServiceInputCheckbox\" onclick=\"tarteaucitron.radioBtAllService(this)\">';\n      html += '           <label class=\"tarteaucitronLabelCheckBox\" for=\"tarteaucitronAll\"><span class=\"allowTxt\">' + tarteaucitron.lang.allow + '</span><span class=\"denyTxt\">';\n      html += '           ' + tarteaucitron.lang.deny + '</span><span class=\"tarteaucitronCheckBoxBt\"></span></label>';\n      html += '       </input></div>';\n      html += '         </div>';\n      // html += '            <button id=\"tarteaucitronAllAllowed\" class=\"tarteaucitronAllow\" onclick=\"tarteaucitron.userInterface.respondAll(true);\">';\n      // html += '               &#10003; ' + tarteaucitron.lang.allowAll;\n      // html += '            </button> ';\n      // html += '            <button id=\"tarteaucitronAllDenied\" class=\"tarteaucitronDeny\" onclick=\"tarteaucitron.userInterface.respondAll(false);\">';\n      // html += '               &#10007; ' + tarteaucitron.lang.denyAll;\n      // html += '            </button>';\n      html += '         </div>';\n      html += '      </div>';\n      html += '      <div class=\"tarteaucitronBorder\">';\n      html += '         <div class=\"clear\"></div><ul>';\n      for (i = 0; i < cat.length; i += 1) {\n        //yolo\n        html += '         <li id=\"tarteaucitronServicesTitle_' + cat[i] + '\" class=\"tarteaucitronHidden\">';\n        html += '            <div class=\"tarteaucitronTitle\">';\n        html += '               ' + tarteaucitron.lang[cat[i]].title;\n        html += '            </div>';\n        html += '            <div id=\"tarteaucitronDetails' + cat[i] + '\" class=\"tarteaucitronDetails tarteaucitronInfoBox\">';\n        html += '               ' + tarteaucitron.lang[cat[i]].details;\n        html += '            </div>';\n        html += '         <ul id=\"tarteaucitronServices_' + cat[i] + '\"></ul></li>';\n      }\n      html += '         </ul>';\n      html += '         <div class=\"tarteaucitronHidden\" id=\"tarteaucitronScrollbarChild\" style=\"height:20px;display:block\"></div>';\n      if (tarteaucitron.parameters.removeCredit === false) {\n        html += '     <a class=\"tarteaucitronSelfLink\" href=\"https://opt-out.ferank.eu/\" rel=\"nofollow noopener\" target=\"_blank\" title=\"tarteaucitron ' + tarteaucitron.lang.newWindow + '\">🍋 ' + tarteaucitron.lang.credit + '</a>';\n      }\n      html += '       </div>';\n      html += '   </div>';\n      html += '</div>';\n      if (tarteaucitron.parameters.orientation === 'bottom') {\n        orientation = 'Bottom';\n      }\n      if (tarteaucitron.parameters.highPrivacy && !tarteaucitron.parameters.AcceptAllCta) {\n        html += '<div id=\"tarteaucitronAlertBig\" class=\"tarteaucitronAlertBig' + orientation + '\">';\n        html += '   <div class=\"tarteaucitronAlertButtons\">';\n        html += '   <span id=\"tarteaucitronDisclaimerAlert\">';\n        html += '       ' + tarteaucitron.lang.alertBigPrivacy;\n        html += '   </span>';\n        html += '   <button id=\"tarteaucitronPersonalize\" onclick=\"tarteaucitron.userInterface.openPanel();\">';\n        html += '       ' + tarteaucitron.lang.personalize;\n        html += '   </button>';\n        if (tarteaucitron.parameters.privacyUrl !== \"\") {\n          html += '   <button id=\"tarteaucitronPrivacyUrl\" onclick=\"document.location = tarteaucitron.parameters.privacyUrl\">';\n          html += '       ' + tarteaucitron.lang.privacyUrl;\n          html += '   </button>';\n        }\n        html += '</div>';\n        html += '</div>';\n      } else {\n        html += '<div id=\"tarteaucitronAlertBig\" class=\"tarteaucitronAlertBig' + orientation + '\">';\n        html += '   <span id=\"tarteaucitronDisclaimerAlert\">';\n        if (tarteaucitron.parameters.highPrivacy) {\n          html += '       ' + tarteaucitron.lang.alertBigPrivacy;\n        } else {\n          html += '       ' + tarteaucitron.lang.alertBigClick + ' ' + tarteaucitron.lang.alertBig;\n        }\n        html += '   </span>';\n        html += '   <div class=\"tarteaucitronAlertButtons\">';\n        html += '   <button id=\"tarteaucitronPersonalize\" onclick=\"tarteaucitron.userInterface.respondAll(true);\">';\n        html += '      ' + tarteaucitron.lang.acceptAll;\n        html += '   </button>';\n        html += '   <button id=\"tarteaucitronCloseAlert\" onclick=\"tarteaucitron.userInterface.openPanel();\">';\n        html += '       ' + tarteaucitron.lang.personalize;\n        html += '   </button>';\n        if (tarteaucitron.parameters.privacyUrl !== \"\") {\n          html += '   <button id=\"tarteaucitronPrivacyUrl\" onclick=\"document.location = tarteaucitron.parameters.privacyUrl\">';\n          html += '       ' + tarteaucitron.lang.privacyUrl;\n          html += '   </button>';\n        }\n        html += '   </div>';\n        html += '</div>';\n        html += '<div id=\"tarteaucitronPercentage\"></div>';\n      }\n      if (tarteaucitron.parameters.showAlertSmall === true) {\n        html += '<div id=\"tarteaucitronAlertSmall\" class=\"tarteaucitronAlertSmall' + orientation + '\">';\n        html += '   <button id=\"tarteaucitronManager\" onclick=\"tarteaucitron.userInterface.openPanel();\">';\n        html += '       ' + tarteaucitron.lang.alertSmall;\n        html += '       <span id=\"tarteaucitronDot\">';\n        html += '           <span id=\"tarteaucitronDotGreen\"></span>';\n        html += '           <span id=\"tarteaucitronDotYellow\"></span>';\n        html += '           <span id=\"tarteaucitronDotRed\"></span>';\n        html += '       </span>';\n        if (tarteaucitron.parameters.cookieslist === true) {\n          html += '   </button><!-- @whitespace';\n          html += '   --><button id=\"tarteaucitronCookiesNumber\" onclick=\"tarteaucitron.userInterface.toggleCookiesList();\">0</button>';\n          html += '   <div id=\"tarteaucitronCookiesListContainer\">';\n          html += '       <button id=\"tarteaucitronClosePanelCookie\" onclick=\"tarteaucitron.userInterface.closePanel();\">';\n          html += '           ' + tarteaucitron.lang.close;\n          html += '       </button><span class=\"tarteaucitronClosePanel-close\">×</span>';\n          html += '       <div class=\"tarteaucitronCookiesListMain\" id=\"tarteaucitronCookiesTitle\">';\n          html += '            <span class=\"tarteaucitronH2\" role=\"heading\" aria-level=\"h2\" id=\"tarteaucitronCookiesNumberBis\">0 cookie</span>';\n          html += '       </div>';\n          html += '       <div id=\"tarteaucitronCookiesList\"></div>';\n          html += '    </div>';\n        } else {\n          html += '   </div>';\n        }\n        html += '</div>';\n      }\n      tarteaucitron.addScript(tarteaucitron.cdn + 'advertising.js?v=' + tarteaucitron.version, '', function () {\n        if (tarteaucitronNoAdBlocker === true || tarteaucitron.parameters.adblocker === false) {\n          // create a wrapper container at the same level than tarteaucitron so we can add an aria-hidden when tarteaucitron is opened\n          /*var wrapper = document.createElement('div');\n          wrapper.id = \"contentWrapper\";\n           while (document.body.firstChild)\n          {\n              wrapper.appendChild(document.body.firstChild);\n          }\n           // Append the wrapper to the body\n          document.body.appendChild(wrapper);*/\n\n          div.id = 'tarteaucitronRoot';\n          body.appendChild(div, body);\n          div.innerHTML = html;\n          if (tarteaucitron.job !== undefined) {\n            tarteaucitron.job = tarteaucitron.cleanArray(tarteaucitron.job);\n            for (index = 0; index < tarteaucitron.job.length; index += 1) {\n              tarteaucitron.addService(tarteaucitron.job[index]);\n            }\n          } else {\n            tarteaucitron.job = [];\n          }\n          tarteaucitron.isAjax = true;\n          tarteaucitron.job.push = function (id) {\n            // ie <9 hack\n            if (typeof tarteaucitron.job.indexOf === 'undefined') {\n              tarteaucitron.job.indexOf = function (obj, start) {\n                var i,\n                  j = this.length;\n                for (i = start || 0; i < j; i += 1) {\n                  if (this[i] === obj) {\n                    return i;\n                  }\n                }\n                return -1;\n              };\n            }\n            if (tarteaucitron.job.indexOf(id) === -1) {\n              Array.prototype.push.call(this, id);\n            }\n            tarteaucitron.launch[id] = false;\n            tarteaucitron.addService(id);\n          };\n          if (document.location.hash === tarteaucitron.hashtag && tarteaucitron.hashtag !== '') {\n            tarteaucitron.userInterface.openPanel();\n          }\n          tarteaucitron.cookie.number();\n          setInterval(tarteaucitron.cookie.number, 60000);\n        }\n      }, tarteaucitron.parameters.adblocker);\n      if (tarteaucitron.parameters.adblocker === true) {\n        setTimeout(function () {\n          if (tarteaucitronNoAdBlocker === false) {\n            html = '<div id=\"tarteaucitronAlertBig\" class=\"tarteaucitronAlertBig' + orientation + '\" style=\"display:block\" role=\"alert\" aria-live=\"polite\">';\n            html += '   <p id=\"tarteaucitronDisclaimerAlert\">';\n            html += '       ' + tarteaucitron.lang.adblock + '<br/>';\n            html += '       <strong>' + tarteaucitron.lang.adblock_call + '</strong>';\n            html += '   </p>';\n            html += '   <button id=\"tarteaucitronPersonalize\" onclick=\"location.reload();\">';\n            html += '       ' + tarteaucitron.lang.reload;\n            html += '   </button>';\n            html += '</div>';\n            html += '<div id=\"tarteaucitronPremium\"></div>';\n\n            // create wrapper container\n            /*var wrapper = document.createElement('div');\n            wrapper.id = \"contentWrapper\";\n             while (document.body.firstChild)\n            {\n                wrapper.appendChild(document.body.firstChild);\n            }\n             // Append the wrapper to the body\n            document.body.appendChild(wrapper);*/\n\n            div.id = 'tarteaucitronRoot';\n            body.appendChild(div, body);\n            div.innerHTML = html;\n            tarteaucitron.pro('!adblocker=true');\n          } else {\n            tarteaucitron.pro('!adblocker=false');\n          }\n        }, 1500);\n      }\n    });\n  });\n  if (tarteaucitron.events.load) {\n    tarteaucitron.events.load();\n  }\n};\n\n//gestion des inputs checkboxs des services\ntarteaucitron.radioBtService = ele => {\n  var cookieBoxElement = document.querySelector('#tarteaucitronAlertBig');\n  cookieBoxElement.setAttribute('style', 'display: none');\n  if (ele.checked) {\n    tarteaucitron.userInterface.respond(ele, true);\n  } else {\n    tarteaucitron.userInterface.respond(ele, false);\n  }\n};\n\n//gestion des inputs checkboxs de \"all services\"\ntarteaucitron.radioBtAllService = ele => {\n  var cookieBoxElement = document.querySelector('#tarteaucitronAlertBig');\n  cookieBoxElement.setAttribute('style', 'display: none');\n  document.getElementById('tarteaucitronScrollbarAdjust').style['opacity'] = 1;\n  if (ele.checked) {\n    tarteaucitron.userInterface.respondAll(true);\n  } else {\n    tarteaucitron.userInterface.respondAll(false);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/tarteaucitron.js\n");

/***/ }),

/***/ "./src/js/utils/constants.js":
/*!***********************************!*\
  !*** ./src/js/utils/constants.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"breakpoint\": () => (/* binding */ breakpoint),\n/* harmony export */   \"colors\": () => (/* binding */ colors),\n/* harmony export */   \"theme\": () => (/* binding */ theme)\n/* harmony export */ });\nvar colors = {\n  black: '#000000'\n};\nvar breakpoint = 768;\nvar theme = {\n  //colors\n  dark: '#000000',\n  light: '#FFFFFF',\n  green: '#00BD80',\n  yellow: '#ECCA2D',\n  blue: '#1CADEF',\n  pink: '#FD7FC7',\n  red: '#F3251C',\n  grey: '#808080',\n  mobile: '768px',\n  //margins\n  margins: {\n    tiny: '5px',\n    small: '10px',\n    normal: '20px',\n    big: '30px',\n    extra: '60px'\n  },\n  //headers\n  headers: {\n    h1: '80px',\n    h2: '70px',\n    h3: '40px',\n    h4: '30px',\n    p: '25px',\n    desktop: {\n      h1: '80px',\n      h2: '70px',\n      h3: '40px',\n      h4: '30px',\n      p: '25px'\n    },\n    mobile: {\n      h1: '35px',\n      h2: '30px',\n      h3: '20px',\n      h4: '18px',\n      p: '16px'\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvdXRpbHMvY29uc3RhbnRzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQU1BLE1BQU0sR0FBRztFQUNsQkMsS0FBSyxFQUFFO0FBQ1gsQ0FBQztBQUVNLElBQU1DLFVBQVUsR0FBRyxHQUFHO0FBRXRCLElBQU1DLEtBQUssR0FBRztFQUNqQjtFQUNBQyxJQUFJLEVBQUUsU0FBUztFQUNmQyxLQUFLLEVBQUUsU0FBUztFQUNoQkMsS0FBSyxFQUFFLFNBQVM7RUFDaEJDLE1BQU0sRUFBRSxTQUFTO0VBQ2pCQyxJQUFJLEVBQUUsU0FBUztFQUNmQyxJQUFJLEVBQUUsU0FBUztFQUNmQyxHQUFHLEVBQUUsU0FBUztFQUNkQyxJQUFJLEVBQUUsU0FBUztFQUVmQyxNQUFNLEVBQUUsT0FBTztFQUVmO0VBQ0FDLE9BQU8sRUFBRTtJQUNMQyxJQUFJLEVBQUUsS0FBSztJQUNYQyxLQUFLLEVBQUUsTUFBTTtJQUNiQyxNQUFNLEVBQUUsTUFBTTtJQUNkQyxHQUFHLEVBQUUsTUFBTTtJQUNYQyxLQUFLLEVBQUU7RUFDWCxDQUFDO0VBRUQ7RUFDQUMsT0FBTyxFQUFFO0lBQ0xDLEVBQUUsRUFBRSxNQUFNO0lBQ1ZDLEVBQUUsRUFBRSxNQUFNO0lBQ1ZDLEVBQUUsRUFBRSxNQUFNO0lBQ1ZDLEVBQUUsRUFBRSxNQUFNO0lBQ1ZDLENBQUMsRUFBRSxNQUFNO0lBQ1RDLE9BQU8sRUFBRTtNQUNMTCxFQUFFLEVBQUUsTUFBTTtNQUNWQyxFQUFFLEVBQUUsTUFBTTtNQUNWQyxFQUFFLEVBQUUsTUFBTTtNQUNWQyxFQUFFLEVBQUUsTUFBTTtNQUNWQyxDQUFDLEVBQUU7SUFDUCxDQUFDO0lBQ0RaLE1BQU0sRUFBRTtNQUNKUSxFQUFFLEVBQUUsTUFBTTtNQUNWQyxFQUFFLEVBQUUsTUFBTTtNQUNWQyxFQUFFLEVBQUUsTUFBTTtNQUNWQyxFQUFFLEVBQUUsTUFBTTtNQUNWQyxDQUFDLEVBQUU7SUFDUDtFQUNKO0FBQ0osQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0B3ZWFyZWF0aGxvbi9mcm9udGVuZC13ZWJwYWNrLWJvaWxlcnBsYXRlLy4vc3JjL2pzL3V0aWxzL2NvbnN0YW50cy5qcz9kNzk0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBjb2xvcnMgPSB7XG4gICAgYmxhY2s6ICcjMDAwMDAwJ1xufTtcblxuZXhwb3J0IGNvbnN0IGJyZWFrcG9pbnQgPSA3Njg7XG5cbmV4cG9ydCBjb25zdCB0aGVtZSA9IHtcbiAgICAvL2NvbG9yc1xuICAgIGRhcms6ICcjMDAwMDAwJyxcbiAgICBsaWdodDogJyNGRkZGRkYnLFxuICAgIGdyZWVuOiAnIzAwQkQ4MCcsXG4gICAgeWVsbG93OiAnI0VDQ0EyRCcsXG4gICAgYmx1ZTogJyMxQ0FERUYnLFxuICAgIHBpbms6ICcjRkQ3RkM3JyxcbiAgICByZWQ6ICcjRjMyNTFDJyxcbiAgICBncmV5OiAnIzgwODA4MCcsXG5cbiAgICBtb2JpbGU6ICc3NjhweCcsXG5cbiAgICAvL21hcmdpbnNcbiAgICBtYXJnaW5zOiB7XG4gICAgICAgIHRpbnk6ICc1cHgnLFxuICAgICAgICBzbWFsbDogJzEwcHgnLFxuICAgICAgICBub3JtYWw6ICcyMHB4JyxcbiAgICAgICAgYmlnOiAnMzBweCcsXG4gICAgICAgIGV4dHJhOiAnNjBweCdcbiAgICB9LFxuXG4gICAgLy9oZWFkZXJzXG4gICAgaGVhZGVyczoge1xuICAgICAgICBoMTogJzgwcHgnLFxuICAgICAgICBoMjogJzcwcHgnLFxuICAgICAgICBoMzogJzQwcHgnLFxuICAgICAgICBoNDogJzMwcHgnLFxuICAgICAgICBwOiAnMjVweCcsXG4gICAgICAgIGRlc2t0b3A6IHtcbiAgICAgICAgICAgIGgxOiAnODBweCcsXG4gICAgICAgICAgICBoMjogJzcwcHgnLFxuICAgICAgICAgICAgaDM6ICc0MHB4JyxcbiAgICAgICAgICAgIGg0OiAnMzBweCcsXG4gICAgICAgICAgICBwOiAnMjVweCdcbiAgICAgICAgfSxcbiAgICAgICAgbW9iaWxlOiB7XG4gICAgICAgICAgICBoMTogJzM1cHgnLFxuICAgICAgICAgICAgaDI6ICczMHB4JyxcbiAgICAgICAgICAgIGgzOiAnMjBweCcsXG4gICAgICAgICAgICBoNDogJzE4cHgnLFxuICAgICAgICAgICAgcDogJzE2cHgnXG4gICAgICAgIH1cbiAgICB9XG59OyJdLCJuYW1lcyI6WyJjb2xvcnMiLCJibGFjayIsImJyZWFrcG9pbnQiLCJ0aGVtZSIsImRhcmsiLCJsaWdodCIsImdyZWVuIiwieWVsbG93IiwiYmx1ZSIsInBpbmsiLCJyZWQiLCJncmV5IiwibW9iaWxlIiwibWFyZ2lucyIsInRpbnkiLCJzbWFsbCIsIm5vcm1hbCIsImJpZyIsImV4dHJhIiwiaGVhZGVycyIsImgxIiwiaDIiLCJoMyIsImg0IiwicCIsImRlc2t0b3AiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/utils/constants.js\n");

/***/ }),

/***/ "./src/scss/app.scss":
/*!***************************!*\
  !*** ./src/scss/app.scss ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2Nzcy9hcHAuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2VhcmVhdGhsb24vZnJvbnRlbmQtd2VicGFjay1ib2lsZXJwbGF0ZS8uL3NyYy9zY3NzL2FwcC5zY3NzPzYyOWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scss/app.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;